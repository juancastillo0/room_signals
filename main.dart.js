// Generated by dart2js (NullSafetyMode.sound, csp), the Dart to JavaScript compiler version: 2.17.6.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          A.throwLateFieldADI(name);
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number")
      funType += typesOffset;
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var A = {JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldADI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has been assigned during initialization.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_, type$.int);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_, type$.int);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    Sort_sort(a, compare, $E) {
      A.Sort__doSort(a, 0, J.get$length$asx(a) - 1, compare, $E);
    },
    Sort__doSort(a, left, right, compare, $E) {
      if (right - left <= 32)
        A.Sort__insertionSort(a, left, right, compare, $E);
      else
        A.Sort__dualPivotQuicksort(a, left, right, compare, $E);
    },
    Sort__insertionSort(a, left, right, compare, $E) {
      var i, t1, el, j, t2, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (j > left) {
            t2 = compare.call$2(t1.$index(a, j - 1), el);
            if (typeof t2 !== "number")
              return t2.$gt();
            t2 = t2 > 0;
          } else
            t2 = false;
          if (!t2)
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort(a, left, right, compare, $E) {
      var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal,
        sixth = B.JSInt_methods._tdivFast$1(right - left + 1, 6),
        index1 = left + sixth,
        index5 = right - sixth,
        index3 = B.JSInt_methods._tdivFast$1(left + right, 2),
        index2 = index3 - sixth,
        index4 = index3 + sixth,
        t1 = J.getInterceptor$asx(a),
        el1 = t1.$index(a, index1),
        el2 = t1.$index(a, index2),
        el3 = t1.$index(a, index3),
        el4 = t1.$index(a, index4),
        el5 = t1.$index(a, index5),
        t2 = compare.call$2(el1, el2);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t2 = compare.call$2(el1, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el1, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el3, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      t2 = compare.call$2(el2, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) > 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) > 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      A.Sort__doSort(a, left, less - 2, compare, $E);
      A.Sort__doSort(a, great + 2, right, compare, $E);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        A.Sort__doSort(a, less, great, compare, $E);
      } else
        A.Sort__doSort(a, less, great, compare, $E);
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    GeneralConstantMap__constantMapHashCode(key) {
      if (typeof key == "number")
        return B.JSNumber_methods.get$hashCode(key);
      if (type$.Symbol._is(key))
        return key.get$hashCode(key);
      if (type$.Type._is(key))
        return A.Primitives_objectHashCode(key);
      return A.objectHashCode(key);
    },
    GeneralConstantMap__typeTest($T) {
      return new A.GeneralConstantMap__typeTest_closure($T);
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      if (3 >= match.length)
        return A.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((B.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, t1, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        t1 = dispatchName !== "Object" && dispatchName !== "";
        if (t1)
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string")
            t1 = constructorName !== "Object" && constructorName !== "";
          else
            t1 = false;
          if (t1)
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_valueFromDecomposedDate(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
      var value,
        jsMonth = month - 1;
      if (0 <= years && years < 100) {
        years += 400;
        jsMonth -= 4800;
      }
      value = isUtc ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
      if (isNaN(value) || value < -864e13 || value > 864e13)
        return null;
      return value;
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    iae(argument) {
      throw A.wrapException(A.argumentErrorValue(argument));
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$(index, indexable, _s5_, null, $length);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      var wrapper, t1;
      if (ex == null)
        ex = new A.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? type$.Object._as(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              t1 = A.S(message);
              return A.saveStackTrace(ex, new A.NullError(t1 + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1) {
              A._asString(message);
              return A.saveStackTrace(ex, new A.NullError(message, match == null ? _null : match.method));
            }
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new A._StackTrace(exception);
    },
    objectHashCode(object) {
      if (object == null || typeof object != "object")
        return J.get$hashCode$(object);
      else
        return A.Primitives_objectHashCode(object);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else
        $constructor = function tear_off(a, b) {
          this.$initialize(a, b);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      var arity, t1;
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      arity = $function.length;
      t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    boolConversionCheck(value) {
      if (value == null)
        A.assertThrow("boolean expression must not be null");
      return value;
    },
    assertThrow(message) {
      throw A.wrapException(new A._AssertionError(message));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A.CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var t1 = A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index = receiver.indexOf(pattern, startIndex);
      if (index < 0)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    GeneralConstantMap__typeTest_closure: function GeneralConstantMap__typeTest_closure(t0) {
      this.T = t0;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _AssertionError: function _AssertionError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldADI(fieldName) {
      return A.throwExpression(A.LateError$fieldADI(fieldName));
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1.__late_helper$_value = t1;
    },
    _lateReadCheck(value, $name) {
      if (value === $)
        throw A.wrapException(new A.LateError("Field '" + $name + "' has not been initialized."));
      return value;
    },
    _lateWriteOnceCheck(value, $name) {
      if (value !== $)
        throw A.wrapException(new A.LateError("Field '" + $name + "' has already been initialized."));
    },
    _lateInitializeOnceCheck(value, $name) {
      if (value !== $)
        throw A.wrapException(A.LateError$fieldADI($name));
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this.__late_helper$_value = null;
    },
    _ensureNativeList(list) {
      return list;
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      var rti;
      if (object instanceof A.Object) {
        rti = object.$ti;
        return rti != null ? rti : A._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeType(object) {
      var rti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      return A.createRuntimeType(rti == null ? A.instanceType(object) : rti);
    },
    createRuntimeType(rti) {
      var recipe, starErasedRecipe, starErasedRti,
        type = rti._cachedRuntimeType;
      if (type != null)
        return type;
      recipe = rti._canonicalRecipe;
      starErasedRecipe = recipe.replace(/\*/g, "");
      if (starErasedRecipe === recipe)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      type = starErasedRti._cachedRuntimeType;
      return rti._cachedRuntimeType = type == null ? starErasedRti._cachedRuntimeType = new A._Type(starErasedRti) : type;
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, isFn, $name, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      unstarred = t1 === 6 ? testRti._primary : testRti;
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarred._kind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A._isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = A.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A.instanceOrFunctionType(object, testRti), A._rtiToString(testRti, null))));
    },
    checkTypeBound(type, bound, variable, methodName) {
      var _null = null;
      if (A._isSubtype(init.typeUniverse, type, _null, bound, _null))
        return type;
      throw A.wrapException(A._TypeError$fromMessage("The type argument '" + A._rtiToString(type, _null) + "' is not a subtype of the type variable bound '" + A._rtiToString(bound, _null) + "' of type variable '" + variable + "' in '" + methodName + "'."));
    },
    _Error_compose(object, objectRti, checkedTypeDescription) {
      var objectDescription = A.Error_safeToString(object);
      return objectDescription + ": type '" + A._rtiToString(objectRti == null ? A.instanceType(object) : objectRti, null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, null, type));
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (!(t4 >= 0))
            return A.ioore(genericContext, t4);
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = A._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, head, base, parameters, optionalPositional, named, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              t3 = parser.u;
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              head = t1.pop();
              if (typeof head == "string")
                t1.push(A._Universe__lookupInterfaceRti(t3, head, array));
              else {
                base = A._Parser_toType(t3, parser.e, head);
                switch (base._kind) {
                  case 11:
                    t1.push(A._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                    break;
                  default:
                    t1.push(A._Universe__lookupBindingRti(t3, base, array));
                    break;
                }
              }
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              t3 = parser.u;
              parameters = new A._FunctionParameters();
              optionalPositional = t3.sEA;
              named = t3.sEA;
              head = t1.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = t1.pop();
                    break;
                  case -2:
                    named = t1.pop();
                    break;
                  default:
                    t1.push(head);
                    break;
                }
              else
                t1.push(head);
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._named = named;
              t1.push(A._Universe__lookupFunctionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parameters));
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return A._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i, t1, t2,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      t1 = s._rest;
      t2 = t._rest;
      return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i, t1, t2,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i) {
        t1 = sArgs[i];
        t2 = tArgs[i];
        if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
          return false;
      }
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType(t) {
      var t1;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, type$.void_Function._as(callback));
    },
    Timer__createTimer(duration, callback) {
      return A._TimerImpl$(duration._duration / 1000 | 0, callback);
    },
    Timer__createPeriodicTimer(duration, callback) {
      return A._TimerImpl$periodic(duration._duration / 1000 | 0, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _TimerImpl$periodic(milliseconds, callback) {
      var t1 = new A._TimerImpl(false);
      t1._TimerImpl$periodic$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    _asyncStarHelper(object, bodyFunctionOrErrorCode, controller) {
      var t1, t2, t3,
        _s10_ = "controller";
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeWithValue$1(null);
        else
          A._lateReadCheck(controller.___AsyncStarStreamController_controller, _s10_).close$0(0);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeError$2(A.unwrapException(object), A.getTraceFromException(object));
        else {
          t1 = A.unwrapException(object);
          t2 = A.getTraceFromException(object);
          t3 = A._lateReadCheck(controller.___AsyncStarStreamController_controller, _s10_);
          t3.addError$2(t1, t2);
          A._lateReadCheck(controller.___AsyncStarStreamController_controller, _s10_).close$0(0);
        }
        return;
      }
      type$.void_Function_int_dynamic._as(bodyFunctionOrErrorCode);
      if (object instanceof A._IterationMarker) {
        if (controller.cancelationFuture != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          A._lateReadCheck(controller.___AsyncStarStreamController_controller, _s10_).add$1(0, controller.$ti._precomputed1._as(t1));
          A.scheduleMicrotask(new A._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          t1 = controller.$ti._eval$1("Stream<1>")._as(type$.Stream_dynamic._as(object.value));
          A._lateReadCheck(controller.___AsyncStarStreamController_controller, _s10_).addStream$2$cancelOnError(t1, false).then$1$1(new A._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode), type$.Null);
          return;
        }
      }
      A._awaitOnObject(object, bodyFunctionOrErrorCode);
    },
    _streamOfController(controller) {
      var t1 = A._lateReadCheck(controller.___AsyncStarStreamController_controller, "controller");
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    _AsyncStarStreamController$(body, $T) {
      var t1 = new A._AsyncStarStreamController($T._eval$1("_AsyncStarStreamController<0>"));
      t1._AsyncStarStreamController$1(body, $T);
      return t1;
    },
    _makeAsyncStarStreamController(body, $T) {
      return A._AsyncStarStreamController$(body, $T);
    },
    _IterationMarker_yieldStar(values) {
      return new A._IterationMarker(values, 1);
    },
    _IterationMarker_endOfIteration() {
      return B._IterationMarker_null_2;
    },
    _IterationMarker_yieldSingle(value) {
      return new A._IterationMarker(value, 0);
    },
    _IterationMarker_uncaughtError(error) {
      return new A._IterationMarker(error, 3);
    },
    _makeSyncStarIterable(body, $T) {
      return new A._SyncStarIterable(body, $T._eval$1("_SyncStarIterable<0>"));
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B.C__StringStackTrace;
    },
    Future_wait(futures, $T) {
      var error, stackTrace, handleError, future, pos, e, st, t2, t3, exception, _box_0 = {}, cleanUp = null,
        eagerError = false,
        t1 = $T._eval$1("_Future<List<0>>"),
        _future = new A._Future($.Zone__current, t1);
      _box_0.values = null;
      _box_0.remaining = 0;
      error = A._Cell$named("error");
      stackTrace = A._Cell$named("stackTrace");
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future, error, stackTrace);
      try {
        for (t2 = J.get$iterator$ax(futures), t3 = type$.Null; t2.moveNext$0();) {
          future = t2.get$current();
          pos = _box_0.remaining;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, cleanUp, eagerError, error, stackTrace, $T), handleError, t3);
          ++_box_0.remaining;
        }
        t2 = _box_0.remaining;
        if (t2 === 0) {
          t2 = _future;
          t2._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t2;
        }
        _box_0.values = A.List_List$filled(t2, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || A.boolConversionCheck(eagerError)) {
          t2 = e;
          stackTrace = st;
          A.checkNotNullable(t2, "error", type$.Object);
          $.Zone__current !== B.C__RootZone;
          if (stackTrace == null)
            stackTrace = A.AsyncError_defaultStackTrace(t2);
          t1 = new A._Future($.Zone__current, t1);
          t1._asyncCompleteError$2(t2, stackTrace);
          return t1;
        } else {
          error.__late_helper$_value = e;
          stackTrace.__late_helper$_value = st;
        }
      }
      return _future;
    },
    _Future__chainCoreFuture(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, (t2 & 4) !== 0;)
        source = t1._as(source._resultOrListeners);
      if ((t2 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = target._state & 1 | 4;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, t4, _box_0, t5, t6, hasError, asyncError, nextListener, nextListener0, sourceResult, t7, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t5 = t1._state;
        t6 = (t5 & 16) === 0;
        hasError = !t6;
        if (listeners == null) {
          if (hasError && (t5 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            A._rootHandleError(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t5 = _box_1.source;
        sourceResult = t5._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t6) {
          t7 = t1.state;
          t7 = (t7 & 1) !== 0 || (t7 & 15) === 8;
        } else
          t7 = true;
        if (t7) {
          zone = t1.result._zone;
          if (hasError) {
            t5 = t5._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            t2._as(sourceResult);
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t6) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t4._is(t1)) {
            t5 = _box_0.listener.$ti;
            t5 = t5._eval$1("Future<2>")._is(t1) || !t5._rest[1]._is(t1);
          } else
            t5 = false;
          if (t5) {
            t4._as(t1);
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFuture(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    StreamController_StreamController(onCancel, onListen, onPause, onResume, sync, $T) {
      return sync ? new A._SyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1("_SyncStreamController<0>")) : new A._AsyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1("_AsyncStreamController<0>"));
    },
    _runGuarded(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    _ControllerSubscription$(_controller, onData, onError, onDone, cancelOnError, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0;
      return new A._ControllerSubscription(_controller, A._BufferingStreamSubscription__registerDataHandler(t1, onData, $T), A._BufferingStreamSubscription__registerErrorHandler(t1, onError), A._BufferingStreamSubscription__registerDoneHandler(t1, onDone), t1, t2, $T._eval$1("_ControllerSubscription<0>"));
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData, $T) {
      var t1 = handleData == null ? A.async___nullDataHandler$closure() : handleData;
      return type$.$env_1_1_void._bind$1($T)._eval$1("1(2)")._as(t1);
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.void_Function_Object._is(handleError))
        return type$.dynamic_Function_Object._as(handleError);
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _BufferingStreamSubscription__registerDoneHandler(zone, handleDone) {
      var t1 = handleDone == null ? A.async___nullDoneHandler$closure() : handleDone;
      return type$.void_Function._as(t1);
    },
    _nullDataHandler(value) {
    },
    _nullErrorHandler(error, stackTrace) {
      A._rootHandleError(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    _nullDoneHandler() {
    },
    _DoneStreamSubscription$(_onDone, $T) {
      var t1 = new A._DoneStreamSubscription($.Zone__current, _onDone, $T._eval$1("_DoneStreamSubscription<0>"));
      t1._schedule$0();
      return t1;
    },
    _cancelAndValue(subscription, future, value) {
      var cancelFuture = subscription.cancel$0(),
        t1 = $.$get$Future__nullFuture();
      if (cancelFuture !== t1)
        cancelFuture.whenComplete$1(new A._cancelAndValue_closure(future, value));
      else
        future._complete$1(value);
    },
    _ForwardingStreamSubscription$(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0;
      t2 = new A._ForwardingStreamSubscription(_stream, A._BufferingStreamSubscription__registerDataHandler(t1, onData, $T), A._BufferingStreamSubscription__registerErrorHandler(t1, onError), A._BufferingStreamSubscription__registerDoneHandler(t1, onDone), t1, t2, $S._eval$1("@<0>")._bind$1($T)._eval$1("_ForwardingStreamSubscription<1,2>"));
      t2._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, cancelOnError, $S, $T);
      return t2;
    },
    _addErrorWithReplacement(sink, error, stackTrace) {
      sink._addError$2(error, stackTrace);
    },
    Timer_Timer$periodic(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createPeriodicTimer(duration, type$.void_Function_Timer._as(callback));
      return A.Timer__createPeriodicTimer(duration, type$.void_Function_Timer._as(t1.bindUnaryCallbackGuarded$1$1(callback, type$.Timer)));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.milliseconds = t1;
      _.start = t2;
      _.callback = t3;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {
      var _ = this;
      _.___AsyncStarStreamController_controller = $;
      _.isSuspended = false;
      _.cancelationFuture = null;
      _.$ti = t0;
    },
    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0) {
      this._resumeBody = t0;
    },
    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {
      this.$this = t0;
      this._resumeBody = t1;
    },
    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0, t1) {
      this.$this = t0;
      this.body = t1;
    },
    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {
      this.body = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _SyncBroadcastStreamController__sendError_closure: function _SyncBroadcastStreamController__sendError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {
      this.$this = t0;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
      _.error = t4;
      _.stackTrace = t5;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.cleanUp = t3;
      _.eagerError = t4;
      _.error = t5;
      _.stackTrace = t6;
      _.T = t7;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    Stream_first_closure: function Stream_first_closure(t0) {
      this.future = t0;
    },
    Stream_first_closure0: function Stream_first_closure0(t0, t1, t2) {
      this.$this = t0;
      this.subscription = t1;
      this.future = t2;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamView: function StreamView(t0, t1) {
      this._stream = t0;
      this.$ti = t1;
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _SyncStreamController: function _SyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._controller = t0;
      _._onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _StreamSinkWrapper: function _StreamSinkWrapper(t0, t1) {
      this._target = t0;
      this.$ti = t1;
    },
    _AddStreamState: function _AddStreamState() {
    },
    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {
      this.$this = t0;
    },
    _StreamControllerAddStreamState: function _StreamControllerAddStreamState(t0, t1, t2, t3) {
      var _ = this;
      _.varData = t0;
      _.addStreamFuture = t1;
      _.addSubscription = t2;
      _.$ti = t3;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedError: function _DelayedError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamImplEvents: function _StreamImplEvents(t0) {
      var _ = this;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _._state = 0;
      _.$ti = t0;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._zone = t0;
      _._state = 0;
      _._onDone = t1;
      _.$ti = t2;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _cancelAndValue_closure: function _cancelAndValue_closure(t0, t1) {
      this.future = t0;
      this.value = t1;
    },
    _ForwardingStream: function _ForwardingStream() {
    },
    _ForwardingStreamSubscription: function _ForwardingStreamSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._stream = t0;
      _._subscription = null;
      _._onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _WhereStream: function _WhereStream(t0, t1, t2) {
      this._test = t0;
      this._async$_source = t1;
      this.$ti = t2;
    },
    _MapStream: function _MapStream(t0, t1, t2) {
      this._transform = t0;
      this._async$_source = t1;
      this.$ti = t2;
    },
    _TakeStream: function _TakeStream(t0, t1, t2) {
      this._async$_count = t0;
      this._async$_source = t1;
      this.$ti = t2;
    },
    _StateStreamSubscription: function _StateStreamSubscription(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._subState = t0;
      _._stream = t1;
      _._subscription = null;
      _._onData = t2;
      _._onError = t3;
      _._onDone = t4;
      _._zone = t5;
      _._state = t6;
      _._pending = _._cancelFuture = null;
      _.$ti = t7;
    },
    _TakeWhileStream: function _TakeWhileStream(t0, t1, t2) {
      this._test = t0;
      this._async$_source = t1;
      this.$ti = t2;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    HashMap_HashMap(equals, hashCode, isValidKey, $K, $V) {
      if (isValidKey == null)
        if (hashCode == null) {
          if (equals == null)
            return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
          hashCode = A.collection___defaultHashCode$closure();
        } else {
          if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
            return new A._IdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_IdentityHashMap<1,2>"));
          if (equals == null)
            equals = A.collection___defaultEquals$closure();
        }
      else {
        if (hashCode == null)
          hashCode = A.collection___defaultHashCode$closure();
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._CustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    _CustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._CustomHashMap_closure($K);
      return new A._CustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_CustomHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap(hashCode, isValidKey, $K, $V) {
      return A._LinkedCustomHashMap$(A.collection___defaultEquals$closure(), hashCode, isValidKey, $K, $V);
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    _LinkedCustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._LinkedCustomHashMap_closure($K);
      return new A._LinkedCustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedCustomHashMap<1,2>"));
    },
    HashSet_HashSet($E) {
      return new A._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    _defaultEquals(a, b) {
      return J.$eq$(a, b);
    },
    _defaultHashCode(a) {
      return J.get$hashCode$(a);
    },
    IterableBase_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1, _i,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A._isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        B.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _CustomHashMap: function _CustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t3;
    },
    _CustomHashMap_closure: function _CustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedCustomHashMap: function _LinkedCustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t3;
    },
    _LinkedCustomHashMap_closure: function _LinkedCustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._elements = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._elements = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    IterableBase: function IterableBase() {
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    MapMixin_entries_closure: function MapMixin_entries_closure(t0) {
      this.$this = t0;
    },
    SetMixin: function SetMixin() {
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _SetBase_Object_SetMixin: function _SetBase_Object_SetMixin() {
    },
    __SetBase_Object_SetMixin: function __SetBase_Object_SetMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer("");
      A._JsonStringStringifier_printOn(object, output, toEncodable, indent);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonStringStringifier_printOn(object, output, toEncodable, indent) {
      var stringifier = A._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._convert$_parent = t0;
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = this._carry = 0;
      this._buffer = t0;
    },
    identityHashCode(object) {
      return A.objectHashCode(object);
    },
    Expando__checkType(object) {
      var t1 = typeof object == "string";
      if (t1)
        throw A.wrapException(A.ArgumentError$value(object, string$.Expand, null));
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    Error__objectToString(object) {
      if (object instanceof A.Closure)
        return object.toString$0(0);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list, $E);
    },
    List_List$of(elements, growable, $E) {
      var t1;
      if (growable)
        return A.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(A.List_List$_of(elements, $E), $E);
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var t1 = A.Primitives_stringFromNativeUint8List(charCodes, start, A.RangeError_checkValidRange(start, end, charCodes.length));
      return t1;
    },
    RegExp_RegExp(source) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, false, true, false, false, false));
    },
    identical(a, b) {
      return a == null ? b == null : a === b;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte, t3,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
        t1 = t1.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      A._instanceType(encoding)._eval$1("Codec.S")._as(text);
      bytes = encoding.get$encoder().convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128) {
          t3 = byte >>> 4;
          if (!(t3 < 8))
            return A.ioore(canonicalTable, t3);
          t3 = (canonicalTable[t3] & 1 << (byte & 15)) !== 0;
        } else
          t3 = false;
        if (t3)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    DateTime_parse(formattedString) {
      var t1, t2, t3, years, month, day, hour, minute, second, milliAndMicroseconds, millisecond, tzSign, sign, hourDifference, isUtc, value, _null = null,
        match = $.$get$DateTime__parseFormat().firstMatch$1(formattedString);
      if (match != null) {
        t1 = new A.DateTime_parse_parseIntOrZero();
        t2 = match._match;
        if (1 >= t2.length)
          return A.ioore(t2, 1);
        t3 = t2[1];
        t3.toString;
        years = A.int_parse(t3, _null);
        if (2 >= t2.length)
          return A.ioore(t2, 2);
        t3 = t2[2];
        t3.toString;
        month = A.int_parse(t3, _null);
        if (3 >= t2.length)
          return A.ioore(t2, 3);
        t3 = t2[3];
        t3.toString;
        day = A.int_parse(t3, _null);
        if (4 >= t2.length)
          return A.ioore(t2, 4);
        hour = t1.call$1(t2[4]);
        if (5 >= t2.length)
          return A.ioore(t2, 5);
        minute = t1.call$1(t2[5]);
        if (6 >= t2.length)
          return A.ioore(t2, 6);
        second = t1.call$1(t2[6]);
        if (7 >= t2.length)
          return A.ioore(t2, 7);
        milliAndMicroseconds = new A.DateTime_parse_parseMilliAndMicroseconds().call$1(t2[7]);
        millisecond = B.JSInt_methods._tdivFast$1(milliAndMicroseconds, 1000);
        t3 = t2.length;
        if (8 >= t3)
          return A.ioore(t2, 8);
        if (t2[8] != null) {
          if (9 >= t3)
            return A.ioore(t2, 9);
          tzSign = t2[9];
          if (tzSign != null) {
            sign = tzSign === "-" ? -1 : 1;
            if (10 >= t3)
              return A.ioore(t2, 10);
            t3 = t2[10];
            t3.toString;
            hourDifference = A.int_parse(t3, _null);
            if (11 >= t2.length)
              return A.ioore(t2, 11);
            minute -= sign * (t1.call$1(t2[11]) + 60 * hourDifference);
          }
          isUtc = true;
        } else
          isUtc = false;
        value = A.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, millisecond + B.JSNumber_methods.round$0(milliAndMicroseconds % 1000 / 1000), isUtc);
        if (value == null)
          throw A.wrapException(A.FormatException$("Time out of range", formattedString, _null));
        return A.DateTime$_withValue(value, isUtc);
      } else
        throw A.wrapException(A.FormatException$("Invalid date format", formattedString, _null));
    },
    DateTime$_withValue(_value, isUtc) {
      var t1;
      if (Math.abs(_value) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + _value, null));
      A.checkNotNullable(isUtc, "isUtc", type$.bool);
      return new A.DateTime(_value, isUtc);
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__sixDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "+";
      if (absN >= 100000)
        return sign + absN;
      return sign + "0" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Error__objectToString(object);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name, $T) {
      return argument;
    },
    RangeError$(message) {
      var _null = null;
      return new A.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw A.wrapException(A.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$(invalidValue, indexable, $name, message, $length) {
      var t1 = A._asInt($length == null ? J.get$length$asx(indexable) : $length);
      return new A.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, userInfoStart, userInfo, host, portNumber, port, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((B.JSString_methods._codeUnitAt$1(uri, 4) ^ 58) * 3 | B.JSString_methods._codeUnitAt$1(uri, 0) ^ 100 | B.JSString_methods._codeUnitAt$1(uri, 1) ^ 97 | B.JSString_methods._codeUnitAt$1(uri, 2) ^ 116 | B.JSString_methods._codeUnitAt$1(uri, 3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      B.JSArray_methods.$indexSet(indices, 0, 0);
      B.JSArray_methods.$indexSet(indices, 1, -1);
      B.JSArray_methods.$indexSet(indices, 2, -1);
      B.JSArray_methods.$indexSet(indices, 7, -1);
      B.JSArray_methods.$indexSet(indices, 3, 0);
      B.JSArray_methods.$indexSet(indices, 4, 0);
      B.JSArray_methods.$indexSet(indices, 5, end);
      B.JSArray_methods.$indexSet(indices, 6, end);
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        B.JSArray_methods.$indexSet(indices, 7, end);
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = _null;
          isSimple = false;
        } else {
          t1 = portStart > 0;
          if (t1 && portStart + 1 === pathStart) {
            scheme = _null;
            isSimple = false;
          } else {
            if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
              t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
            else
              t2 = true;
            if (t2) {
              scheme = _null;
              isSimple = false;
            } else {
              if (schemeEnd === 4)
                if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                  if (hostStart <= 0) {
                    if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                      schemeAuth = "file:///";
                      delta = 3;
                    } else {
                      schemeAuth = "file://";
                      delta = 2;
                    }
                    uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                    schemeEnd -= 0;
                    t1 = delta - 0;
                    queryStart += t1;
                    fragmentStart += t1;
                    end = uri.length;
                    hostStart = 7;
                    portStart = 7;
                    pathStart = 7;
                  } else if (pathStart === queryStart) {
                    ++fragmentStart;
                    queryStart0 = queryStart + 1;
                    uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                    ++end;
                    queryStart = queryStart0;
                  }
                  scheme = "file";
                } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                  if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                    fragmentStart -= 3;
                    pathStart0 = pathStart - 3;
                    queryStart -= 3;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "http";
                } else
                  scheme = _null;
              else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                  fragmentStart -= 4;
                  pathStart0 = pathStart - 4;
                  queryStart -= 4;
                  uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                  end -= 3;
                  pathStart = pathStart0;
                }
                scheme = "https";
              } else
                scheme = _null;
              isSimple = true;
            }
          }
        }
      else
        scheme = _null;
      if (isSimple) {
        if (end < uri.length) {
          uri = B.JSString_methods.substring$2(uri, 0, end);
          schemeEnd -= 0;
          hostStart -= 0;
          portStart -= 0;
          pathStart -= 0;
          queryStart -= 0;
          fragmentStart -= 0;
        }
        return new A._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        } else
          port = _null;
      } else {
        port = _null;
        host = port;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri__parseIPv4Address(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(host, i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          if (!(partIndex < 4))
            return A.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      if (!(partIndex < 4))
        return A.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j, t2, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(host, i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (B.JSString_methods.codeUnitAt$1(host, i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            B.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          B.JSArray_methods.add$1(parts, (last[0] << 8 | last[1]) >>> 0);
          B.JSArray_methods.add$1(parts, (last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            if (!(index >= 0 && index < 16))
              return A.ioore(bytes, index);
            bytes[index] = 0;
            t2 = index + 1;
            if (!(t2 < 16))
              return A.ioore(bytes, t2);
            bytes[t2] = 0;
            index += 2;
          }
        else {
          t2 = B.JSInt_methods._shrOtherPositive$1(value, 8);
          if (!(index >= 0 && index < 16))
            return A.ioore(bytes, index);
          bytes[index] = t2;
          t2 = index + 1;
          if (!(t2 < 16))
            return A.ioore(bytes, t2);
          bytes[t2] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__makePort(port, scheme) {
      var t1 = A._Uri__defaultPort(scheme);
      if (port === t1)
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (start === end)
        return "";
      if (B.JSString_methods.codeUnitAt$1(host, start) === 91) {
        t1 = end - 1;
        if (B.JSString_methods.codeUnitAt$1(host, t1) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = A._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t2, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (B.JSString_methods.codeUnitAt$1(host, i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, tail, sourceLength, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t2 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t1 = char >>> 4;
            if (!(t1 < 8))
              return A.ioore(B.List_nxB, t1);
            t1 = (B.List_nxB[t1] & 1 << (char & 15)) !== 0;
          } else
            t1 = false;
          if (t1) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if ((char & 64512) === 55296 && index + 1 < end) {
              tail = B.JSString_methods.codeUnitAt$1(host, index + 1);
              if ((tail & 64512) === 56320) {
                char = (char & 1023) << 10 | tail & 1023 | 65536;
                sourceLength = 2;
              } else
                sourceLength = 1;
            } else
              sourceLength = 1;
            slice = B.JSString_methods.substring$2(host, sectionStart, index);
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += slice;
            t1._contents += A._Uri__escapeChar(char);
            index += sourceLength;
            sectionStart = index;
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(host, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          if (t1) {
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
            sourceLength = 3;
          } else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          } else
            sourceLength = 3;
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t1 = char >>> 4;
            if (!(t1 < 8))
              return A.ioore(B.List_qNA, t1);
            t1 = (B.List_qNA[t1] & 1 << (char & 15)) !== 0;
          } else
            t1 = false;
          if (t1) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if (char <= 93) {
              t1 = char >>> 4;
              if (!(t1 < 8))
                return A.ioore(B.List_2Vk, t1);
              t1 = (B.List_2Vk[t1] & 1 << (char & 15)) !== 0;
            } else
              t1 = false;
            if (t1)
              A._Uri__fail(host, index, "Invalid character");
            else {
              if ((char & 64512) === 55296 && index + 1 < end) {
                tail = B.JSString_methods.codeUnitAt$1(host, index + 1);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              slice = B.JSString_methods.substring$2(host, sectionStart, index);
              if (!isNormalized)
                slice = slice.toLowerCase();
              if (buffer == null) {
                buffer = new A.StringBuffer("");
                t1 = buffer;
              } else
                t1 = buffer;
              t1._contents += slice;
              t1._contents += A._Uri__escapeChar(char);
              index += sourceLength;
              sectionStart = index;
            }
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var i, containsUpperCase, codeUnit, t1;
      if (start === end)
        return "";
      if (!A._Uri__isAlphabeticCharacter(B.JSString_methods._codeUnitAt$1(scheme, start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(scheme, i);
        if (codeUnit < 128) {
          t1 = codeUnit >>> 4;
          if (!(t1 < 8))
            return A.ioore(B.List_JYB, t1);
          t1 = (B.List_JYB[t1] & 1 << (codeUnit & 15)) !== 0;
        } else
          t1 = false;
        if (!t1)
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      return A._Uri__normalizeOrSubstring(userInfo, start, end, B.List_gRj, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority,
        result = A._Uri__normalizeOrSubstring(path, start, end, B.List_qg4, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      return A._Uri__normalizeOrSubstring(query, start, end, B.List_CVk, true);
    },
    _Uri__makeFragment(fragment, start, end) {
      return A._Uri__normalizeOrSubstring(fragment, start, end, B.List_CVk, true);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = B.JSString_methods.codeUnitAt$1(source, index + 1);
      secondDigit = B.JSString_methods.codeUnitAt$1(source, t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127) {
        t1 = B.JSInt_methods._shrOtherPositive$1(value, 4);
        if (!(t1 < 8))
          return A.ioore(B.List_nxB, t1);
        t1 = (B.List_nxB[t1] & 1 << (value & 15)) !== 0;
      } else
        t1 = false;
      if (t1)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, flag, encodedBytes, t1, index, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = B.JSString_methods._codeUnitAt$1(_s16_, char >>> 4);
        codeUnits[2] = B.JSString_methods._codeUnitAt$1(_s16_, char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        t1 = 3 * encodedBytes;
        codeUnits = new Uint8Array(t1);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          if (!(index < t1))
            return A.ioore(codeUnits, index);
          codeUnits[index] = 37;
          t2 = index + 1;
          t3 = B.JSString_methods._codeUnitAt$1(_s16_, byte >>> 4);
          if (!(t2 < t1))
            return A.ioore(codeUnits, t2);
          codeUnits[t2] = t3;
          t3 = index + 2;
          t2 = B.JSString_methods._codeUnitAt$1(_s16_, byte & 15);
          if (!(t3 < t1))
            return A.ioore(codeUnits, t3);
          codeUnits[t3] = t2;
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters) {
      var t1, index, sectionStart, buffer, char, t2, replacement, sourceLength, tail, t3, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(component, index);
        if (char < 127) {
          t2 = char >>> 4;
          if (!(t2 < 8))
            return A.ioore(charTable, t2);
          t2 = (charTable[t2] & 1 << (char & 15)) !== 0;
        } else
          t2 = false;
        if (t2)
          ++index;
        else {
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement) {
              replacement = "%25";
              sourceLength = 1;
            } else
              sourceLength = 3;
          } else {
            if (t1)
              if (char <= 93) {
                t2 = char >>> 4;
                if (!(t2 < 8))
                  return A.ioore(B.List_2Vk, t2);
                t2 = (B.List_2Vk[t2] & 1 << (char & 15)) !== 0;
              } else
                t2 = false;
            else
              t2 = false;
            if (t2) {
              A._Uri__fail(component, index, "Invalid character");
              sourceLength = _null;
              replacement = sourceLength;
            } else {
              if ((char & 64512) === 55296) {
                t2 = index + 1;
                if (t2 < end) {
                  tail = B.JSString_methods.codeUnitAt$1(component, t2);
                  if ((tail & 64512) === 56320) {
                    char = (char & 1023) << 10 | tail & 1023 | 65536;
                    sourceLength = 2;
                  } else
                    sourceLength = 1;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              replacement = A._Uri__escapeChar(char);
            }
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t3 = t2._contents += B.JSString_methods.substring$2(component, sectionStart, index);
          t2._contents = t3 + A.S(replacement);
          if (typeof sourceLength !== "number")
            return A.iae(sourceLength);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(component, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment, t3;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          t3 = output.length;
          if (t3 !== 0) {
            if (0 >= t3)
              return A.ioore(output, -1);
            output.pop();
            if (output.length === 0)
              B.JSArray_methods.add$1(output, "");
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        B.JSArray_methods.add$1(output, "");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment)
          if (output.length !== 0 && B.JSArray_methods.get$last(output) !== "..") {
            if (0 >= output.length)
              return A.ioore(output, -1);
            output.pop();
            appendSlash = true;
          } else {
            B.JSArray_methods.add$1(output, "..");
            appendSlash = false;
          }
        else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        if (t1 === 1) {
          if (0 >= t1)
            return A.ioore(output, 0);
          t1 = output[0].length === 0;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        B.JSArray_methods.add$1(output, "");
      if (!allowScheme) {
        if (0 >= output.length)
          return A.ioore(output, 0);
        B.JSArray_methods.$indexSet(output, 0, A._Uri__escapeScheme(output[0]));
      }
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char, t2,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(B.JSString_methods._codeUnitAt$1(path, 0)))
        for (i = 1; i < t1; ++i) {
          char = B.JSString_methods._codeUnitAt$1(path, i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char <= 127) {
            t2 = char >>> 4;
            if (!(t2 < 8))
              return A.ioore(B.List_JYB, t2);
            t2 = (B.List_JYB[t2] & 1 << (char & 15)) === 0;
          } else
            t2 = true;
          if (t2)
            break;
        }
      return path;
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = B.JSString_methods._codeUnitAt$1(text, i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        B.JSArray_methods.add$1(indices, i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = B.JSString_methods._codeUnitAt$1(text, i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          B.JSArray_methods.add$1(indices, equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      B.JSArray_methods.add$1(indices, i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.C_Base64Codec.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, B.List_CVk, true);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    _createTables() {
      var _i, t2, t3, t4, t5,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "?", _s1_3 = "#",
        t1 = type$.Uint8List,
        tables = J.JSArray_JSArray$allocateGrowable(22, t1);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t2 = new A._createTables_build(tables);
      t3 = new A._createTables_setChars();
      t4 = new A._createTables_setRange();
      t5 = t1._as(t2.call$2(0, 225));
      t3.call$3(t5, _s77_, 1);
      t3.call$3(t5, _s1_, 14);
      t3.call$3(t5, _s1_0, 34);
      t3.call$3(t5, _s1_1, 3);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(14, 225));
      t3.call$3(t5, _s77_, 1);
      t3.call$3(t5, _s1_, 15);
      t3.call$3(t5, _s1_0, 34);
      t3.call$3(t5, _s1_1, 234);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(15, 225));
      t3.call$3(t5, _s77_, 1);
      t3.call$3(t5, "%", 225);
      t3.call$3(t5, _s1_0, 34);
      t3.call$3(t5, _s1_1, 9);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(1, 225));
      t3.call$3(t5, _s77_, 1);
      t3.call$3(t5, _s1_0, 34);
      t3.call$3(t5, _s1_1, 10);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(2, 235));
      t3.call$3(t5, _s77_, 139);
      t3.call$3(t5, _s1_1, 131);
      t3.call$3(t5, _s1_, 146);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(3, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_1, 68);
      t3.call$3(t5, _s1_, 18);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(4, 229));
      t3.call$3(t5, _s77_, 5);
      t4.call$3(t5, "AZ", 229);
      t3.call$3(t5, _s1_0, 102);
      t3.call$3(t5, "@", 68);
      t3.call$3(t5, "[", 232);
      t3.call$3(t5, _s1_1, 138);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(5, 229));
      t3.call$3(t5, _s77_, 5);
      t4.call$3(t5, "AZ", 229);
      t3.call$3(t5, _s1_0, 102);
      t3.call$3(t5, "@", 68);
      t3.call$3(t5, _s1_1, 138);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(6, 231));
      t4.call$3(t5, "19", 7);
      t3.call$3(t5, "@", 68);
      t3.call$3(t5, _s1_1, 138);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(7, 231));
      t4.call$3(t5, "09", 7);
      t3.call$3(t5, "@", 68);
      t3.call$3(t5, _s1_1, 138);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t3.call$3(t1._as(t2.call$2(8, 8)), "]", 5);
      t5 = t1._as(t2.call$2(9, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_, 16);
      t3.call$3(t5, _s1_1, 234);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(16, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_, 17);
      t3.call$3(t5, _s1_1, 234);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(17, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_1, 9);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(10, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_, 18);
      t3.call$3(t5, _s1_1, 234);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(18, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_, 19);
      t3.call$3(t5, _s1_1, 234);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(19, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_1, 234);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(11, 235));
      t3.call$3(t5, _s77_, 11);
      t3.call$3(t5, _s1_1, 10);
      t3.call$3(t5, _s1_2, 172);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(12, 236));
      t3.call$3(t5, _s77_, 12);
      t3.call$3(t5, _s1_2, 12);
      t3.call$3(t5, _s1_3, 205);
      t5 = t1._as(t2.call$2(13, 237));
      t3.call$3(t5, _s77_, 13);
      t3.call$3(t5, _s1_2, 13);
      t4.call$3(t1._as(t2.call$2(20, 245)), "az", 21);
      t2 = t1._as(t2.call$2(21, 245));
      t4.call$3(t2, "az", 21);
      t4.call$3(t2, "09", 21);
      t3.call$3(t2, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (i = start; i < end; ++i) {
        if (!(state >= 0 && state < tables.length))
          return A.ioore(tables, state);
        table = tables[state];
        char = B.JSString_methods._codeUnitAt$1(uri, i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        B.JSArray_methods.$indexSet(indices, transition >>> 5, i);
      }
      return state;
    },
    DateTime: function DateTime(t0, t1) {
      this._core$_value = t0;
      this.isUtc = t1;
    },
    DateTime_parse_parseIntOrZero: function DateTime_parse_parseIntOrZero() {
    },
    DateTime_parse_parseMilliAndMicroseconds: function DateTime_parse_parseMilliAndMicroseconds() {
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode = _.___Uri__text = $;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode = _.___Uri__text = $;
    },
    Expando: function Expando(t0, t1) {
      this._jsWeakMap = t0;
      this.$ti = t1;
    },
    CssStyleDeclaration___new_tearOff() {
      var t1 = document.createElement("div").style;
      t1.toString;
      B.CssStyleDeclaration_methods.set$cssText(t1, "");
      return t1;
    },
    _ChildrenElementList__first(_element) {
      var result = _element.firstElementChild;
      if (result == null)
        throw A.wrapException(A.StateError$("No elements"));
      return result;
    },
    Element_Element$html(html, treeSanitizer, validator) {
      var t2,
        t1 = document.body;
      t1.toString;
      t2 = type$._ChildNodeListLazy;
      t2 = new A.WhereIterable(new A._ChildNodeListLazy(B.BodyElement_methods.createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator)), t2._eval$1("bool(ListMixin.E)")._as(new A.Element_Element$html_closure()), t2._eval$1("WhereIterable<ListMixin.E>"));
      return type$.Element._as(t2.get$single(t2));
    },
    Element__safeTagName(element) {
      var t1, exception,
        result = "element tag unavailable";
      try {
        t1 = J.getInterceptor$x(element);
        t1.get$tagName(element);
        result = t1.get$tagName(element);
      } catch (exception) {
      }
      return result;
    },
    WebSocket_WebSocket(url, protocols) {
      var t1 = new WebSocket(url);
      t1.toString;
      return t1;
    },
    _EventStreamSubscription$(_target, _eventType, onData, _useCapture, $T) {
      var t1 = onData == null ? null : A._wrapZone(new A._EventStreamSubscription_closure(onData), type$.Event);
      t1 = new A._EventStreamSubscription(_target, _eventType, t1, _useCapture, $T._eval$1("_EventStreamSubscription<0>"));
      t1._tryResume$0();
      return t1;
    },
    _Html5NodeValidator$(uriPolicy) {
      var t1 = document.createElement("a");
      t1.toString;
      t1 = new A._SameOriginUriPolicy(t1, type$.Location._as(window.location));
      t1 = new A._Html5NodeValidator(t1);
      t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
      return t1;
    },
    _Html5NodeValidator__standardAttributeValidator(element, attributeName, value, context) {
      type$.Element._as(element);
      A._asString(attributeName);
      A._asString(value);
      type$._Html5NodeValidator._as(context);
      return true;
    },
    _Html5NodeValidator__uriAttributeValidator(element, attributeName, value, context) {
      var t1, t2, t3, t4, t5;
      type$.Element._as(element);
      A._asString(attributeName);
      A._asString(value);
      t1 = type$._Html5NodeValidator._as(context).uriPolicy;
      t2 = t1._hiddenAnchor;
      B.AnchorElement_methods.set$href(t2, value);
      t3 = t2.hostname;
      t1 = t1._loc;
      if (t3 == t1.hostname) {
        t4 = t2.port;
        t5 = t1.port;
        t5.toString;
        if (t4 === t5) {
          t4 = t2.protocol;
          t1 = t1.protocol;
          t1.toString;
          t1 = t4 === t1;
        } else
          t1 = false;
      } else
        t1 = false;
      if (!t1)
        if (t3 === "")
          if (t2.port === "") {
            t1 = t2.protocol;
            t1 = t1 === ":" || t1 === "";
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    _TemplatingNodeValidator$() {
      var t1 = type$.String,
        t2 = A.LinkedHashSet_LinkedHashSet$from(B.List_wSV, t1),
        t3 = A._setArrayType(["TEMPLATE"], type$.JSArray_String),
        t4 = type$.String_Function_String._as(new A._TemplatingNodeValidator_closure());
      t1 = new A._TemplatingNodeValidator(t2, A.LinkedHashSet_LinkedHashSet(t1), A.LinkedHashSet_LinkedHashSet(t1), A.LinkedHashSet_LinkedHashSet(t1), null);
      t1._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(null, new A.MappedListIterable(B.List_wSV, t4, type$.MappedListIterable_String_String), t3, null);
      return t1;
    },
    _convertNativeToDart_EventTarget(e) {
      var $window,
        t1 = "postMessage" in e;
      t1.toString;
      if (t1) {
        $window = A._DOMWindowCrossFrame__createSafe(e);
        return $window;
      } else
        return type$.nullable_EventTarget._as(e);
    },
    _DOMWindowCrossFrame__createSafe(w) {
      var t1 = window;
      t1.toString;
      if (w === t1)
        return type$.WindowBase._as(w);
      else
        return new A._DOMWindowCrossFrame();
    },
    _wrapZone(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    BaseElement: function BaseElement() {
    },
    Blob: function Blob() {
    },
    BodyElement: function BodyElement() {
    },
    CharacterData: function CharacterData() {
    },
    CloseEvent: function CloseEvent() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    Document: function Document() {
    },
    DomException: function DomException() {
    },
    DomImplementation: function DomImplementation() {
    },
    DomTokenList: function DomTokenList() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1) {
      this._element = t0;
      this._html$_childElements = t1;
    },
    Element: function Element() {
    },
    Element_Element$html_closure: function Element_Element$html_closure() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    FormElement: function FormElement() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HtmlDocument: function HtmlDocument() {
    },
    InputElement: function InputElement() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    Location: function Location() {
    },
    MessageEvent: function MessageEvent() {
    },
    MessagePort: function MessagePort() {
    },
    MouseEvent: function MouseEvent() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    PopStateEvent: function PopStateEvent() {
    },
    SelectElement: function SelectElement() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TableSectionElement: function TableSectionElement() {
    },
    TemplateElement: function TemplateElement() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    UIEvent: function UIEvent() {
    },
    WebSocket: function WebSocket() {
    },
    Window0: function Window0() {
    },
    _Attr: function _Attr() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._element = t0;
    },
    _ElementCssClassSet: function _ElementCssClassSet(t0) {
      this._element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._pauseCount = 0;
      _._html$_target = t0;
      _._eventType = t1;
      _._html$_onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _EventStreamSubscription_onData_closure: function _EventStreamSubscription_onData_closure(t0) {
      this.handleData = t0;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    _SimpleNodeValidator: function _SimpleNodeValidator() {
    },
    _SimpleNodeValidator_closure: function _SimpleNodeValidator_closure() {
    },
    _SimpleNodeValidator_closure0: function _SimpleNodeValidator_closure0() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._templateAttrs = t0;
      _.allowedElements = t1;
      _.allowedAttributes = t2;
      _.allowedUriAttributes = t3;
      _.uriPolicy = t4;
    },
    _TemplatingNodeValidator_closure: function _TemplatingNodeValidator_closure() {
    },
    _SvgNodeValidator: function _SvgNodeValidator() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._position = -1;
      _._html$_current = null;
      _.$ti = t2;
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame() {
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy(t0, t1) {
      this._hiddenAnchor = t0;
      this._loc = t1;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
      this.numTreeModifications = 0;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase: function _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _Storage_JavaScriptObject_MapMixin: function _Storage_JavaScriptObject_MapMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    Device_userAgent() {
      var t1 = window.navigator.userAgent;
      t1.toString;
      return t1;
    },
    _StructuredClone: function _StructuredClone() {
    },
    _StructuredClone_walk_closure: function _StructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _StructuredClone_walk_closure0: function _StructuredClone_walk_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _StructuredCloneDart2Js: function _StructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    CssClassSetImpl: function CssClassSetImpl() {
    },
    CssClassSetImpl_add_closure: function CssClassSetImpl_add_closure(t0) {
      this.value = t0;
    },
    FilteredElementList: function FilteredElementList(t0, t1) {
      this._node = t0;
      this._childNodes = t1;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure() {
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0() {
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    VersionChangeEvent: function VersionChangeEvent() {
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    Random_Random(seed) {
      var t1;
      if (seed == null)
        t1 = B.C__JSRandom;
      else {
        t1 = new A._Random();
        t1._Random$1(seed);
      }
      return t1;
    },
    _JSRandom: function _JSRandom() {
    },
    _Random: function _Random() {
      this._hi = this._lo = 0;
    },
    ScriptElement0: function ScriptElement0() {
    },
    AttributeClassSet: function AttributeClassSet(t0) {
      this._svg$_element = t0;
    },
    SvgElement: function SvgElement() {
    },
    ArtemisClient: function ArtemisClient(t0) {
      this._client$_link = t0;
    },
    ArtemisClient_stream_closure: function ArtemisClient_stream_closure(t0, t1) {
      this.query = t0;
      this.T = t1;
    },
    GraphQLQuery: function GraphQLQuery() {
    },
    GraphQLResponse: function GraphQLResponse(t0, t1, t2) {
      this.data = t0;
      this.errors = t1;
      this.$ti = t2;
    },
    DelegatingStreamSink: function DelegatingStreamSink() {
    },
    SingleSubscriptionTransformer: function SingleSubscriptionTransformer(t0) {
      this.$ti = t0;
    },
    SingleSubscriptionTransformer_bind_closure: function SingleSubscriptionTransformer_bind_closure(t0) {
      this.subscription = t0;
    },
    SingleSubscriptionTransformer_bind_closure0: function SingleSubscriptionTransformer_bind_closure0(t0, t1) {
      this.$this = t0;
      this.controller = t1;
    },
    DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    },
    IterableEquality: function IterableEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    ListEquality: function ListEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _UnorderedEquality: function _UnorderedEquality() {
    },
    SetEquality: function SetEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _MapEntry: function _MapEntry(t0, t1, t2) {
      this.equality = t0;
      this.key = t1;
      this.value = t2;
    },
    MapEquality: function MapEquality(t0, t1, t2) {
      this._keyEquality = t0;
      this._valueEquality = t1;
      this.$ti = t2;
    },
    DeepCollectionEquality: function DeepCollectionEquality() {
    },
    Equatable: function Equatable() {
    },
    EquatableMixin: function EquatableMixin() {
    },
    mapPropsToHashCode(props) {
      var t1 = B.JSArray_methods.fold$1$2(props, 0, A.equatable_utils___combine$closure(), type$.int),
        hash = t1 + ((t1 & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    equals(list1, list2) {
      var $length, t1, t2, t3, i, unit1, unit2, t4;
      if (list1 === list2)
        return true;
      $length = list1.length;
      if ($length !== list2.length)
        return false;
      for (t1 = type$.Iterable_dynamic, t2 = type$.EquatableMixin, t3 = type$.Map_dynamic_dynamic, i = 0; i < $length; ++i) {
        if (!(i < list1.length))
          return A.ioore(list1, i);
        unit1 = list1[i];
        if (!(i < list2.length))
          return A.ioore(list2, i);
        unit2 = list2[i];
        if (unit1 instanceof A.Equatable || t2._is(unit1))
          t4 = unit2 instanceof A.Equatable || t2._is(unit2);
        else
          t4 = false;
        if (t4) {
          if (!J.$eq$(unit1, unit2))
            return false;
        } else if (t1._is(unit1) || t3._is(unit1)) {
          if (!B.C_DeepCollectionEquality.equals$2(unit1, unit2))
            return false;
        } else {
          t4 = unit1 == null ? null : J.get$runtimeType$(unit1);
          if (t4 != (unit2 == null ? null : J.get$runtimeType$(unit2)))
            return false;
          else if (!J.$eq$(unit1, unit2))
            return false;
        }
      }
      return true;
    },
    _combine(hash, object) {
      var t1, t2, value, t3, _box_0 = {};
      _box_0.hash = hash;
      if (type$.Map_dynamic_dynamic._is(object)) {
        t1 = A.List_List$of(J.get$keys$x(object), true, type$.dynamic);
        B.JSArray_methods.sort$1(t1, new A._combine_closure());
        B.JSArray_methods.forEach$1(t1, new A._combine_closure0(_box_0, object));
        return _box_0.hash;
      }
      if (type$.Iterable_dynamic._is(object)) {
        for (t1 = J.getInterceptor$ax(object), t2 = t1.get$iterator(object); t2.moveNext$0();) {
          value = t2.get$current();
          t3 = _box_0.hash;
          _box_0.hash = (t3 ^ A._combine(t3, value)) >>> 0;
        }
        return (_box_0.hash ^ t1.get$length(object)) >>> 0;
      }
      hash = _box_0.hash = hash + J.get$hashCode$(object) & 536870911;
      hash = _box_0.hash = hash + ((hash & 524287) << 10) & 536870911;
      return (hash ^ hash >>> 6) >>> 0;
    },
    mapPropsToString(runtimeType, props) {
      var t1 = A._arrayInstanceType(props);
      return runtimeType.toString$0(0) + "(" + new A.MappedListIterable(props, t1._eval$1("String(1)")._as(new A.mapPropsToString_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, ", ") + ")";
    },
    _combine_closure: function _combine_closure() {
    },
    _combine_closure0: function _combine_closure0(t0, t1) {
      this._box_0 = t0;
      this.object = t1;
    },
    mapPropsToString_closure: function mapPropsToString_closure() {
    },
    DocumentNode$(definitions) {
      return new A.DocumentNode(definitions);
    },
    OperationDefinitionNode$(directives, $name, selectionSet, type, variableDefinitions) {
      return new A.OperationDefinitionNode($name, type, variableDefinitions, directives, selectionSet);
    },
    SelectionSetNode$(selections) {
      return new A.SelectionSetNode(selections);
    },
    FieldNode$(alias, $arguments, directives, $name, selectionSet) {
      return new A.FieldNode(alias, $name, $arguments, directives, selectionSet);
    },
    ArgumentNode$($name, value) {
      return new A.ArgumentNode($name, value);
    },
    FragmentSpreadNode$(directives, $name) {
      return new A.FragmentSpreadNode($name, directives);
    },
    InlineFragmentNode$(directives, selectionSet, typeCondition) {
      return new A.InlineFragmentNode(typeCondition, directives, selectionSet);
    },
    FragmentDefinitionNode$(directives, $name, selectionSet, typeCondition) {
      return new A.FragmentDefinitionNode($name, typeCondition, directives, selectionSet);
    },
    TypeConditionNode$(on) {
      return new A.TypeConditionNode(on);
    },
    VariableNode$($name) {
      return new A.VariableNode($name);
    },
    VariableDefinitionNode$(defaultValue, directives, type, variable) {
      return new A.VariableDefinitionNode(variable, type, defaultValue, directives);
    },
    DefaultValueNode$(value) {
      return new A.DefaultValueNode(value);
    },
    NamedTypeNode$(isNonNull, $name) {
      return new A.NamedTypeNode($name, isNonNull);
    },
    NameNode$(value) {
      return new A.NameNode(value);
    },
    Node0: function Node0() {
    },
    DocumentNode: function DocumentNode(t0) {
      this.definitions = t0;
    },
    DefinitionNode: function DefinitionNode() {
    },
    ExecutableDefinitionNode: function ExecutableDefinitionNode() {
    },
    OperationType: function OperationType(t0) {
      this._name = t0;
    },
    OperationDefinitionNode: function OperationDefinitionNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.name = t0;
      _.type = t1;
      _.variableDefinitions = t2;
      _.directives = t3;
      _.selectionSet = t4;
    },
    SelectionSetNode: function SelectionSetNode(t0) {
      this.selections = t0;
    },
    SelectionNode: function SelectionNode() {
    },
    FieldNode: function FieldNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alias = t0;
      _.name = t1;
      _.$arguments = t2;
      _.directives = t3;
      _.selectionSet = t4;
    },
    ArgumentNode: function ArgumentNode(t0, t1) {
      this.name = t0;
      this.value = t1;
    },
    FragmentSpreadNode: function FragmentSpreadNode(t0, t1) {
      this.name = t0;
      this.directives = t1;
    },
    InlineFragmentNode: function InlineFragmentNode(t0, t1, t2) {
      this.typeCondition = t0;
      this.directives = t1;
      this.selectionSet = t2;
    },
    FragmentDefinitionNode: function FragmentDefinitionNode(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.typeCondition = t1;
      _.directives = t2;
      _.selectionSet = t3;
    },
    TypeConditionNode: function TypeConditionNode(t0) {
      this.on = t0;
    },
    ValueNode: function ValueNode() {
    },
    VariableNode: function VariableNode(t0) {
      this.name = t0;
    },
    VariableDefinitionNode: function VariableDefinitionNode(t0, t1, t2, t3) {
      var _ = this;
      _.variable = t0;
      _.type = t1;
      _.defaultValue = t2;
      _.directives = t3;
    },
    DefaultValueNode: function DefaultValueNode(t0) {
      this.value = t0;
    },
    TypeNode: function TypeNode() {
    },
    NamedTypeNode: function NamedTypeNode(t0, t1) {
      this.name = t0;
      this.isNonNull = t1;
    },
    NameNode: function NameNode(t0) {
      this.value = t0;
    },
    Visitor: function Visitor() {
    },
    _opType(t) {
      switch (t) {
        case B.OperationType_0:
          return "query";
        case B.OperationType_1:
          return "mutation";
        case B.OperationType_2:
          return "subscription";
      }
    },
    _PrintVisitor: function _PrintVisitor() {
      this._tabs = 0;
    },
    _PrintVisitor_visitDocumentNode_closure: function _PrintVisitor_visitDocumentNode_closure(t0) {
      this.$this = t0;
    },
    _PrintVisitor_visitDirectiveSetNode_closure: function _PrintVisitor_visitDirectiveSetNode_closure(t0) {
      this.$this = t0;
    },
    _PrintVisitor_visitVariableDefinitionSetNode_closure: function _PrintVisitor_visitVariableDefinitionSetNode_closure(t0) {
      this.$this = t0;
    },
    _PrintVisitor_visitArgumentSetNode_closure: function _PrintVisitor_visitArgumentSetNode_closure(t0) {
      this.$this = t0;
    },
    _PrintVisitor_visitSelectionSetNode_closure: function _PrintVisitor_visitSelectionSetNode_closure(t0) {
      this.$this = t0;
    },
    ContextEntry: function ContextEntry() {
    },
    Context: function Context(t0) {
      this._context = t0;
    },
    GraphQLError: function GraphQLError(t0, t1, t2, t3) {
      var _ = this;
      _.message = t0;
      _.locations = t1;
      _.path = t2;
      _.extensions = t3;
    },
    ErrorLocation: function ErrorLocation(t0, t1) {
      this.line = t0;
      this.column = t1;
    },
    Operation: function Operation(t0, t1) {
      this.document = t0;
      this.operationName = t1;
    },
    Request: function Request(t0, t1, t2) {
      this.operation = t0;
      this.variables = t1;
      this.context = t2;
    },
    Response: function Response(t0, t1, t2, t3) {
      var _ = this;
      _.errors = t0;
      _.data = t1;
      _.response = t2;
      _.context = t3;
    },
    ResponseExtensions: function ResponseExtensions(t0) {
      this.extensions = t0;
    },
    LinkException: function LinkException() {
    },
    ResponseFormatException: function ResponseFormatException() {
    },
    ServerException: function ServerException() {
    },
    Link: function Link() {
    },
    RequestSerializer: function RequestSerializer() {
    },
    ResponseParser: function ResponseParser() {
    },
    ResponseParser_parseResponse_closure: function ResponseParser_parseResponse_closure(t0) {
      this.$this = t0;
    },
    ResponseParser_parseError_closure: function ResponseParser_parseError_closure(t0) {
      this.$this = t0;
    },
    WebSocketLinkServerException$(originalException, parsedResponse, requestMessage) {
      return new A.WebSocketLinkServerException(parsedResponse, originalException);
    },
    WebSocketLinkParserException: function WebSocketLinkParserException(t0) {
      this.originalException = t0;
    },
    WebSocketLinkServerException: function WebSocketLinkServerException(t0, t1) {
      this.parsedResponse = t0;
      this.originalException = t1;
    },
    WebSocketLink__defaultGraphQLSocketMessageEncoder(message) {
      return B.C_JsonCodec.encode$1(type$.Map_String_dynamic._as(message));
    },
    WebSocketLink__defaultGraphQLSocketMessageDecoder(message) {
      return type$.nullable_Map_String_dynamic._as(B.C_JsonCodec.decode$1(0, A._asString(message)));
    },
    WebSocketLink$(uri, autoReconnect, initialPayload, reconnectInterval) {
      var t3, controller, wrapper, _null = null,
        t1 = type$.JSArray_Request,
        t2 = A._setArrayType([], t1);
      t1 = A._setArrayType([], t1);
      t3 = type$.ConnectionState;
      controller = new A._AsyncBroadcastStreamController(_null, _null, type$._AsyncBroadcastStreamController_ConnectionState);
      wrapper = new A._Wrapper(new A.ValueWrapper(B.ConnectionState_0, type$.ValueWrapper_ConnectionState), type$._Wrapper_ConnectionState);
      t3 = A.DeferStream$(A.BehaviorSubject__deferStream(wrapper, controller, false, t3), true, t3);
      t1 = new A.WebSocketLink(t2, t1, true, reconnectInterval, initialPayload, new A.BehaviorSubject(wrapper, t3, controller, t3, type$.BehaviorSubject_ConnectionState), new A._AsyncBroadcastStreamController(_null, _null, type$._AsyncBroadcastStreamController_GraphQLSocketMessage));
      t1.WebSocketLink$10$autoReconnect$channelGenerator$graphQLSocketMessageDecoder$graphQLSocketMessageEncoder$inactivityTimeout$initialPayload$parser$reconnectInterval$serializer(uri, true, _null, A.link_WebSocketLink__defaultGraphQLSocketMessageDecoder$closure(), A.link_WebSocketLink__defaultGraphQLSocketMessageEncoder$closure(), _null, initialPayload, B.C_ResponseParser, reconnectInterval, B.C_RequestSerializer);
      return t1;
    },
    RequestId: function RequestId(t0) {
      this.id = t0;
    },
    ConnectionState: function ConnectionState(t0) {
      this._name = t0;
    },
    WebSocketLink: function WebSocketLink(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._channel = null;
      _._requests = t0;
      _._reConnectRequests = t1;
      _.__WebSocketLink__channelGenerator = $;
      _.autoReconnect = t2;
      _._reconnectTimer = null;
      _.reconnectInterval = t3;
      _.initialPayload = t4;
      _._connectionStateController = t5;
      _._messagesController = t6;
      _._disposedCompleter = _._keepAliveSubscription = null;
    },
    WebSocketLink_closure: function WebSocketLink_closure(t0) {
      this.uri = t0;
    },
    WebSocketLink_request_closure: function WebSocketLink_request_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.id = t2;
      _.response = t3;
      _.requestWithContext = t4;
    },
    WebSocketLink_request__closure0: function WebSocketLink_request__closure0() {
    },
    WebSocketLink_request__closure1: function WebSocketLink_request__closure1(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.id = t2;
      _.response = t3;
      _.requestWithContext = t4;
    },
    WebSocketLink_request___closure: function WebSocketLink_request___closure(t0) {
      this.id = t0;
    },
    WebSocketLink_request___closure0: function WebSocketLink_request___closure0(t0) {
      this.response = t0;
    },
    WebSocketLink_request___closure1: function WebSocketLink_request___closure1(t0, t1) {
      this.$this = t0;
      this.response = t1;
    },
    WebSocketLink_request_closure0: function WebSocketLink_request_closure0(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.id = t2;
      _.response = t3;
    },
    WebSocketLink_request__closure: function WebSocketLink_request__closure(t0) {
      this.id = t0;
    },
    WebSocketLink__connect_closure: function WebSocketLink__connect_closure(t0) {
      this.$this = t0;
    },
    WebSocketLink__connect__closure0: function WebSocketLink__connect__closure0(t0) {
      this.$this = t0;
    },
    WebSocketLink__connect_closure0: function WebSocketLink__connect_closure0(t0) {
      this.$this = t0;
    },
    WebSocketLink__connect__closure: function WebSocketLink__connect__closure(t0) {
      this.$this = t0;
    },
    WebSocketLink__connect_closure1: function WebSocketLink__connect_closure1(t0) {
      this.$this = t0;
    },
    WebSocketLink__parseSocketMessage__tryCastErrors: function WebSocketLink__parseSocketMessage__tryCastErrors() {
    },
    WebSocketLink__parseSocketMessage__tryCastErrors_closure: function WebSocketLink__parseSocketMessage__tryCastErrors_closure() {
    },
    JsonSerializable: function JsonSerializable() {
    },
    GraphQLSocketMessage: function GraphQLSocketMessage() {
    },
    InitOperation: function InitOperation(t0, t1) {
      this.payload = t0;
      this.type = t1;
    },
    StartOperation: function StartOperation(t0, t1, t2) {
      this.id = t0;
      this.payload = t1;
      this.type = t2;
    },
    StopOperation: function StopOperation(t0, t1) {
      this.id = t0;
      this.type = t1;
    },
    ConnectionAck: function ConnectionAck(t0) {
      this.type = t0;
    },
    ConnectionError: function ConnectionError(t0, t1) {
      this.payload = t0;
      this.type = t1;
    },
    ConnectionKeepAlive: function ConnectionKeepAlive(t0) {
      this.type = t0;
    },
    SubscriptionData: function SubscriptionData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.id = t0;
      _.data = t1;
      _.errors = t2;
      _.extensions = t3;
      _.type = t4;
    },
    SubscriptionError: function SubscriptionError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.id = t0;
      _.payload = t1;
      _.errors = t2;
      _.extensions = t3;
      _.type = t4;
    },
    SubscriptionComplete: function SubscriptionComplete(t0, t1) {
      this.id = t0;
      this.type = t1;
    },
    UnknownData: function UnknownData(t0, t1) {
      this.payload = t0;
      this.type = t1;
    },
    FieldRename: function FieldRename(t0) {
      this._name = t0;
    },
    JsonSerializable0: function JsonSerializable0() {
    },
    RenderElement: function RenderElement() {
    },
    WatchfulRenderElement: function WatchfulRenderElement() {
    },
    Axis: function Axis(t0) {
      this._name = t0;
    },
    LayoutType: function LayoutType(t0) {
      this._name = t0;
    },
    InputType: function InputType(t0) {
      this._name = t0;
    },
    DomEventType: function DomEventType(t0, t1) {
      this.nativeValue = t0;
      this._name = t1;
    },
    DomTagType: function DomTagType(t0, t1) {
      this.nativeValue = t0;
      this._name = t1;
    },
    UpdateType: function UpdateType(t0) {
      this._name = t0;
    },
    WidgetUpdateType: function WidgetUpdateType(t0) {
      this._name = t0;
    },
    WidgetAction: function WidgetAction(t0) {
      this._name = t0;
    },
    SchedulerTaskType: function SchedulerTaskType(t0) {
      this._name = t0;
    },
    RootRenderElement: function RootRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._key = t0;
      _._widget = t1;
      _._widgetRuntimeType = t2;
      _._domNode = t3;
      _._hasDomNode = t4;
      _.appTargetId = t5;
      _._services = t6;
      _._parent = t7;
      _._childElements = t8;
    },
    TemporaryElement: function TemporaryElement(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._key = t0;
      _._widget = t1;
      _._widgetRuntimeType = t2;
      _._domNode = t3;
      _._hasDomNode = t4;
      _.appTargetId = t5;
      _._services = t6;
      _._parent = t7;
      _._childElements = t8;
    },
    DomNodePatch: function DomNodePatch(t0) {
      this.attributes = t0;
    },
    DomNodePatchFillable: function DomNodePatchFillable(t0, t1) {
      this.attributes = t0;
      this.properties = t1;
    },
    Key: function Key(t0) {
      this._key$_value = t0;
    },
    DebugOptions: function DebugOptions() {
    },
    RouterOptions: function RouterOptions() {
    },
    Framework: function Framework(t0, t1) {
      this._renderer = t0;
      this.rootContext = t1;
    },
    AppComponent: function AppComponent() {
    },
    StyleComponent: function StyleComponent() {
    },
    Components: function Components(t0, t1, t2) {
      this._scripts = t0;
      this._stylesheets = t1;
      this._styleComponents = t2;
    },
    WindowDelegate: function WindowDelegate() {
    },
    BrowserWindow: function BrowserWindow(t0) {
      this._psIsListening = false;
      this._psListeners = t0;
    },
    Window: function Window() {
      this._delegate = null;
    },
    RadStylesComponent: function RadStylesComponent() {
    },
    DumbNodeValidator: function DumbNodeValidator() {
    },
    JobQueue: function JobQueue(t0, t1) {
      this._jobs = t0;
      this._postJobCallbacks = t1;
      this._isLocked = false;
    },
    Reconciler: function Reconciler(t0) {
      this._availableHashers = t0;
    },
    _CompatibilityHashGenerator: function _CompatibilityHashGenerator(t0) {
      this._counters = t0;
    },
    Renderer: function Renderer(t0, t1, t2) {
      this.rootContext = t0;
      this.reconciler = t1;
      this.ServicesResolver__services = t2;
    },
    Renderer_processWidgetUpdateObjectActionUpdate_closure: function Renderer_processWidgetUpdateObjectActionUpdate_closure(t0, t1) {
      this._box_0 = t0;
      this.newMountAtIndex = t1;
    },
    Renderer_mountWidgets_closure: function Renderer_mountWidgets_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.mountTargetDomNode = t1;
      this.documentFragment = t2;
    },
    Renderer_dispatchWidgetActions_closure: function Renderer_dispatchWidgetActions_closure(t0) {
      this.domNode = t0;
    },
    Renderer_dispatchWidgetActions_closure0: function Renderer_dispatchWidgetActions_closure0(t0) {
      this.domNode = t0;
    },
    Renderer_cleanRenderElement_closure: function Renderer_cleanRenderElement_closure(t0) {
      this.renderElement = t0;
    },
    Renderer_cleanRenderElement_closure0: function Renderer_cleanRenderElement_closure0(t0) {
      this.domNode = t0;
    },
    Renderer_disposeRenderElement_closure: function Renderer_disposeRenderElement_closure(t0) {
      this._box_0 = t0;
    },
    Renderer_applyDomNodePatch_job: function Renderer_applyDomNodePatch_job(t0, t1) {
      this.description = t0;
      this.domNode = t1;
    },
    Renderer_applyDomNodePatch_job_closure: function Renderer_applyDomNodePatch_job_closure(t0) {
      this.domNode = t0;
    },
    Renderer_applyDomNodePatch_job_closure0: function Renderer_applyDomNodePatch_job_closure0(t0) {
      this.domNode = t0;
    },
    _Renderer_Object_ServicesResolver: function _Renderer_Object_ServicesResolver() {
    },
    WidgetActionObject: function WidgetActionObject(t0, t1) {
      this.element = t0;
      this.widgetAction = t1;
    },
    WidgetUpdateObject: function WidgetUpdateObject() {
    },
    WidgetUpdateObjectActionAdd: function WidgetUpdateObjectActionAdd(t0, t1, t2, t3) {
      var _ = this;
      _.widgets = t0;
      _.widgetPositionIndex = t1;
      _.mountAtIndex = t2;
      _.widgetUpdateType = t3;
    },
    WidgetUpdateObjectActionAddAllWithoutClean: function WidgetUpdateObjectActionAddAllWithoutClean(t0, t1) {
      this.widgets = t0;
      this.widgetUpdateType = t1;
    },
    WidgetUpdateObjectActionUpdate: function WidgetUpdateObjectActionUpdate(t0, t1, t2, t3) {
      var _ = this;
      _.widget = t0;
      _.existingRenderElement = t1;
      _.newMountAtIndex = t2;
      _.widgetUpdateType = t3;
    },
    WidgetUpdateObjectActionDisposeMultiple: function WidgetUpdateObjectActionDisposeMultiple(t0, t1) {
      this.elementsToDispose = t0;
      this.widgetUpdateType = t1;
    },
    WidgetUpdateObjectActionCleanParent: function WidgetUpdateObjectActionCleanParent(t0) {
      this.widgetUpdateType = t0;
    },
    Service: function Service() {
    },
    _Service_Object_ServicesResolver: function _Service_Object_ServicesResolver() {
    },
    DebugService: function DebugService(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.options = t0;
      _.routerLogs = t1;
      _.widgetLogs = t2;
      _.frameworkLogs = t3;
      _._onException = null;
      _.rootElement = t4;
      _.ServicesResolver__services = t5;
    },
    EmittedEvent: function EmittedEvent(t0) {
      this._rawEvent = t0;
      this._isPropagationStopped = false;
    },
    EventsService: function EventsService(t0, t1, t2) {
      this._eventSubscriptions = t0;
      this.rootElement = t1;
      this.ServicesResolver__services = t2;
    },
    EventsService__collectListeners_collectEventListeners: function EventsService__collectListeners_collectEventListeners(t0, t1, t2) {
      this.eventType = t0;
      this.capturingCallbacks = t1;
      this.bubblingCallbacks = t2;
    },
    RouterService: function RouterService(t0, t1, t2, t3, t4) {
      var _ = this;
      _.options = t0;
      _._navigatorLinks = t1;
      _._routerStack = t2;
      _._routerRequestsStream = null;
      _.rootElement = t3;
      _.ServicesResolver__services = t4;
    },
    RouterStack: function RouterStack(t0) {
      this.entries = t0;
    },
    RouterStackEntry: function RouterStackEntry(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.values = t1;
      _.location = t2;
      _.navigator = t3;
    },
    SchedulerTask: function SchedulerTask() {
    },
    SchedulerService: function SchedulerService(t0, t1, t2) {
      var _ = this;
      _._listeners = t0;
      _._tasksStream = null;
      _.rootElement = t1;
      _.ServicesResolver__services = t2;
    },
    StimulateListenerTask: function StimulateListenerTask(t0, t1) {
      this.beforeTaskCallback = t0;
      this.afterTaskCallback = t1;
    },
    WidgetsBuildTask: function WidgetsBuildTask(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.parentRenderElement = t0;
      _.widgets = t1;
      _.mountAtIndex = t2;
      _.flagCleanParentContents = t3;
      _.beforeTaskCallback = t4;
      _.afterTaskCallback = t5;
    },
    WidgetsUpdateTask: function WidgetsUpdateTask(t0, t1, t2, t3, t4) {
      var _ = this;
      _.parentRenderElement = t0;
      _.widgets = t1;
      _.updateType = t2;
      _.beforeTaskCallback = t3;
      _.afterTaskCallback = t4;
    },
    Services: function Services(t0, t1, t2, t3, t4) {
      var _ = this;
      _.rootElement = t0;
      _._debug = t1;
      _._events = t2;
      _._router = t3;
      _._scheduler = t4;
    },
    ServicesRegistry: function ServicesRegistry(t0) {
      this._services_registry$_services = t0;
    },
    ServicesResolver: function ServicesResolver() {
    },
    ChangeNotifier: function ChangeNotifier() {
    },
    ValueNotifier: function ValueNotifier(t0, t1, t2) {
      var _ = this;
      _._value = t0;
      _._count = 0;
      _._change_notifier$_listeners = t1;
      _._reentrantlyRemovedListeners = _._notificationCallStackDepth = 0;
      _.$ti = t2;
    },
    _extendAttributes0(attributes, oldWidget, widget) {
      var t1 = oldWidget == null ? null : oldWidget.type;
      if (widget.type !== t1)
        attributes.$indexSet(0, "type", "text");
    },
    _extendProperties(oldWidget, properties, widget) {
      var t1 = widget.valueProperty;
      if (t1 !== (oldWidget == null ? null : oldWidget.valueProperty))
        properties.$indexSet(0, "value", t1);
    },
    HTMLInputBase: function HTMLInputBase() {
    },
    HTMLInputBaseRenderElement: function HTMLInputBaseRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._widgetChildren = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    HTMLRenderElementBase$(widget, $parent) {
      var t2, t3, t4,
        t1 = widget.child;
      if (t1 == null) {
        t1 = widget.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      t2 = A._setArrayType([], type$.JSArray_RenderElement);
      t3 = A.getRuntimeType(widget).toString$0(0);
      t4 = $parent._services;
      t4.toString;
      return new A.HTMLRenderElementBase(t1, widget.key, widget, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    },
    _prepareAttributes(oldWidget, widget) {
      var attributes = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_String),
        t1 = widget.id,
        t2 = oldWidget == null;
      if (t1 != (t2 ? null : oldWidget.id))
        attributes.$indexSet(0, "id", t1);
      t1 = widget.style;
      if (t1 != (t2 ? null : oldWidget.style))
        attributes.$indexSet(0, "style", t1);
      t1 = widget.className;
      if (t1 != (t2 ? null : oldWidget.className))
        attributes.$indexSet(0, "class", t1);
      return attributes;
    },
    _prepareProperties(oldWidget, widget) {
      var properties = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_String),
        t1 = widget.innerText;
      if (t1 != (oldWidget == null ? null : oldWidget.innerText))
        properties.$indexSet(0, "innerText", t1);
      return properties;
    },
    HTMLWidgetBase: function HTMLWidgetBase() {
    },
    HTMLRenderElementBase: function HTMLRenderElementBase(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._widgetChildren = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    Widget: function Widget() {
    },
    InputText$(id, onInput, style, value) {
      var _null = null;
      return new A.InputText(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, B.InputType_text, value, onInput, _null, _null, _null, _null, id, _null, style, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    InputText: function InputText(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32) {
      var _ = this;
      _.autoComplete = t0;
      _.dirName = t1;
      _.disabled = t2;
      _.form = t3;
      _.inputMode = t4;
      _.list = t5;
      _.maxLength = t6;
      _.minLength = t7;
      _.name = t8;
      _.pattern = t9;
      _.placeholder = t10;
      _.readOnly = t11;
      _.required = t12;
      _.size = t13;
      _.tabIndex = t14;
      _.type = t15;
      _.valueProperty = t16;
      _.onInput = t17;
      _.onChange = t18;
      _.onKeyUp = t19;
      _.onKeyDown = t20;
      _.onKeyPress = t21;
      _.id = t22;
      _.title = t23;
      _.style = t24;
      _.className = t25;
      _.hidden = t26;
      _.innerText = t27;
      _.child = t28;
      _.children = t29;
      _.onClick = t30;
      _.additionalAttributes = t31;
      _.key = t32;
    },
    _extendAttributes4(attributes, oldWidget, widget) {
      var t1 = widget.href,
        t2 = oldWidget == null;
      if (t1 !== (t2 ? null : oldWidget.href))
        attributes.$indexSet(0, "href", t1);
      t1 = widget.target;
      if (t1 != (t2 ? null : oldWidget.target))
        attributes.$indexSet(0, "target", t1);
    },
    Anchor: function Anchor(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.href = t0;
      _.target = t1;
      _.id = t2;
      _.title = t3;
      _.style = t4;
      _.className = t5;
      _.hidden = t6;
      _.innerText = t7;
      _.child = t8;
      _.children = t9;
      _.onClick = t10;
      _.additionalAttributes = t11;
      _.key = t12;
    },
    AnchorRenderElement: function AnchorRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._widgetChildren = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    Button$(child, onClick, style) {
      var _null = null;
      return new A.Button(_null, _null, style, _null, _null, _null, child, _null, onClick, _null, _null);
    },
    _extendAttributes(attributes, oldWidget, widget) {
    },
    Button: function Button(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    ButtonRenderElement: function ButtonRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._widgetChildren = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    Division$(child, children, className, key, style) {
      var _null = null;
      return new A.Division(_null, _null, style, className, _null, _null, child, children, _null, _null, key);
    },
    Division: function Division(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    Heading1: function Heading1(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    Heading3: function Heading3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    _extendAttributes3(attributes, oldWidget, widget) {
      var t1 = widget.src,
        t2 = oldWidget == null;
      if (t1 !== (t2 ? null : oldWidget.src))
        attributes.$indexSet(0, "src", t1);
      t1 = widget.width;
      if (t1 !== (t2 ? null : oldWidget.width))
        attributes.$indexSet(0, "width", t1);
      t1 = widget.height;
      if (t1 !== (t2 ? null : oldWidget.height))
        attributes.$indexSet(0, "height", t1);
    },
    Image: function Image(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.src = t0;
      _.width = t1;
      _.height = t2;
      _.id = t3;
      _.title = t4;
      _.style = t5;
      _.className = t6;
      _.hidden = t7;
      _.innerText = t8;
      _.child = t9;
      _.children = t10;
      _.onClick = t11;
      _.additionalAttributes = t12;
      _.key = t13;
    },
    ImageRenderElement: function ImageRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._widgetChildren = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    Label$(forAttribute, innerText) {
      var _null = null;
      return new A.Label(forAttribute, _null, _null, _null, _null, _null, innerText, _null, _null, _null, _null, _null);
    },
    _extendAttributes1(attributes, oldWidget, widget) {
      var t1 = widget.forAttribute;
      if (t1 !== (oldWidget == null ? null : oldWidget.forAttribute))
        attributes.$indexSet(0, "for", t1);
    },
    Label: function Label(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.forAttribute = t0;
      _.id = t1;
      _.title = t2;
      _.style = t3;
      _.className = t4;
      _.hidden = t5;
      _.innerText = t6;
      _.child = t7;
      _.children = t8;
      _.onClick = t9;
      _.additionalAttributes = t10;
      _.key = t11;
    },
    LabelRenderElement: function LabelRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._widgetChildren = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    _extendAttributes2(attributes, oldWidget, widget) {
    },
    ListItem: function ListItem(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    ListItemRenderElement: function ListItemRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._widgetChildren = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    Paragraph: function Paragraph(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    Span: function Span(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    UnOrderedList: function UnOrderedList(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    InheritedWidget: function InheritedWidget() {
    },
    InheritedRenderElement: function InheritedRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.dependents = t0;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    _prepareAttributes0(oldWidget, widget) {
      var attributes = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_String);
      attributes.$indexSet(0, "class", " rad-list-view rad-list-view-layout-contained rad-list-view-vertical");
      return attributes;
    },
    ListView: function ListView(t0, t1, t2) {
      this.style = t0;
      this.children = t1;
      this.key = t2;
    },
    ListViewRenderElement: function ListViewRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._key = t0;
      _._widget = t1;
      _._widgetRuntimeType = t2;
      _._domNode = t3;
      _._hasDomNode = t4;
      _.appTargetId = t5;
      _._services = t6;
      _._parent = t7;
      _._childElements = t8;
    },
    StatefulWidget: function StatefulWidget() {
    },
    StatefulRenderElement: function StatefulRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.state = t0;
      _._isMounted = false;
      _._key = t1;
      _._widget = t2;
      _._widgetRuntimeType = t3;
      _._domNode = t4;
      _._hasDomNode = t5;
      _.appTargetId = t6;
      _._services = t7;
      _._parent = t8;
      _._childElements = t9;
    },
    State: function State() {
    },
    State_setState_closure: function State_setState_closure(t0) {
      this.callable = t0;
    },
    State_setState_closure0: function State_setState_closure0(t0, t1, t2) {
      this.$this = t0;
      this.scheduler = t1;
      this.element = t2;
    },
    StatelessWidget: function StatelessWidget() {
    },
    StatelessRenderElement: function StatelessRenderElement(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._key = t0;
      _._widget = t1;
      _._widgetRuntimeType = t2;
      _._domNode = t3;
      _._hasDomNode = t4;
      _.appTargetId = t5;
      _._services = t6;
      _._parent = t7;
      _._childElements = t8;
    },
    Text$(text, style) {
      var _null = null;
      return new A.Text(_null, _null, style, _null, _null, text, _null, _null, _null, _null, _null);
    },
    Text: function Text(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.style = t2;
      _.className = t3;
      _.hidden = t4;
      _.innerText = t5;
      _.child = t6;
      _.children = t7;
      _.onClick = t8;
      _.additionalAttributes = t9;
      _.key = t10;
    },
    EventsRoom$Subscription$RoomEvent$() {
      var _null = null;
      return new A.EventsRoom$Subscription$RoomEvent(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    EventsRoom$Subscription$RoomEvent_EventsRoom$Subscription$RoomEvent$fromJson(json) {
      var t2,
        _s10_ = "__typename",
        _null = null,
        t1 = J.getInterceptor$asx(json);
      switch (J.toString$0$(t1.$index(json, _s10_))) {
        case "Room":
          return A._$EventsRoom$Subscription$RoomEvent$RoomFromJson(json);
        case "RoomMessage":
          t2 = new A.EventsRoom$Subscription$RoomEvent$RoomMessage(_null, $, $, $, $, _null, $, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
          t2.$$RoomMessageMixin_$$typename = A._asStringQ(t1.$index(json, _s10_));
          t2.$$RoomMessageMixin___$RoomMessageMixin_messageId = A._asString(t1.$index(json, "messageId"));
          t2.$$RoomMessageMixin___$RoomMessageMixin_roomId = A._asString(t1.$index(json, "roomId"));
          t2.$$RoomMessageMixin___$RoomMessageMixin_content = A._asString(t1.$index(json, "content"));
          t2.$$RoomMessageMixin___$RoomMessageMixin_createdDate = A.DateTime_parse(A._asString(t1.$index(json, "createdDate")));
          t2.$$RoomMessageMixin_recipientUserId = A._asStringQ(t1.$index(json, "recipientUserId"));
          t2.$$RoomMessageMixin___$RoomMessageMixin_user = A._$$RoomMessageMixin$UserFromJson(type$.Map_String_dynamic._as(t1.$index(json, "user")));
          return t2;
      }
      t2 = A.EventsRoom$Subscription$RoomEvent$();
      t2.$$$typename = A._asStringQ(t1.$index(json, _s10_));
      return t2;
    },
    _$CreateUser$Mutation$UserCreated$UserToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", instance.$$UserMixin_$$typename, "userId", A._lateReadCheck(instance.$$UserMixin___$UserMixin_userId, "userId"), "name", instance.$$UserMixin_name], type$.String, type$.dynamic);
    },
    _$CreateUser$Mutation$UserCreatedToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["token", A._lateReadCheck(instance.__CreateUser$Mutation$UserCreated_token, "token"), "user", A._$CreateUser$Mutation$UserCreated$UserToJson(A._lateReadCheck(instance.__CreateUser$Mutation$UserCreated_user, "user"))], type$.String, type$.dynamic);
    },
    _$$RoomMixin$UserFromJson(json) {
      var _null = null,
        t1 = new A.$RoomMixin$User(_null, $, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t2 = J.getInterceptor$asx(json);
      t1.$$UserMixin_$$typename = A._asStringQ(t2.$index(json, "__typename"));
      t1.$$UserMixin___$UserMixin_userId = A._asString(t2.$index(json, "userId"));
      t1.$$UserMixin_name = A._asStringQ(t2.$index(json, "name"));
      return t1;
    },
    _$$RoomMixin$UserToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", instance.$$UserMixin_$$typename, "userId", A._lateReadCheck(instance.$$UserMixin___$UserMixin_userId, "userId"), "name", instance.$$UserMixin_name], type$.String, type$.dynamic);
    },
    _$CreateRoom$Mutation$RoomCreated$RoomFromJson(json) {
      var t3, _null = null,
        t1 = new A.CreateRoom$Mutation$RoomCreated$Room(_null, $, _null, $, $, $, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t2 = J.getInterceptor$asx(json);
      t1.$$RoomMixin_$$typename = A._asStringQ(t2.$index(json, "__typename"));
      t1.$$RoomMixin___$RoomMixin_roomId = A._asString(t2.$index(json, "roomId"));
      t3 = A._asStringQ(t2.$index(json, "lastMessageDate"));
      t1.$$RoomMixin_lastMessageDate = t3 == null ? _null : A.DateTime_parse(t3);
      t1.$$RoomMixin___$RoomMixin_lastUpdateDate = A.DateTime_parse(A._asString(t2.$index(json, "lastUpdateDate")));
      t1.$$RoomMixin___$RoomMixin_createdDate = A.DateTime_parse(A._asString(t2.$index(json, "createdDate")));
      t1.set$__$RoomMixin_users(type$.List_$RoomMixin$User._as(J.map$1$1$ax(type$.List_dynamic._as(t2.$index(json, "users")), new A._$CreateRoom$Mutation$RoomCreated$RoomFromJson_closure(), type$.$RoomMixin$User).toList$0(0)));
      return t1;
    },
    _$CreateRoom$Mutation$RoomCreated$RoomToJson(instance) {
      var t4, t5, t6, t7, t8,
        t1 = instance.$$RoomMixin_$$typename,
        t2 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_roomId, "roomId"),
        t3 = instance.$$RoomMixin_lastMessageDate;
      t3 = t3 == null ? null : t3.toIso8601String$0();
      t4 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_lastUpdateDate, "lastUpdateDate").toIso8601String$0();
      t5 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_createdDate, "createdDate").toIso8601String$0();
      t6 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_users, "users");
      t7 = A.instanceType(t6);
      t8 = t7._eval$1("MappedListIterable<1,Map<String,@>>");
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", t1, "roomId", t2, "lastMessageDate", t3, "lastUpdateDate", t4, "createdDate", t5, "users", A.List_List$of(new A.MappedListIterable(t6, t7._eval$1("Map<String,@>(1)")._as(new A._$CreateRoom$Mutation$RoomCreated$RoomToJson_closure()), t8), true, t8._eval$1("ListIterable.E"))], type$.String, type$.dynamic);
    },
    _$CreateRoom$Mutation$RoomCreatedToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["token", A._lateReadCheck(instance.__CreateRoom$Mutation$RoomCreated_token, "token"), "room", A._$CreateRoom$Mutation$RoomCreated$RoomToJson(A._lateReadCheck(instance.__CreateRoom$Mutation$RoomCreated_room, "room"))], type$.String, type$.dynamic);
    },
    _$SendMessageRoom$Mutation$RoomMessageToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", instance.$$RoomMessageMixin_$$typename, "messageId", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_messageId, "messageId"), "roomId", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_roomId, "roomId"), "content", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_content, "content"), "createdDate", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_createdDate, "createdDate").toIso8601String$0(), "recipientUserId", instance.$$RoomMessageMixin_recipientUserId, "user", A._$$RoomMessageMixin$UserToJson(A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_user, "user"))], type$.String, type$.dynamic);
    },
    _$$RoomMessageMixin$UserFromJson(json) {
      var _null = null,
        t1 = new A.$RoomMessageMixin$User(_null, $, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t2 = J.getInterceptor$asx(json);
      t1.$$UserMixin_$$typename = A._asStringQ(t2.$index(json, "__typename"));
      t1.$$UserMixin___$UserMixin_userId = A._asString(t2.$index(json, "userId"));
      t1.$$UserMixin_name = A._asStringQ(t2.$index(json, "name"));
      return t1;
    },
    _$$RoomMessageMixin$UserToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", instance.$$UserMixin_$$typename, "userId", A._lateReadCheck(instance.$$UserMixin___$UserMixin_userId, "userId"), "name", instance.$$UserMixin_name], type$.String, type$.dynamic);
    },
    _$EventsRoom$Subscription$RoomEvent$RoomFromJson(json) {
      var t3, _null = null,
        t1 = new A.EventsRoom$Subscription$RoomEvent$Room(_null, $, _null, $, $, $, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t2 = J.getInterceptor$asx(json);
      t1.$$RoomMixin_$$typename = A._asStringQ(t2.$index(json, "__typename"));
      t1.$$RoomMixin___$RoomMixin_roomId = A._asString(t2.$index(json, "roomId"));
      t3 = A._asStringQ(t2.$index(json, "lastMessageDate"));
      t1.$$RoomMixin_lastMessageDate = t3 == null ? _null : A.DateTime_parse(t3);
      t1.$$RoomMixin___$RoomMixin_lastUpdateDate = A.DateTime_parse(A._asString(t2.$index(json, "lastUpdateDate")));
      t1.$$RoomMixin___$RoomMixin_createdDate = A.DateTime_parse(A._asString(t2.$index(json, "createdDate")));
      t1.set$__$RoomMixin_users(type$.List_$RoomMixin$User._as(J.map$1$1$ax(type$.List_dynamic._as(t2.$index(json, "users")), new A._$EventsRoom$Subscription$RoomEvent$RoomFromJson_closure(), type$.$RoomMixin$User).toList$0(0)));
      return t1;
    },
    _$EventsRoom$Subscription$RoomEvent$RoomToJson(instance) {
      var t4, t5, t6, t7, t8,
        t1 = instance.$$RoomMixin_$$typename,
        t2 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_roomId, "roomId"),
        t3 = instance.$$RoomMixin_lastMessageDate;
      t3 = t3 == null ? null : t3.toIso8601String$0();
      t4 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_lastUpdateDate, "lastUpdateDate").toIso8601String$0();
      t5 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_createdDate, "createdDate").toIso8601String$0();
      t6 = A._lateReadCheck(instance.$$RoomMixin___$RoomMixin_users, "users");
      t7 = A.instanceType(t6);
      t8 = t7._eval$1("MappedListIterable<1,Map<String,@>>");
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", t1, "roomId", t2, "lastMessageDate", t3, "lastUpdateDate", t4, "createdDate", t5, "users", A.List_List$of(new A.MappedListIterable(t6, t7._eval$1("Map<String,@>(1)")._as(new A._$EventsRoom$Subscription$RoomEvent$RoomToJson_closure()), t8), true, t8._eval$1("ListIterable.E"))], type$.String, type$.dynamic);
    },
    _$EventsRoom$Subscription$RoomEvent$RoomMessageToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", instance.$$RoomMessageMixin_$$typename, "messageId", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_messageId, "messageId"), "roomId", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_roomId, "roomId"), "content", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_content, "content"), "createdDate", A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_createdDate, "createdDate").toIso8601String$0(), "recipientUserId", instance.$$RoomMessageMixin_recipientUserId, "user", A._$$RoomMessageMixin$UserToJson(A._lateReadCheck(instance.$$RoomMessageMixin___$RoomMessageMixin_user, "user"))], type$.String, type$.dynamic);
    },
    $UserMixin: function $UserMixin() {
    },
    $RoomMixin: function $RoomMixin() {
    },
    $RoomMessageMixin: function $RoomMessageMixin() {
    },
    CreateUser$Mutation$UserCreated$User: function CreateUser$Mutation$UserCreated$User(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.$$UserMixin_$$typename = t0;
      _.$$UserMixin___$UserMixin_userId = t1;
      _.$$UserMixin_name = t2;
      _.anyMap = t3;
      _.checked = t4;
      _.$constructor = t5;
      _.createFactory = t6;
      _.createFieldMap = t7;
      _.createToJson = t8;
      _.disallowUnrecognizedKeys = t9;
      _.explicitToJson = t10;
      _.fieldRename = t11;
      _.genericArgumentFactories = t12;
      _.ignoreUnannotated = t13;
      _.includeIfNull = t14;
    },
    CreateUser$Mutation$UserCreated: function CreateUser$Mutation$UserCreated(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.__CreateUser$Mutation$UserCreated_user = _.__CreateUser$Mutation$UserCreated_token = $;
      _.anyMap = t0;
      _.checked = t1;
      _.$constructor = t2;
      _.createFactory = t3;
      _.createFieldMap = t4;
      _.createToJson = t5;
      _.disallowUnrecognizedKeys = t6;
      _.explicitToJson = t7;
      _.fieldRename = t8;
      _.genericArgumentFactories = t9;
      _.ignoreUnannotated = t10;
      _.includeIfNull = t11;
    },
    CreateUser$Mutation: function CreateUser$Mutation(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.__CreateUser$Mutation_createUser = $;
      _.anyMap = t0;
      _.checked = t1;
      _.$constructor = t2;
      _.createFactory = t3;
      _.createFieldMap = t4;
      _.createToJson = t5;
      _.disallowUnrecognizedKeys = t6;
      _.explicitToJson = t7;
      _.fieldRename = t8;
      _.genericArgumentFactories = t9;
      _.ignoreUnannotated = t10;
      _.includeIfNull = t11;
    },
    $RoomMixin$User: function $RoomMixin$User(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.$$UserMixin_$$typename = t0;
      _.$$UserMixin___$UserMixin_userId = t1;
      _.$$UserMixin_name = t2;
      _.anyMap = t3;
      _.checked = t4;
      _.$constructor = t5;
      _.createFactory = t6;
      _.createFieldMap = t7;
      _.createToJson = t8;
      _.disallowUnrecognizedKeys = t9;
      _.explicitToJson = t10;
      _.fieldRename = t11;
      _.genericArgumentFactories = t12;
      _.ignoreUnannotated = t13;
      _.includeIfNull = t14;
    },
    CreateRoom$Mutation$RoomCreated$Room: function CreateRoom$Mutation$RoomCreated$Room(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.$$RoomMixin_$$typename = t0;
      _.$$RoomMixin___$RoomMixin_roomId = t1;
      _.$$RoomMixin_lastMessageDate = t2;
      _.$$RoomMixin___$RoomMixin_lastUpdateDate = t3;
      _.$$RoomMixin___$RoomMixin_createdDate = t4;
      _.$$RoomMixin___$RoomMixin_users = t5;
      _.anyMap = t6;
      _.checked = t7;
      _.$constructor = t8;
      _.createFactory = t9;
      _.createFieldMap = t10;
      _.createToJson = t11;
      _.disallowUnrecognizedKeys = t12;
      _.explicitToJson = t13;
      _.fieldRename = t14;
      _.genericArgumentFactories = t15;
      _.ignoreUnannotated = t16;
      _.includeIfNull = t17;
    },
    CreateRoom$Mutation$RoomCreated: function CreateRoom$Mutation$RoomCreated(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.__CreateRoom$Mutation$RoomCreated_room = _.__CreateRoom$Mutation$RoomCreated_token = $;
      _.anyMap = t0;
      _.checked = t1;
      _.$constructor = t2;
      _.createFactory = t3;
      _.createFieldMap = t4;
      _.createToJson = t5;
      _.disallowUnrecognizedKeys = t6;
      _.explicitToJson = t7;
      _.fieldRename = t8;
      _.genericArgumentFactories = t9;
      _.ignoreUnannotated = t10;
      _.includeIfNull = t11;
    },
    CreateRoom$Mutation: function CreateRoom$Mutation(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.__CreateRoom$Mutation_createRoom = $;
      _.anyMap = t0;
      _.checked = t1;
      _.$constructor = t2;
      _.createFactory = t3;
      _.createFieldMap = t4;
      _.createToJson = t5;
      _.disallowUnrecognizedKeys = t6;
      _.explicitToJson = t7;
      _.fieldRename = t8;
      _.genericArgumentFactories = t9;
      _.ignoreUnannotated = t10;
      _.includeIfNull = t11;
    },
    SendMessageRoom$Mutation$RoomMessage: function SendMessageRoom$Mutation$RoomMessage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.$$RoomMessageMixin_$$typename = t0;
      _.$$RoomMessageMixin___$RoomMessageMixin_messageId = t1;
      _.$$RoomMessageMixin___$RoomMessageMixin_roomId = t2;
      _.$$RoomMessageMixin___$RoomMessageMixin_content = t3;
      _.$$RoomMessageMixin___$RoomMessageMixin_createdDate = t4;
      _.$$RoomMessageMixin_recipientUserId = t5;
      _.$$RoomMessageMixin___$RoomMessageMixin_user = t6;
      _.anyMap = t7;
      _.checked = t8;
      _.$constructor = t9;
      _.createFactory = t10;
      _.createFieldMap = t11;
      _.createToJson = t12;
      _.disallowUnrecognizedKeys = t13;
      _.explicitToJson = t14;
      _.fieldRename = t15;
      _.genericArgumentFactories = t16;
      _.ignoreUnannotated = t17;
      _.includeIfNull = t18;
    },
    SendMessageRoom$Mutation: function SendMessageRoom$Mutation(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.__SendMessageRoom$Mutation_sendMessageRoom = $;
      _.anyMap = t0;
      _.checked = t1;
      _.$constructor = t2;
      _.createFactory = t3;
      _.createFieldMap = t4;
      _.createToJson = t5;
      _.disallowUnrecognizedKeys = t6;
      _.explicitToJson = t7;
      _.fieldRename = t8;
      _.genericArgumentFactories = t9;
      _.ignoreUnannotated = t10;
      _.includeIfNull = t11;
    },
    $RoomMessageMixin$User: function $RoomMessageMixin$User(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.$$UserMixin_$$typename = t0;
      _.$$UserMixin___$UserMixin_userId = t1;
      _.$$UserMixin_name = t2;
      _.anyMap = t3;
      _.checked = t4;
      _.$constructor = t5;
      _.createFactory = t6;
      _.createFieldMap = t7;
      _.createToJson = t8;
      _.disallowUnrecognizedKeys = t9;
      _.explicitToJson = t10;
      _.fieldRename = t11;
      _.genericArgumentFactories = t12;
      _.ignoreUnannotated = t13;
      _.includeIfNull = t14;
    },
    EventsRoom$Subscription$RoomEvent$Room: function EventsRoom$Subscription$RoomEvent$Room(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.$$RoomMixin_$$typename = t0;
      _.$$RoomMixin___$RoomMixin_roomId = t1;
      _.$$RoomMixin_lastMessageDate = t2;
      _.$$RoomMixin___$RoomMixin_lastUpdateDate = t3;
      _.$$RoomMixin___$RoomMixin_createdDate = t4;
      _.$$RoomMixin___$RoomMixin_users = t5;
      _.$$$typename = null;
      _.anyMap = t6;
      _.checked = t7;
      _.$constructor = t8;
      _.createFactory = t9;
      _.createFieldMap = t10;
      _.createToJson = t11;
      _.disallowUnrecognizedKeys = t12;
      _.explicitToJson = t13;
      _.fieldRename = t14;
      _.genericArgumentFactories = t15;
      _.ignoreUnannotated = t16;
      _.includeIfNull = t17;
    },
    EventsRoom$Subscription$RoomEvent$RoomMessage: function EventsRoom$Subscription$RoomEvent$RoomMessage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.$$RoomMessageMixin_$$typename = t0;
      _.$$RoomMessageMixin___$RoomMessageMixin_messageId = t1;
      _.$$RoomMessageMixin___$RoomMessageMixin_roomId = t2;
      _.$$RoomMessageMixin___$RoomMessageMixin_content = t3;
      _.$$RoomMessageMixin___$RoomMessageMixin_createdDate = t4;
      _.$$RoomMessageMixin_recipientUserId = t5;
      _.$$RoomMessageMixin___$RoomMessageMixin_user = t6;
      _.$$$typename = null;
      _.anyMap = t7;
      _.checked = t8;
      _.$constructor = t9;
      _.createFactory = t10;
      _.createFieldMap = t11;
      _.createToJson = t12;
      _.disallowUnrecognizedKeys = t13;
      _.explicitToJson = t14;
      _.fieldRename = t15;
      _.genericArgumentFactories = t16;
      _.ignoreUnannotated = t17;
      _.includeIfNull = t18;
    },
    EventsRoom$Subscription$RoomEvent: function EventsRoom$Subscription$RoomEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.$$$typename = null;
      _.anyMap = t0;
      _.checked = t1;
      _.$constructor = t2;
      _.createFactory = t3;
      _.createFieldMap = t4;
      _.createToJson = t5;
      _.disallowUnrecognizedKeys = t6;
      _.explicitToJson = t7;
      _.fieldRename = t8;
      _.genericArgumentFactories = t9;
      _.ignoreUnannotated = t10;
      _.includeIfNull = t11;
    },
    EventsRoom$Subscription: function EventsRoom$Subscription(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.__EventsRoom$Subscription_eventsRoom = $;
      _.anyMap = t0;
      _.checked = t1;
      _.$constructor = t2;
      _.createFactory = t3;
      _.createFieldMap = t4;
      _.createToJson = t5;
      _.disallowUnrecognizedKeys = t6;
      _.explicitToJson = t7;
      _.fieldRename = t8;
      _.genericArgumentFactories = t9;
      _.ignoreUnannotated = t10;
      _.includeIfNull = t11;
    },
    CreateUserArguments: function CreateUserArguments(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.name = t0;
      _.anyMap = t1;
      _.checked = t2;
      _.$constructor = t3;
      _.createFactory = t4;
      _.createFieldMap = t5;
      _.createToJson = t6;
      _.disallowUnrecognizedKeys = t7;
      _.explicitToJson = t8;
      _.fieldRename = t9;
      _.genericArgumentFactories = t10;
      _.ignoreUnannotated = t11;
      _.includeIfNull = t12;
    },
    CreateUserMutation: function CreateUserMutation(t0, t1, t2) {
      this.document = t0;
      this.CreateUserMutation_operationName = t1;
      this.CreateUserMutation_variables = t2;
    },
    CreateRoomMutation: function CreateRoomMutation(t0, t1) {
      this.document = t0;
      this.CreateRoomMutation_operationName = t1;
    },
    SendMessageRoomArguments: function SendMessageRoomArguments(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.__SendMessageRoomArguments_roomId = t0;
      _.__SendMessageRoomArguments_content = t1;
      _.recipientUserId = t2;
      _.anyMap = t3;
      _.checked = t4;
      _.$constructor = t5;
      _.createFactory = t6;
      _.createFieldMap = t7;
      _.createToJson = t8;
      _.disallowUnrecognizedKeys = t9;
      _.explicitToJson = t10;
      _.fieldRename = t11;
      _.genericArgumentFactories = t12;
      _.ignoreUnannotated = t13;
      _.includeIfNull = t14;
    },
    SendMessageRoomMutation: function SendMessageRoomMutation(t0, t1, t2) {
      this.document = t0;
      this.SendMessageRoomMutation_operationName = t1;
      this.SendMessageRoomMutation_variables = t2;
    },
    EventsRoomArguments: function EventsRoomArguments(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.__EventsRoomArguments_token = t0;
      _.anyMap = t1;
      _.checked = t2;
      _.$constructor = t3;
      _.createFactory = t4;
      _.createFieldMap = t5;
      _.createToJson = t6;
      _.disallowUnrecognizedKeys = t7;
      _.explicitToJson = t8;
      _.fieldRename = t9;
      _.genericArgumentFactories = t10;
      _.ignoreUnannotated = t11;
      _.includeIfNull = t12;
    },
    EventsRoomSubscription: function EventsRoomSubscription(t0, t1, t2) {
      this.document = t0;
      this.EventsRoomSubscription_operationName = t1;
      this.EventsRoomSubscription_variables = t2;
    },
    _$CreateRoom$Mutation$RoomCreated$RoomFromJson_closure: function _$CreateRoom$Mutation$RoomCreated$RoomFromJson_closure() {
    },
    _$CreateRoom$Mutation$RoomCreated$RoomToJson_closure: function _$CreateRoom$Mutation$RoomCreated$RoomToJson_closure() {
    },
    _$EventsRoom$Subscription$RoomEvent$RoomFromJson_closure: function _$EventsRoom$Subscription$RoomEvent$RoomFromJson_closure() {
    },
    _$EventsRoom$Subscription$RoomEvent$RoomToJson_closure: function _$EventsRoom$Subscription$RoomEvent$RoomToJson_closure() {
    },
    _$RoomMessageMixin$User_JsonSerializable_EquatableMixin: function _$RoomMessageMixin$User_JsonSerializable_EquatableMixin() {
    },
    _$RoomMessageMixin$User_JsonSerializable_EquatableMixin_$UserMixin: function _$RoomMessageMixin$User_JsonSerializable_EquatableMixin_$UserMixin() {
    },
    _$RoomMixin$User_JsonSerializable_EquatableMixin: function _$RoomMixin$User_JsonSerializable_EquatableMixin() {
    },
    _$RoomMixin$User_JsonSerializable_EquatableMixin_$UserMixin: function _$RoomMixin$User_JsonSerializable_EquatableMixin_$UserMixin() {
    },
    _CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin: function _CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin() {
    },
    _CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin_$RoomMixin: function _CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin_$RoomMixin() {
    },
    _CreateRoom$Mutation$RoomCreated_JsonSerializable_EquatableMixin: function _CreateRoom$Mutation$RoomCreated_JsonSerializable_EquatableMixin() {
    },
    _CreateRoom$Mutation_JsonSerializable_EquatableMixin: function _CreateRoom$Mutation_JsonSerializable_EquatableMixin() {
    },
    _CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin: function _CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin() {
    },
    _CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin_$UserMixin: function _CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin_$UserMixin() {
    },
    _CreateUser$Mutation$UserCreated_JsonSerializable_EquatableMixin: function _CreateUser$Mutation$UserCreated_JsonSerializable_EquatableMixin() {
    },
    _CreateUser$Mutation_JsonSerializable_EquatableMixin: function _CreateUser$Mutation_JsonSerializable_EquatableMixin() {
    },
    _CreateUserArguments_JsonSerializable_EquatableMixin: function _CreateUserArguments_JsonSerializable_EquatableMixin() {
    },
    _EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin: function _EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin() {
    },
    _EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMixin: function _EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMixin() {
    },
    _EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin: function _EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin() {
    },
    _EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMessageMixin: function _EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMessageMixin() {
    },
    _EventsRoom$Subscription$RoomEvent_JsonSerializable_EquatableMixin: function _EventsRoom$Subscription$RoomEvent_JsonSerializable_EquatableMixin() {
    },
    _EventsRoom$Subscription_JsonSerializable_EquatableMixin: function _EventsRoom$Subscription_JsonSerializable_EquatableMixin() {
    },
    _EventsRoomArguments_JsonSerializable_EquatableMixin: function _EventsRoomArguments_JsonSerializable_EquatableMixin() {
    },
    _SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin: function _SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin() {
    },
    _SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin_$RoomMessageMixin: function _SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin_$RoomMessageMixin() {
    },
    _SendMessageRoom$Mutation_JsonSerializable_EquatableMixin: function _SendMessageRoom$Mutation_JsonSerializable_EquatableMixin() {
    },
    _SendMessageRoomArguments_JsonSerializable_EquatableMixin: function _SendMessageRoomArguments_JsonSerializable_EquatableMixin() {
    },
    RoomSignalsClient_create(url, persistence) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.RoomSignalsClient),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], roomClient, tokens, tokensList, wsUrl, token, t1, t2, link, client, response, createUser, value, tokens0, t3, exception, $async$exception;
      var $async$RoomSignalsClient_create = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (B.JSString_methods.startsWith$1(url, "http")) {
                A.RangeError_checkValueInInterval(0, 0, url.length, "startIndex");
                wsUrl = A.stringReplaceFirstUnchecked(url, "http", "ws", 0);
              } else
                wsUrl = url;
              $async$goto = 3;
              return A._asyncAwait(window.localStorage.getItem("rs_client-room-signals-auth"), $async$RoomSignalsClient_create);
            case 3:
              // returning from await.
              token = $async$result;
              token = token;
              t1 = token != null;
              if (t1) {
                t2 = type$.String;
                t2 = A.LinkedHashMap_LinkedHashMap$_literal(["room-signals-auth", token], t2, t2);
              } else
                t2 = null;
              link = A.WebSocketLink$(wsUrl, true, t2, B.Duration_10000000);
              client = new A.ArtemisClient(link);
              $async$goto = 4;
              return A._asyncAwait(client.execute$2$1(new A.CreateUserMutation($.$get$CREATE_USER_MUTATION_DOCUMENT(), "createUser", new A.CreateUserArguments(null, null, null, null, null, null, null, null, null, null, null, null, null)), type$.CreateUser$Mutation, type$.CreateUserArguments), $async$RoomSignalsClient_create);
            case 4:
              // returning from await.
              response = $async$result;
              t2 = response.data;
              createUser = t2 == null ? null : A._lateReadCheck(t2.__CreateUser$Mutation_createUser, "createUser");
              $async$goto = !t1 || createUser == null ? 5 : 6;
              break;
            case 5:
              // then
              client.dispose$0();
              $async$goto = 7;
              return A._asyncAwait(link.dispose$0(), $async$RoomSignalsClient_create);
            case 7:
              // returning from await.
              $async$goto = createUser == null ? 8 : 9;
              break;
            case 8:
              // then
              t1 = window.localStorage;
              value = t1.getItem("rs_client-room-signals-auth");
              t1.removeItem("rs_client-room-signals-auth");
              $async$goto = 10;
              return A._asyncAwait(value != null, $async$RoomSignalsClient_create);
            case 10:
              // returning from await.
              t1 = response.errors;
              t1.toString;
              throw A.wrapException(A.Exception_Exception(t1));
            case 9:
              // join
              t1 = type$.String;
              link = A.WebSocketLink$(wsUrl, true, A.LinkedHashMap_LinkedHashMap$_literal(["room-signals-auth", A._lateReadCheck(createUser.__CreateUser$Mutation$UserCreated_token, "token")], t1, t1), B.Duration_10000000);
              client = new A.ArtemisClient(link);
            case 6:
              // join
              t1 = A._lateReadCheck(createUser.__CreateUser$Mutation$UserCreated_token, "token");
              window.localStorage.setItem("rs_client-room-signals-auth", t1);
              $async$goto = 11;
              return A._asyncAwait(null, $async$RoomSignalsClient_create);
            case 11:
              // returning from await.
              t1 = type$.String;
              t2 = type$.Room;
              roomClient = new A.RoomSignalsClient(client, link, createUser, persistence, new A._AsyncBroadcastStreamController(null, null, type$._AsyncBroadcastStreamController_Room), new A._AsyncBroadcastStreamController(null, null, type$._AsyncBroadcastStreamController_$RoomMessageMixin), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
              $async$goto = 12;
              return A._asyncAwait(window.localStorage.getItem("rs_client-room-signals-tokens"), $async$RoomSignalsClient_create);
            case 12:
              // returning from await.
              tokens0 = $async$result;
              tokens = tokens0;
              $async$goto = tokens != null ? 13 : 14;
              break;
            case 13:
              // then
              $async$handler = 16;
              tokensList = J.cast$1$0$ax(type$.List_dynamic._as(B.C_JsonCodec.decode$2$reviver(0, tokens, null)), t1);
              t1 = tokensList;
              t3 = A.instanceType(t1);
              $async$goto = 19;
              return A._asyncAwait(A.Future_wait(new A.MappedListIterable(t1, t3._eval$1("Future<Room>(ListMixin.E)")._as(roomClient.get$subscribeToRoom()), t3._eval$1("MappedListIterable<ListMixin.E,Future<Room>>")), t2), $async$RoomSignalsClient_create);
            case 19:
              // returning from await.
              $async$handler = 2;
              // goto after finally
              $async$goto = 18;
              break;
            case 16:
              // catch
              $async$handler = 15;
              $async$exception = $async$currentError;
              // goto after finally
              $async$goto = 18;
              break;
            case 15:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 18:
              // after finally
            case 14:
              // join
              $async$returnValue = roomClient;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$RoomSignalsClient_create, $async$completer);
    },
    ClientPersistence: function ClientPersistence() {
    },
    ClientPersistencePrefixed: function ClientPersistencePrefixed() {
    },
    RoomSignalsClient: function RoomSignalsClient(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.client = t0;
      _._link = t1;
      _.userCreated = t2;
      _.persistence = t3;
      _._roomChangeController = t4;
      _._messageController = t5;
      _.rooms = t6;
    },
    RoomSignalsClient__syncPersistence_closure: function RoomSignalsClient__syncPersistence_closure() {
    },
    RoomSignalsClient_subscribeToRoom_complete: function RoomSignalsClient_subscribeToRoom_complete(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.comp = t2;
    },
    RoomSignalsClient_subscribeToRoom_closure: function RoomSignalsClient_subscribeToRoom_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.subs = t2;
      _.token = t3;
      _.complete = t4;
    },
    RoomSignalsClient_subscribeToRoom__closure: function RoomSignalsClient_subscribeToRoom__closure(t0) {
      this.data = t0;
    },
    RoomSignalsClient_subscribeToRoom__closure0: function RoomSignalsClient_subscribeToRoom__closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.data = t1;
      _.subs = t2;
      _.token = t3;
    },
    RoomSignalsClient_subscribeToRoom___closure: function RoomSignalsClient_subscribeToRoom___closure(t0, t1, t2) {
      this.$this = t0;
      this.subs = t1;
      this.data = t2;
    },
    RoomSignalsClient_subscribeToRoom_closure0: function RoomSignalsClient_subscribeToRoom_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Room: function Room(t0, t1, t2) {
      this.token = t0;
      this.cancelSubscription = t1;
      this.data = t2;
    },
    _ClientPersistencePrefixed_Object_ClientPersistence: function _ClientPersistencePrefixed_Object_ClientPersistence() {
    },
    DeferStream$(streamFactory, reusable, $T) {
      return new A.DeferStream(streamFactory, true, $T._eval$1("DeferStream<0>"));
    },
    DeferStream: function DeferStream(t0, t1, t2) {
      this._factory = t0;
      this._isReusable = t1;
      this.$ti = t2;
    },
    BehaviorSubject__deferStream(wrapper, controller, sync, $T) {
      return new A.BehaviorSubject__deferStream_closure(wrapper, controller, $T);
    },
    BehaviorSubject: function BehaviorSubject(t0, t1, t2, t3, t4) {
      var _ = this;
      _._wrapper = t0;
      _._behavior_subject$_stream = t1;
      _._subject$_controller = t2;
      _._isAddingStreamItems = false;
      _._stream = t3;
      _.$ti = t4;
    },
    BehaviorSubject__deferStream_closure: function BehaviorSubject__deferStream_closure(t0, t1, t2) {
      this.wrapper = t0;
      this.controller = t1;
      this.T = t2;
    },
    BehaviorSubject_where_closure: function BehaviorSubject_where_closure(t0, t1) {
      this.$this = t0;
      this.test = t1;
    },
    BehaviorSubject_transform_closure: function BehaviorSubject_transform_closure(t0, t1, t2) {
      this.$this = t0;
      this.streamTransformer = t1;
      this.S = t2;
    },
    BehaviorSubject_take_closure: function BehaviorSubject_take_closure(t0, t1) {
      this.$this = t0;
      this.count = t1;
    },
    BehaviorSubject__forwardBehaviorSubject_closure0: function BehaviorSubject__forwardBehaviorSubject_closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.subscription = t1;
      _.transformerStream = t2;
      _.subject = t3;
      _.R = t4;
    },
    BehaviorSubject__forwardBehaviorSubject_closure: function BehaviorSubject__forwardBehaviorSubject_closure(t0) {
      this.subscription = t0;
    },
    _Wrapper: function _Wrapper(t0, t1) {
      this.latestValue = t0;
      this.latestErrorAndStackTrace = null;
      this.$ti = t1;
    },
    Subject: function Subject() {
    },
    _StartWithStreamSink: function _StartWithStreamSink(t0, t1) {
      this._startValue = t0;
      this._isFirstEventAdded = false;
      this.$ti = t1;
    },
    _StartWithStreamSink_onListen_closure: function _StartWithStreamSink_onListen_closure(t0, t1) {
      this.$this = t0;
      this.sink = t1;
    },
    StartWithStreamTransformer: function StartWithStreamTransformer(t0, t1) {
      this.startValue = t0;
      this.$ti = t1;
    },
    _StartWithErrorStreamSink: function _StartWithErrorStreamSink(t0, t1, t2) {
      var _ = this;
      _._e = t0;
      _._st = t1;
      _._start_with_error$_isFirstEventAdded = false;
      _.$ti = t2;
    },
    _StartWithErrorStreamSink_onListen_closure: function _StartWithErrorStreamSink_onListen_closure(t0, t1) {
      this.$this = t0;
      this.sink = t1;
    },
    StartWithErrorStreamTransformer: function StartWithErrorStreamTransformer(t0, t1, t2) {
      this.error = t0;
      this.stackTrace = t1;
      this.$ti = t2;
    },
    ErrorAndStackTrace: function ErrorAndStackTrace(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    forwardStream(stream, connectedSink, $T, $R) {
      var controller, subscription, t1, onListen, onCancel;
      A.ArgumentError_checkNotNull(stream, "stream", $T._eval$1("Stream<0>"));
      A.ArgumentError_checkNotNull(connectedSink, "connectedSink", $T._eval$1("@<0>")._bind$1($R)._eval$1("ForwardingSink<1,2>"));
      controller = A._Cell$named("controller");
      subscription = A._Cell$named("subscription");
      t1 = new A.forwardStream_runCatching(connectedSink, controller);
      onListen = new A.forwardStream_closure(t1, connectedSink, controller, subscription, stream, $T);
      onCancel = new A.forwardStream_closure0(subscription, connectedSink, controller);
      if ($T._eval$1("Subject<0>")._is(stream))
        controller.__late_helper$_value = stream.createForwardingSubject$1$3$onCancel$onListen$sync(onCancel, onListen, true, $R);
      else if (stream.get$isBroadcast())
        controller.__late_helper$_value = new A._SyncBroadcastStreamController(onListen, onCancel, $R._eval$1("_SyncBroadcastStreamController<0>"));
      else
        controller.__late_helper$_value = A.StreamController_StreamController(onCancel, onListen, new A.forwardStream_closure1(subscription, t1, connectedSink, controller), new A.forwardStream_closure2(subscription, t1, connectedSink, controller), true, $R);
      return J.get$stream$z(controller._readLocal$0());
    },
    forwardStream_runCatching: function forwardStream_runCatching(t0, t1) {
      this.connectedSink = t0;
      this.controller = t1;
    },
    forwardStream_closure: function forwardStream_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.runCatching = t0;
      _.connectedSink = t1;
      _.controller = t2;
      _.subscription = t3;
      _.stream = t4;
      _.T = t5;
    },
    forwardStream__closure1: function forwardStream__closure1(t0, t1) {
      this.connectedSink = t0;
      this.controller = t1;
    },
    forwardStream__closure2: function forwardStream__closure2(t0, t1, t2, t3) {
      var _ = this;
      _.runCatching = t0;
      _.connectedSink = t1;
      _.controller = t2;
      _.T = t3;
    },
    forwardStream___closure1: function forwardStream___closure1(t0, t1, t2) {
      this.connectedSink = t0;
      this.controller = t1;
      this.data = t2;
    },
    forwardStream__closure4: function forwardStream__closure4(t0, t1, t2) {
      this.runCatching = t0;
      this.connectedSink = t1;
      this.controller = t2;
    },
    forwardStream___closure: function forwardStream___closure(t0, t1, t2, t3) {
      var _ = this;
      _.connectedSink = t0;
      _.controller = t1;
      _.e = t2;
      _.st = t3;
    },
    forwardStream__closure3: function forwardStream__closure3(t0, t1, t2) {
      this.runCatching = t0;
      this.connectedSink = t1;
      this.controller = t2;
    },
    forwardStream___closure0: function forwardStream___closure0(t0, t1) {
      this.connectedSink = t0;
      this.controller = t1;
    },
    forwardStream_closure0: function forwardStream_closure0(t0, t1, t2) {
      this.subscription = t0;
      this.connectedSink = t1;
      this.controller = t2;
    },
    forwardStream_closure1: function forwardStream_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.subscription = t0;
      _.runCatching = t1;
      _.connectedSink = t2;
      _.controller = t3;
    },
    forwardStream__closure0: function forwardStream__closure0(t0, t1) {
      this.connectedSink = t0;
      this.controller = t1;
    },
    forwardStream_closure2: function forwardStream_closure2(t0, t1, t2, t3) {
      var _ = this;
      _.subscription = t0;
      _.runCatching = t1;
      _.connectedSink = t2;
      _.controller = t3;
    },
    forwardStream__closure: function forwardStream__closure(t0, t1) {
      this.connectedSink = t0;
      this.controller = t1;
    },
    ValueWrapper: function ValueWrapper(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    GuaranteeChannel$(innerStream, innerSink, allowSinkErrors, $T) {
      var t2, t1 = {};
      t1.innerStream = innerStream;
      t2 = new A.GuaranteeChannel($T._eval$1("GuaranteeChannel<0>"));
      t2.GuaranteeChannel$3$allowSinkErrors(innerSink, allowSinkErrors, t1, $T);
      return t2;
    },
    GuaranteeChannel: function GuaranteeChannel(t0) {
      var _ = this;
      _.__GuaranteeChannel__streamController = _.__GuaranteeChannel__sink = $;
      _._guarantee_channel$_subscription = null;
      _._disconnected = false;
      _.$ti = t0;
    },
    GuaranteeChannel_closure: function GuaranteeChannel_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.T = t2;
    },
    GuaranteeChannel__closure: function GuaranteeChannel__closure(t0) {
      this.$this = t0;
    },
    _GuaranteeSink: function _GuaranteeSink(t0, t1, t2, t3, t4) {
      var _ = this;
      _._inner = t0;
      _._guarantee_channel$_channel = t1;
      _._doneCompleter = t2;
      _._closed = _._disconnected = false;
      _._addStreamCompleter = _._addStreamSubscription = null;
      _._allowErrors = t3;
      _.$ti = t4;
    },
    _GuaranteeSink__addError_closure: function _GuaranteeSink__addError_closure() {
    },
    StreamChannelController: function StreamChannelController(t0) {
      this.__StreamChannelController__foreign = this.__StreamChannelController__local = $;
      this.$ti = t0;
    },
    StreamChannelMixin: function StreamChannelMixin() {
    },
    Uuid: function Uuid() {
    },
    HtmlWebSocketChannel$connect(url, protocols) {
      var t2, t3, localToForeignController, foreignToLocalController, t4, t5, t6, _null = null,
        t1 = A.WebSocket_WebSocket(url.toString$0(0), protocols);
      B.WebSocket_methods.set$binaryType(t1, "arraybuffer");
      t2 = new A.StreamChannelController(type$.StreamChannelController_dynamic);
      t3 = type$.dynamic;
      localToForeignController = A.StreamController_StreamController(_null, _null, _null, _null, true, t3);
      foreignToLocalController = A.StreamController_StreamController(_null, _null, _null, _null, true, t3);
      t4 = A._instanceType(foreignToLocalController);
      t5 = A._instanceType(localToForeignController);
      t6 = A.GuaranteeChannel$(new A._ControllerStream(foreignToLocalController, t4._eval$1("_ControllerStream<1>")), new A._StreamSinkWrapper(localToForeignController, t5._eval$1("_StreamSinkWrapper<1>")), true, t3);
      A._lateWriteOnceCheck($, "_local");
      t2.set$__StreamChannelController__local(t6);
      t3 = A.GuaranteeChannel$(new A._ControllerStream(localToForeignController, t5._eval$1("_ControllerStream<1>")), new A._StreamSinkWrapper(foreignToLocalController, t4._eval$1("_StreamSinkWrapper<1>")), false, t3);
      A._lateWriteOnceCheck(t2.__StreamChannelController__foreign, "_foreign");
      t2.set$__StreamChannelController__foreign(t3);
      t2 = new A.HtmlWebSocketChannel(t1, t2);
      t2.HtmlWebSocketChannel$1(t1);
      return t2;
    },
    HtmlWebSocketChannel: function HtmlWebSocketChannel(t0, t1) {
      var _ = this;
      _.innerWebSocket = t0;
      _._localCloseReason = _._localCloseCode = null;
      _._html0$_controller = t1;
      _.__HtmlWebSocketChannel_sink = $;
    },
    HtmlWebSocketChannel_closure: function HtmlWebSocketChannel_closure(t0) {
      this.$this = t0;
    },
    HtmlWebSocketChannel_closure0: function HtmlWebSocketChannel_closure0(t0) {
      this.$this = t0;
    },
    HtmlWebSocketChannel_closure1: function HtmlWebSocketChannel_closure1(t0) {
      this.$this = t0;
    },
    HtmlWebSocketChannel_closure2: function HtmlWebSocketChannel_closure2(t0) {
      this.$this = t0;
    },
    HtmlWebSocketChannel__listen_closure: function HtmlWebSocketChannel__listen_closure(t0) {
      this.$this = t0;
    },
    _HtmlWebSocketSink: function _HtmlWebSocketSink(t0, t1) {
      this._html0$_channel = t0;
      this._stream_sink$_sink = t1;
    },
    WebSocketChannel: function WebSocketChannel(t0) {
      this._webSocket = t0;
    },
    WebSocketSink: function WebSocketSink(t0, t1) {
      this._webSocket = t0;
      this._stream_sink$_sink = t1;
    },
    WebSocketChannelException: function WebSocketChannelException(t0) {
      this.message = t0;
    },
    Column$(children, cross, main) {
      return new A.Column(children, main, cross, null);
    },
    Row$(children, cross, expand, main) {
      return new A.Row(children, main, cross, null, expand, null);
    },
    flexStyle(column, cross, expand, main, wrap) {
      var t3, t4, t5,
        t1 = column ? "flex-direction:column;" : "",
        t2 = B.JSArray_methods.get$last(("AxisAlign." + main._name).split("."));
      t2 = A.stringReplaceAllUnchecked(t2, "_", "-");
      t3 = B.JSArray_methods.get$last(("AxisAlign." + cross._name).split("."));
      t3 = A.stringReplaceAllUnchecked(t3, "_", "-");
      if (wrap == null)
        t4 = "";
      else {
        t4 = B.JSArray_methods.get$last(("FlexWrap." + wrap._name).split("."));
        t4 = "flex-wrap:" + A.stringReplaceAllUnchecked(t4, "_", "-") + ";";
      }
      if (expand)
        t5 = column ? "height:100%;" : "width:100%;";
      else
        t5 = "";
      return "display:flex;" + t1 + "justify-content:" + t2 + ";align-items:" + t3 + ";" + t4 + t5;
    },
    Column: function Column(t0, t1, t2, t3) {
      var _ = this;
      _.children = t0;
      _.main = t1;
      _.cross = t2;
      _.key = t3;
    },
    Row: function Row(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.children = t0;
      _.main = t1;
      _.cross = t2;
      _.wrap = t3;
      _.expand = t4;
      _.key = t5;
    },
    AxisAlign: function AxisAlign(t0) {
      this._name = t0;
    },
    FlexWrap: function FlexWrap(t0) {
      this._name = t0;
    },
    Flexible: function Flexible(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    onInput(notifier) {
      return new A.onInput_closure(notifier);
    },
    onInput_closure: function onInput_closure(t0) {
      this.notifier = t0;
    },
    ClientPersistenceLocalStorage: function ClientPersistenceLocalStorage() {
    },
    _ClientPersistenceLocalStorage_Object_ClientPersistence: function _ClientPersistenceLocalStorage_Object_ClientPersistence() {
    },
    main() {
      var t2, t3, t4, t5, t6, t7, t8, _s6_ = "output", _null = null,
        t1 = document;
      if (t1.getElementById(_s6_) == null)
        A.throwExpression(A.Exception_Exception("Unable to locate target dom node in HTML document"));
      t1 = t1.getElementById(_s6_);
      t1.toString;
      t1 = new A.RootRenderElement(_null, _null, "BigBang", t1, true, _s6_, _null, _null, A._setArrayType([], type$.JSArray_RenderElement));
      t2 = $.Window__instance;
      if (t2 == null)
        t2 = $.Window__instance = new A.Window();
      t3 = type$.String;
      t4 = type$.void_Function_PopStateEvent;
      t2._delegate = new A.BrowserWindow(A.LinkedHashMap_LinkedHashMap$_empty(t3, t4));
      t2 = new A.DebugService(B.C_DebugOptions, false, false, false, t1, _null);
      t5 = new A.RouterService(B.C_RouterOptions, A.LinkedHashMap_LinkedHashMap$_empty(type$.NavigatorRenderElement, type$.NavigatorLink), new A.RouterStack(A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.RouterStackEntry)), t1, _null);
      t6 = new A.SchedulerService(A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.nullable_StreamSubscription_SchedulerTask), t1, _null);
      t7 = new A.Services(t1, t2, new A.EventsService(A.LinkedHashMap_LinkedHashMap$_empty(type$.DomEventType, type$.StreamSubscription_Event), t1, _null), t5, t6);
      t1._services = t7;
      t8 = $.ServicesRegistry__instance;
      (t8 == null ? $.ServicesRegistry__instance = new A.ServicesRegistry(A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Services)) : t8)._services_registry$_services.$indexSet(0, _s6_, t7);
      t2.set$_onException(t2.get$presentException());
      t2 = $.Window__instance;
      t2 = (t2 == null ? $.Window__instance = new A.Window() : t2)._delegate;
      t2.toString;
      t4 = t4._as(t5.get$_onPopState());
      t7 = t2._psListeners;
      if (!t7.containsKey$1(0, _s6_))
        t7.$indexSet(0, _s6_, t4);
      t2._psEnsureListening$0();
      t5.set$_routerRequestsStream(A.StreamController_StreamController(_null, _null, _null, _null, false, type$.RouterRequest));
      t2 = t5._routerRequestsStream;
      if (t2 != null)
        new A._ControllerStream(t2, A._instanceType(t2)._eval$1("_ControllerStream<1>")).listen$1(t5.get$_proccessRouterRequest());
      t6.set$_tasksStream(new A._AsyncBroadcastStreamController(_null, _null, type$._AsyncBroadcastStreamController_SchedulerTask));
      t2 = new A.Renderer(t1, new A.Reconciler(A._setArrayType([], type$.JSArray__CompatibilityHashGenerator)), _null);
      t4 = t2.resolveServices$1(t1).rootElement._domNode;
      if (t4 != null)
        J.set$innerHtml$x(t4, "");
      t4 = $.ServicesRegistry__instance;
      t4 = (t4 == null ? $.ServicesRegistry__instance = new A.ServicesRegistry(A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Services)) : t4)._services_registry$_services.$index(0, _s6_)._scheduler;
      t2 = type$.void_Function_SchedulerTask._as(new A.Framework(t2, t1).get$processTask());
      t5 = t4._tasksStream;
      t2 = t5 == null ? _null : new A._BroadcastStream(t5, A._instanceType(t5)._eval$1("_BroadcastStream<1>")).listen$1(t2);
      t4._listeners.$indexSet(0, _s6_, t2);
      t2 = $.Components__instance;
      if (t2 == null)
        t2 = $.Components__instance = new A.Components(A.LinkedHashSet_LinkedHashSet$_empty(t3), A.LinkedHashSet_LinkedHashSet$_empty(t3), A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.StyleComponent));
      t2.injectStyleComponent$1(new A.RadStylesComponent());
      t6.addTask$1(new A.WidgetsBuildTask(t1, A._setArrayType([B.Provider_null], type$.JSArray_Widget), _null, true, _null, _null));
    },
    Landing: function Landing(t0) {
      this.key = t0;
    },
    Provider_maybeOf(context, $T) {
      return context.dependOnInheritedWidgetOfExactType$1$0($T._eval$1("Provider<0>")) == null ? null : B.C_Theme;
    },
    Provider: function Provider(t0, t1) {
      this.key = t0;
      this.$ti = t1;
    },
    RoomSignalsClientView: function RoomSignalsClientView(t0) {
      this.key = t0;
    },
    _RoomSignalsClientViewState: function _RoomSignalsClientViewState(t0, t1, t2, t3) {
      var _ = this;
      _.___RoomSignalsClientViewState_client = $;
      _.userName = t0;
      _.messageText = t1;
      _.loading = true;
      _.sendingMessage = _.creatingRoom = false;
      _.room = null;
      _.roomToken = t2;
      _.messages = t3;
      _._stateful_widget$_element = _._stateful_widget$_widget = null;
    },
    _RoomSignalsClientViewState__rebuild_closure: function _RoomSignalsClientViewState__rebuild_closure() {
    },
    _RoomSignalsClientViewState_initState_closure: function _RoomSignalsClientViewState_initState_closure(t0) {
      this.$this = t0;
    },
    _RoomSignalsClientViewState_initState__closure: function _RoomSignalsClientViewState_initState__closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _RoomSignalsClientViewState_initState___closure: function _RoomSignalsClientViewState_initState___closure(t0) {
      this.$this = t0;
    },
    _RoomSignalsClientViewState_initState____closure0: function _RoomSignalsClientViewState_initState____closure0(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    _RoomSignalsClientViewState_initState_____closure: function _RoomSignalsClientViewState_initState_____closure() {
    },
    _RoomSignalsClientViewState_initState___closure0: function _RoomSignalsClientViewState_initState___closure0(t0) {
      this.$this = t0;
    },
    _RoomSignalsClientViewState_initState____closure: function _RoomSignalsClientViewState_initState____closure() {
    },
    _RoomSignalsClientViewState__leaveRoom_closure: function _RoomSignalsClientViewState__leaveRoom_closure(t0) {
      this.$this = t0;
    },
    _RoomSignalsClientViewState__createRoom_closure: function _RoomSignalsClientViewState__createRoom_closure() {
    },
    _RoomSignalsClientViewState__createRoom_closure0: function _RoomSignalsClientViewState__createRoom_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _RoomSignalsClientViewState__sendMessage_closure: function _RoomSignalsClientViewState__sendMessage_closure() {
    },
    _RoomSignalsClientViewState_build_closure: function _RoomSignalsClientViewState_build_closure() {
    },
    _RoomSignalsClientViewState_build_closure0: function _RoomSignalsClientViewState_build_closure0() {
    },
    _RoomSignalsClientViewState_build_closure1: function _RoomSignalsClientViewState_build_closure1(t0) {
      this.$this = t0;
    },
    _RoomSignalsClientViewState__roomMessages_closure: function _RoomSignalsClientViewState__roomMessages_closure(t0) {
      this.$this = t0;
    },
    Theme: function Theme() {
    },
    CardTheme: function CardTheme() {
    },
    Card: function Card(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    EquatableConfig_stringify() {
      var t1 = $.EquatableConfig__stringify;
      return t1 == null ? $.EquatableConfig__stringify = false : t1;
    },
    fnMapEventTypeToDomEventType(eventType) {
      var _i, type,
        typeMap = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.DomEventType);
      for (_i = 0; _i < 22; ++_i) {
        type = B.List_efn[_i];
        typeMap.$indexSet(0, type.nativeValue, type);
      }
      return typeMap.$index(0, eventType);
    },
    fnIsKeyValueMapEqual(mapOne, mapTwo) {
      return true;
    },
    fnEncodeKeyValueMap(valueMap) {
      var t1, key, value, t2,
        encodedMapValues = A._setArrayType([], type$.JSArray_String);
      for (t1 = valueMap.get$keys(valueMap), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        key = t1.get$current();
        if (key.get$isNotEmpty(key))
          B.JSArray_methods.add$1(encodedMapValues, A._Uri__uriEncode(B.List_KIf, key, B.C_Utf8Codec, false));
        value = valueMap.$index(0, key);
        t2 = value.get$isNotEmpty(value);
        if (t2)
          B.JSArray_methods.add$1(encodedMapValues, A._Uri__uriEncode(B.List_KIf, valueMap.$index(0, key), B.C_Utf8Codec, false));
      }
      return B.JSArray_methods.join$1(encodedMapValues, "/");
    },
    ValueStreamExtensions_get_value(_this, $T) {
      var t1 = _this._wrapper.latestValue;
      return t1 == null ? null : t1.value;
    },
    UuidUtil_mathRNG(seed) {
      var b, rand, i, t1;
      A._asInt(seed);
      b = new Uint8Array(16);
      if (seed === -1)
        rand = $.$get$UuidUtil__random();
      else {
        rand = new A._Random();
        rand._Random$1(seed);
      }
      for (i = 0; i < 16; ++i) {
        t1 = rand.nextInt$1(256);
        if (!(i < 16))
          return A.ioore(b, i);
        b[i] = t1;
      }
      return b;
    }
  },
  J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")), $E);
    },
    JSArray_markFixedList(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    JSArray__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = B.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = B.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$_innerHtml$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$_innerHtml(receiver, value);
    },
    set$innerHtml$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$innerHtml(receiver, value);
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$add$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$add(receiver);
    },
    get$attributes$x(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$children$x(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$classes$x(receiver) {
      return J.getInterceptor$x(receiver).get$classes(receiver);
    },
    get$close$x(receiver) {
      return J.getInterceptor$x(receiver).get$close(receiver);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$keys$x(receiver) {
      return J.getInterceptor$x(receiver).get$keys(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$stream$z(receiver) {
      return J.getInterceptor$z(receiver).get$stream(receiver);
    },
    get$target$x(receiver) {
      return J.getInterceptor$x(receiver).get$target(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    _clearChildren$0$x(receiver) {
      return J.getInterceptor$x(receiver)._clearChildren$0(receiver);
    },
    _removeEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
    },
    _replaceChild$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    contains$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    forEach$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    pause$0$z(receiver) {
      return J.getInterceptor$z(receiver).pause$0(receiver);
    },
    remove$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    replaceWith$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    setInnerHtml$2$validator$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).setInnerHtml$2$validator(receiver, a0, a1);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toLowerCase$0$s(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    trim$0$s(receiver) {
      return J.getInterceptor$s(receiver).trim$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.getRuntimeType(receiver);
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return B.Type_bool_lhE;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_8k0;
    },
    toString$0(receiver) {
      return String(receiver);
    },
    $isJSObject: 1
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    insert$2(receiver, index, value) {
      var t1;
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insert"));
      t1 = receiver.length;
      if (index > t1)
        throw A.wrapException(A.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2(receiver, index, iterable) {
      var insertionLength, end;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insertAll"));
      A.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    remove$1(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    _removeWhere$2(receiver, test, removeMatching) {
      var retained, end, i, element, t1;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      retained = [];
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!A.boolConversionCheck(test.call$1(element)))
          retained.push(element);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    addAll$1(receiver, collection) {
      var t1;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var len, i;
      type$.JSArray_dynamic._as(array);
      len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    forEach$1(receiver, f) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, A.S(receiver[i]));
      return list.join(separator);
    },
    join$0($receiver) {
      return this.join$1($receiver, "");
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    fold$1$2(receiver, initialValue, combine, $T) {
      var $length, value, i;
      $T._as(initialValue);
      A._arrayInstanceType(receiver)._bind$1($T)._eval$1("1(1,2)")._as(combine);
      $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      var end0 = receiver.length;
      if (start > end0)
        throw A.wrapException(A.RangeError$range(start, 0, end0, "start", null));
      if (end == null)
        end = end0;
      else if (end < start || end > end0)
        throw A.wrapException(A.RangeError$range(end, start, end0, "end", null));
      if (start === end)
        return A._setArrayType([], A._arrayInstanceType(receiver));
      return A._setArrayType(receiver.slice(start, end), A._arrayInstanceType(receiver));
    },
    sublist$1($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("setRange"));
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    any$1(receiver, test) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (A.boolConversionCheck(test.call$1(receiver[i])))
          return true;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    every$1(receiver, test) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (!A.boolConversionCheck(test.call$1(receiver[i])))
          return false;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    sort$1(receiver, compare) {
      var t2,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("int(1,1)?")._as(compare);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("sort"));
      t2 = compare == null ? J._interceptors_JSArray__compareAny$closure() : compare;
      A.Sort_sort(receiver, t2, t1._precomputed1);
    },
    indexOf$1(receiver, element) {
      var i,
        $length = receiver.length;
      if (0 >= $length)
        return -1;
      for (i = 0; i < $length; ++i) {
        if (!(i < receiver.length))
          return A.ioore(receiver, i);
        if (J.$eq$(receiver[i], element))
          return i;
      }
      return -1;
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._setArrayType(receiver.slice(0), A._arrayInstanceType(receiver));
      return t1;
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("set length"));
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$_current(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      A._asNum(b);
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    toRadixString$1(receiver, radix) {
      var result, match, t1, exponent;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (B.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return A.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return A.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || false)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return B.Type_num_cv7;
    },
    $isComparable: 1,
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return B.Type_int_tHn;
    },
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return B.Type_double_K1J;
    }
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1(receiver, index) {
      if (index >= receiver.length)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      endIndex = index + pattern.length;
      if (endIndex > receiver.length)
        return false;
      return pattern === receiver.substring(index, endIndex);
    },
    startsWith$1($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1($receiver, start) {
      return this.substring$2($receiver, start, null);
    },
    toLowerCase$0(receiver) {
      return receiver.toLowerCase();
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    contains$2(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    compareTo$1(receiver, other) {
      var t1;
      A._asString(other);
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return B.Type_String_k8F;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (index >= receiver.length)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isComparable: 1,
    $isPattern: 1,
    $isString: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first(_) {
      return A._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current() {
      return this.$ti._rest[1]._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, A._asInt(index)));
    },
    $indexSet(_, index, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, A._asInt(index), t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      var t1 = this.$ti;
      J.add$1$ax(this._source, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_Null);
      t1._asyncComplete$1(null);
      return t1;
    },
    $signature: 90
  };
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    where$1(_, test) {
      return this.super$Iterable$where(0, A._instanceType(this)._eval$1("bool(ListIterable.E)")._as(test));
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, true, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  A.SubListIterable.prototype = {
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      if (typeof endOrLength !== "number")
        return endOrLength.$sub();
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = J.JSArray_JSArray$fixed(0, _this.$ti._precomputed1);
        return t1;
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), false, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        B.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    get$first(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (A.boolConversionCheck(t2.call$1(t1.get$current())))
          return true;
      return false;
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.ExpandIterable.prototype = {
    get$iterator(_) {
      var t1 = this.$ti;
      return new A.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, B.C_EmptyIterator, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("ExpandIterator<1,2>"));
    }
  };
  A.ExpandIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, _this = this;
      if (_this._currentExpansion == null)
        return false;
      for (t1 = _this._iterator, t2 = _this._f; !_this._currentExpansion.moveNext$0();) {
        _this.set$__internal$_current(null);
        if (t1.moveNext$0()) {
          _this.set$_currentExpansion(null);
          _this.set$_currentExpansion(J.get$iterator$ax(t2.call$1(t1.get$current())));
        } else
          return false;
      }
      _this.set$__internal$_current(_this._currentExpansion.get$current());
      return true;
    },
    set$_currentExpansion(_currentExpansion) {
      this._currentExpansion = this.$ti._eval$1("Iterator<2>?")._as(_currentExpansion);
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    },
    $isIterator: 1
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current() {
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      return this._iterator.get$current();
    }
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, A._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    get$first(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current() {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    $isIterator: 1
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("FixedLengthListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A.ConstantMap.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $indexSet(_, key, val) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(val);
      A.ConstantMap__throwUnmodifiable();
    },
    get$entries(_) {
      return this.entries$body$ConstantMap(0, A._instanceType(this)._eval$1("MapEntry<1,2>"));
    },
    entries$body$ConstantMap($async$_, $async$type) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, key, t4;
        return function $async$get$entries($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys($async$self), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t3 = t2._rest[1], t2 = t2._eval$1("@<1>")._bind$1(t3)._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current();
                t4 = $async$self.$index(0, key);
                $async$goto = 4;
                return new A.MapEntry(key, t4 == null ? t3._as(t4) : t4, t2);
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, $async$type);
    },
    $isMap: 1
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    containsKey$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._jsObject[A._asString(key)];
    },
    forEach$1(_, f) {
      var keys, t2, t3, i, t4,
        t1 = this.$ti;
      t1._eval$1("~(1,2)")._as(f);
      keys = this._keys;
      for (t2 = keys.length, t3 = this._jsObject, t1 = t1._rest[1], i = 0; i < t2; ++i) {
        t4 = A._asString(keys[i]);
        f.call$2(t4, t1._as(t3[t4]));
      }
    },
    get$keys(_) {
      return new A._ConstantMapKeyIterable(this, this.$ti._eval$1("_ConstantMapKeyIterable<1>"));
    }
  };
  A._ConstantMapKeyIterable.prototype = {
    get$iterator(_) {
      var t1 = this._map._keys;
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$length(_) {
      return this._map._keys.length;
    }
  };
  A.GeneralConstantMap.prototype = {
    _getMap$0() {
      var t1, t2, t3, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        t1 = _this.$ti;
        t2 = t1._precomputed1;
        t3 = A.GeneralConstantMap__typeTest(t2);
        backingMap = A.LinkedHashMap_LinkedHashMap(A._js_helper_GeneralConstantMap__constantMapHashCode$closure(), t3, t2, t1._rest[1]);
        A.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1(_, key) {
      return this._getMap$0().containsKey$1(0, key);
    },
    $index(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1(_, f) {
      this.$ti._eval$1("~(1,2)")._as(f);
      this._getMap$0().forEach$1(0, f);
    },
    get$keys(_) {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$length(_) {
      return this._getMap$0().__js_helper$_length;
    }
  };
  A.GeneralConstantMap__typeTest_closure.prototype = {
    call$1(o) {
      return this.T._is(o);
    },
    $signature: 9
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A._AssertionError.prototype = {
    toString$0(_) {
      return "Assertion failed: " + A.Error_safeToString(this.message);
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_length !== 0;
    },
    get$keys(_) {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values(_) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(_, key) {
      var strings, t1;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else {
        t1 = this.internalContainsKey$1(key);
        return t1;
      }
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var t2, value, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(ifAbsent);
      if (_this.containsKey$1(0, key)) {
        t2 = _this.$index(0, key);
        return t2 == null ? t1._rest[1]._as(t2) : t2;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var t1;
      if (typeof key == "string")
        return this._removeHashTableEntry$2(this._strings, key);
      else {
        t1 = this.internalRemove$1(key);
        return t1;
      }
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    clear$0(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 0x3fffffff;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.JsLinkedHashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1 = t1.$index(0, t2._precomputed1._as(each));
      return t1 == null ? t2._rest[1]._as(t1) : t1;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    },
    contains$1(_, element) {
      return this._map.containsKey$1(0, element);
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.set$__js_helper$_current(null);
        return false;
      } else {
        _this.set$__js_helper$_current(cell.hashMapCellKey);
        _this._cell = cell._next;
        return true;
      }
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 16
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 43
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 42
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    $isPattern: 1,
    $isRegExp: 1
  };
  A._MatchImplementation.prototype = {
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._match;
      if (!(index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $isMatch: 1
  };
  A.StringMatch.prototype = {
    $index(_, g) {
      A.throwExpression(A.RangeError$value(A._asInt(g), null));
      return this.pattern;
    },
    $isMatch: 1
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    $isIterator: 1
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this.__late_helper$_value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_RkP;
    },
    $isNativeByteBuffer: 1,
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {$isNativeTypedData: 1};
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_zNC;
    }
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._asDouble(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._asInt(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_LB7;
    }
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_LB7;
    }
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_uXf;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_O50;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_ekJ;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_2bx;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_2bx;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_Jik;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_WLA;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 3
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 69
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 1
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 1
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    },
    _TimerImpl$periodic$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setInterval(A.convertDartClosureToJS(new A._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("Periodic timer."));
    },
    cancel$0() {
      if (self.setTimeout != null) {
        var t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw A.wrapException(A.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._TimerImpl$periodic_closure.prototype = {
    call$0() {
      var duration, _this = this,
        t1 = _this.$this,
        tick = t1._tick + 1,
        t2 = _this.milliseconds;
      if (t2 > 0) {
        duration = Date.now() - _this.start;
        if (duration > (tick + 1) * t2)
          tick = B.JSInt_methods.$tdiv(duration, t2);
      }
      t1._tick = tick;
      _this.callback.call$1(t1);
    },
    $signature: 1
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/?")._as(value);
      if (value == null)
        t1._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t2 = _this._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(t1._precomputed1._as(value));
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    },
    $isCompleter: 1
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 2
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 80
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 83
  };
  A._asyncStarHelper_closure.prototype = {
    call$0() {
      var t1 = this.controller,
        t2 = A._lateReadCheck(t1.___AsyncStarStreamController_controller, "controller"),
        t3 = t2._state;
      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {
        t1.isSuspended = true;
        return;
      }
      this.bodyFunction.call$2(0, null);
    },
    $signature: 0
  };
  A._asyncStarHelper_closure0.prototype = {
    call$1(_) {
      var errorCode = this.controller.cancelationFuture != null ? 2 : 0;
      this.bodyFunction.call$2(errorCode, null);
    },
    $signature: 3
  };
  A._AsyncStarStreamController.prototype = {
    _AsyncStarStreamController$1(body, $T) {
      var _this = this,
        t1 = new A._AsyncStarStreamController__resumeBody(body);
      _this.set$___AsyncStarStreamController_controller(_this.$ti._eval$1("StreamController<1>")._as(A.StreamController_StreamController(new A._AsyncStarStreamController_closure(_this, body), new A._AsyncStarStreamController_closure0(t1), null, new A._AsyncStarStreamController_closure1(_this, t1), false, $T)));
    },
    set$___AsyncStarStreamController_controller(___AsyncStarStreamController_controller) {
      this.___AsyncStarStreamController_controller = this.$ti._eval$1("StreamController<1>")._as(___AsyncStarStreamController_controller);
    }
  };
  A._AsyncStarStreamController__resumeBody.prototype = {
    call$0() {
      A.scheduleMicrotask(new A._AsyncStarStreamController__resumeBody_closure(this.body));
    },
    $signature: 1
  };
  A._AsyncStarStreamController__resumeBody_closure.prototype = {
    call$0() {
      this.body.call$2(0, null);
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure0.prototype = {
    call$0() {
      this._resumeBody.call$0();
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.isSuspended) {
        t1.isSuspended = false;
        this._resumeBody.call$0();
      }
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if ((A._lateReadCheck(t1.___AsyncStarStreamController_controller, "controller")._state & 4) === 0) {
        t1.cancelationFuture = new A._Future($.Zone__current, type$._Future_dynamic);
        if (t1.isSuspended) {
          t1.isSuspended = false;
          A.scheduleMicrotask(new A._AsyncStarStreamController__closure(this.body));
        }
        return t1.cancelationFuture;
      }
    },
    $signature: 41
  };
  A._AsyncStarStreamController__closure.prototype = {
    call$0() {
      this.body.call$2(2, null);
    },
    $signature: 0
  };
  A._IterationMarker.prototype = {
    toString$0(_) {
      return "IterationMarker(" + this.state + ", " + A.S(this.value) + ")";
    }
  };
  A._SyncStarIterator.prototype = {
    get$current() {
      var t1,
        nested = this._nestedIterator;
      if (nested == null) {
        t1 = this._async$_current;
        return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
      }
      return nested.get$current();
    },
    moveNext$0() {
      var t1, t2, value, state, suspendedBodies, inner, _this = this;
      for (t1 = _this.$ti._eval$1("Iterator<1>"); true;) {
        t2 = _this._nestedIterator;
        if (t2 != null)
          if (t2.moveNext$0())
            return true;
          else
            _this.set$_nestedIterator(null);
        value = function(body, SUCCESS, ERROR) {
          var errorValue,
            errorCode = SUCCESS;
          while (true)
            try {
              return body(errorCode, errorValue);
            } catch (error) {
              errorValue = error;
              errorCode = ERROR;
            }
        }(_this._body, 0, 1);
        if (value instanceof A._IterationMarker) {
          state = value.state;
          if (state === 2) {
            suspendedBodies = _this._suspendedBodies;
            if (suspendedBodies == null || suspendedBodies.length === 0) {
              _this.set$_async$_current(null);
              return false;
            }
            if (0 >= suspendedBodies.length)
              return A.ioore(suspendedBodies, -1);
            _this._body = suspendedBodies.pop();
            continue;
          } else {
            t2 = value.value;
            if (state === 3)
              throw t2;
            else {
              inner = t1._as(J.get$iterator$ax(t2));
              if (inner instanceof A._SyncStarIterator) {
                t2 = _this._suspendedBodies;
                if (t2 == null)
                  t2 = _this._suspendedBodies = [];
                B.JSArray_methods.add$1(t2, _this._body);
                _this._body = inner._body;
                continue;
              } else {
                _this.set$_nestedIterator(inner);
                continue;
              }
            }
          }
        } else {
          _this.set$_async$_current(value);
          return true;
        }
      }
      return false;
    },
    set$_async$_current(_current) {
      this._async$_current = this.$ti._eval$1("1?")._as(_current);
    },
    set$_nestedIterator(_nestedIterator) {
      this._nestedIterator = this.$ti._eval$1("Iterator<1>?")._as(_nestedIterator);
    },
    $isIterator: 1
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A._BroadcastStream.prototype = {
    get$isBroadcast() {
      return true;
    }
  };
  A._BroadcastSubscription.prototype = {
    _onPause$0() {
    },
    _onResume$0() {
    },
    set$_async$_next(_next) {
      this._async$_next = this.$ti._eval$1("_BroadcastSubscription<1>?")._as(_next);
    },
    set$_async$_previous(_previous) {
      this._async$_previous = this.$ti._eval$1("_BroadcastSubscription<1>?")._as(_previous);
    }
  };
  A._BroadcastStreamController.prototype = {
    get$stream(_) {
      return new A._BroadcastStream(this, A._instanceType(this)._eval$1("_BroadcastStream<1>"));
    },
    get$_mayAddEvent() {
      return this._state < 4;
    },
    _removeListener$1(subscription) {
      var previous, next;
      A._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(subscription);
      previous = subscription._async$_previous;
      next = subscription._async$_next;
      if (previous == null)
        this.set$_firstSubscription(next);
      else
        previous.set$_async$_next(next);
      if (next == null)
        this.set$_lastSubscription(previous);
      else
        next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, subscription, oldLast, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      if ((_this._state & 4) !== 0)
        return A._DoneStreamSubscription$(onDone, t1._precomputed1);
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = t1._eval$1("_BroadcastSubscription<1>");
      subscription = new A._BroadcastSubscription(_this, A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._precomputed1), A._BufferingStreamSubscription__registerErrorHandler(t2, onError), A._BufferingStreamSubscription__registerDoneHandler(t2, onDone), t2, t3, t4);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
      t4._as(subscription);
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this.set$_lastSubscription(subscription);
      subscription.set$_async$_next(null);
      subscription.set$_async$_previous(oldLast);
      if (oldLast == null)
        _this.set$_firstSubscription(subscription);
      else
        oldLast.set$_async$_next(subscription);
      if (_this._firstSubscription == _this._lastSubscription)
        A._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1(sub) {
      var _this = this,
        t1 = A._instanceType(_this);
      sub = t1._eval$1("_BroadcastSubscription<1>")._as(t1._eval$1("StreamSubscription<1>")._as(sub));
      if (sub._async$_next === sub)
        return null;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return null;
    },
    _recordPause$1(subscription) {
      A._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _recordResume$1(subscription) {
      A._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _addEventError$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add new events after calling close");
      return new A.StateError("Cannot add new events while doing an addStream");
    },
    add$1(_, data) {
      var _this = this;
      A._instanceType(_this)._precomputed1._as(data);
      if (!_this.get$_mayAddEvent())
        throw A.wrapException(_this._addEventError$0());
      _this._sendData$1(data);
    },
    addError$2(error, stackTrace) {
      var t1 = type$.Object;
      t1._as(error);
      type$.nullable_StackTrace._as(stackTrace);
      A.checkNotNullable(error, "error", t1);
      if (!this.get$_mayAddEvent())
        throw A.wrapException(this._addEventError$0());
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      this._sendError$2(error, stackTrace);
    },
    addError$1(error) {
      return this.addError$2(error, null);
    },
    close$0(_) {
      var t1, doneFuture, _this = this;
      if ((_this._state & 4) !== 0) {
        t1 = _this._doneFuture;
        t1.toString;
        return t1;
      }
      if (!_this.get$_mayAddEvent())
        throw A.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._doneFuture;
      if (doneFuture == null)
        doneFuture = _this._doneFuture = new A._Future($.Zone__current, type$._Future_void);
      _this._sendDone$0();
      return doneFuture;
    },
    _forEachListener$1(action) {
      var t1, subscription, id, next, _this = this;
      A._instanceType(_this)._eval$1("~(_BufferingStreamSubscription<1>)")._as(action);
      t1 = _this._state;
      if ((t1 & 2) !== 0)
        throw A.wrapException(A.StateError$(string$.Cannot));
      subscription = _this._firstSubscription;
      if (subscription == null)
        return;
      id = t1 & 1;
      _this._state = t1 ^ 3;
      for (; subscription != null;) {
        t1 = subscription._eventState;
        if ((t1 & 1) === id) {
          subscription._eventState = t1 | 2;
          action.call$1(subscription);
          t1 = subscription._eventState ^= 1;
          next = subscription._async$_next;
          if ((t1 & 4) !== 0)
            _this._removeListener$1(subscription);
          subscription._eventState &= 4294967293;
          subscription = next;
        } else
          subscription = subscription._async$_next;
      }
      _this._state &= 4294967293;
      if (_this._firstSubscription == null)
        _this._callOnCancel$0();
    },
    _callOnCancel$0() {
      if ((this._state & 4) !== 0) {
        var doneFuture = this._doneFuture;
        if ((doneFuture._state & 30) === 0)
          doneFuture._asyncComplete$1(null);
      }
      A._runGuarded(this.onCancel);
    },
    set$_firstSubscription(_firstSubscription) {
      this._firstSubscription = A._instanceType(this)._eval$1("_BroadcastSubscription<1>?")._as(_firstSubscription);
    },
    set$_lastSubscription(_lastSubscription) {
      this._lastSubscription = A._instanceType(this)._eval$1("_BroadcastSubscription<1>?")._as(_lastSubscription);
    },
    $isEventSink: 1,
    $isStreamSink: 1,
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  A._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent() {
      return A._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
    },
    _addEventError$0() {
      if ((this._state & 2) !== 0)
        return new A.StateError(string$.Cannot);
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1(data) {
      var t1, _this = this;
      _this.$ti._precomputed1._as(data);
      t1 = _this._firstSubscription;
      if (t1 == null)
        return;
      if (t1 === _this._lastSubscription) {
        _this._state |= 2;
        t1._async$_add$1(data);
        _this._state &= 4294967293;
        if (_this._firstSubscription == null)
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new A._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    _sendError$2(error, stackTrace) {
      if (this._firstSubscription == null)
        return;
      this._forEachListener$1(new A._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
    },
    _sendDone$0() {
      var _this = this;
      if (_this._firstSubscription != null)
        _this._forEachListener$1(new A._SyncBroadcastStreamController__sendDone_closure(_this));
      else
        _this._doneFuture._asyncComplete$1(null);
    }
  };
  A._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._async$_add$1(this.data);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._SyncBroadcastStreamController__sendError_closure.prototype = {
    call$1(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._addError$2(this.error, this.stackTrace);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._SyncBroadcastStreamController__sendDone_closure.prototype = {
    call$1(subscription) {
      this.$this.$ti._eval$1("_BufferingStreamSubscription<1>")._as(subscription)._async$_close$0();
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._AsyncBroadcastStreamController.prototype = {
    _sendData$1(data) {
      var subscription,
        t1 = this.$ti;
      t1._precomputed1._as(data);
      for (subscription = this._firstSubscription, t1 = t1._eval$1("_DelayedData<1>"); subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new A._DelayedData(data, t1));
    },
    _sendError$2(error, stackTrace) {
      var subscription;
      for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _sendDone$0() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(B.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var t1, t2, _this = this;
      type$.Object._as(theError);
      type$.StackTrace._as(theStackTrace);
      t1 = _this._box_0;
      t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        if (t1.remaining === 0 || _this.eagerError)
          _this._future._completeError$2(theError, theStackTrace);
        else {
          _this.error.__late_helper$_value = theError;
          _this.stackTrace.__late_helper$_value = theStackTrace;
        }
      } else if (t2 === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature: 4
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var valueList, t2, _this = this,
        t1 = _this.T;
      t1._as(value);
      t2 = _this._box_0;
      --t2.remaining;
      valueList = t2.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (t2.remaining === 0)
          _this._future._completeWithValue$1(A.List_List$from(valueList, true, t1));
      } else if (t2.remaining === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      var t1;
      A.checkNotNullable(error, "error", type$.Object);
      t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      t1._asyncCompleteError$2(error, stackTrace);
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    },
    $isCompleter: 1
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._asyncComplete$1(t1._eval$1("1/")._as(value));
    },
    complete$0($receiver) {
      return this.complete$1($receiver, null);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 3, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    catchError$1(onError) {
      var t1 = this.$ti,
        t2 = $.Zone__current,
        result = new A._Future(t2, t1);
      if (t2 !== B.C__RootZone)
        onError = A._registerErrorHandler(onError, t2);
      this._addListener$1(new A._FutureListener(result, 2, null, onError, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    whenComplete$1(action) {
      var t1, result;
      type$.dynamic_Function._as(action);
      t1 = this.$ti;
      result = new A._Future($.Zone__current, t1);
      this._addListener$1(new A._FutureListener(result, 8, action, null, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          A._Future__chainCoreFuture(value, _this);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        t1._precomputed1._as(value);
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(t1._precomputed1._as(value));
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__asyncCompleteWithValue_closure(_this, value)));
    },
    _chainFuture$1(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        if ((value._state & 16) !== 0) {
          _this._state ^= 2;
          A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__chainFuture_closure(_this, value)));
        } else
          A._Future__chainCoreFuture(value, _this);
        return;
      }
      _this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new A._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 3
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 32
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__chainFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 70
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$isBroadcast() {
      return false;
    },
    transform$1$1(_, streamTransformer, $S) {
      return A._instanceType(this)._bind$1($S)._eval$1("StreamTransformer<Stream.T,1>")._as(streamTransformer).bind$1(this);
    },
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    get$first(_) {
      var future = new A._Future($.Zone__current, A._instanceType(this)._eval$1("_Future<Stream.T>")),
        subscription = this.listen$4$cancelOnError$onDone$onError(null, true, new A.Stream_first_closure(future), future.get$_completeError());
      subscription.onData$1(new A.Stream_first_closure0(this, subscription, future));
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      A._instanceType(this.$this)._eval$1("Stream.T")._as(_);
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A.Stream_first_closure.prototype = {
    call$0() {
      var e, s, t1, exception, stackTrace;
      try {
        t1 = A.IterableElementError_noElement();
        throw A.wrapException(t1);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        stackTrace = s;
        if (stackTrace == null)
          stackTrace = A.AsyncError_defaultStackTrace(t1);
        this.future._completeError$2(t1, stackTrace);
      }
    },
    $signature: 0
  };
  A.Stream_first_closure0.prototype = {
    call$1(value) {
      A._cancelAndValue(this.subscription, this.future, A._instanceType(this.$this)._eval$1("Stream.T")._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.StreamSubscription.prototype = {};
  A.StreamView.prototype = {
    get$isBroadcast() {
      return true;
    },
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._stream.listen$4$cancelOnError$onDone$onError(A._instanceType(this)._eval$1("~(1)?")._as(onData), cancelOnError, type$.nullable_void_Function._as(onDone), onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A.StreamTransformerBase.prototype = {$isStreamTransformer: 1};
  A._StreamController.prototype = {
    get$stream(_) {
      return new A._ControllerStream(this, A._instanceType(this)._eval$1("_ControllerStream<1>"));
    },
    get$_pendingEvents() {
      var t1, _this = this;
      if ((_this._state & 8) === 0)
        return A._instanceType(_this)._eval$1("_PendingEvents<1>?")._as(_this._varData);
      t1 = A._instanceType(_this);
      return t1._eval$1("_PendingEvents<1>?")._as(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).varData);
    },
    _ensurePendingEvents$0() {
      var events, t1, state, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        if (events == null)
          events = _this._varData = new A._StreamImplEvents(A._instanceType(_this)._eval$1("_StreamImplEvents<1>"));
        return A._instanceType(_this)._eval$1("_StreamImplEvents<1>")._as(events);
      }
      t1 = A._instanceType(_this);
      state = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
      events = state.varData;
      if (events == null)
        events = state.varData = new A._StreamImplEvents(t1._eval$1("_StreamImplEvents<1>"));
      return t1._eval$1("_StreamImplEvents<1>")._as(events);
    },
    get$_subscription() {
      var varData = this._varData;
      if ((this._state & 8) !== 0)
        varData = type$._StreamControllerAddStreamState_nullable_Object._as(varData).varData;
      return A._instanceType(this)._eval$1("_ControllerSubscription<1>")._as(varData);
    },
    _badEventState$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add event after closing");
      return new A.StateError("Cannot add event while adding a stream");
    },
    addStream$2$cancelOnError(source, cancelOnError) {
      var t2, t3, t4, t5, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("Stream<1>")._as(source);
      t2 = _this._state;
      if (t2 >= 4)
        throw A.wrapException(_this._badEventState$0());
      if ((t2 & 2) !== 0) {
        t1 = new A._Future($.Zone__current, type$._Future_dynamic);
        t1._asyncComplete$1(null);
        return t1;
      }
      t2 = _this._varData;
      t3 = new A._Future($.Zone__current, type$._Future_dynamic);
      t4 = t1._eval$1("~(1)")._as(_this.get$_async$_add());
      t4 = source.listen$4$cancelOnError$onDone$onError(t4, false, _this.get$_async$_close(), _this.get$_addError());
      t5 = _this._state;
      if ((t5 & 1) !== 0 ? (_this.get$_subscription()._state & 4) !== 0 : (t5 & 2) === 0)
        t4.pause$0(0);
      _this._varData = new A._StreamControllerAddStreamState(t2, t3, t4, t1._eval$1("_StreamControllerAddStreamState<1>"));
      _this._state |= 8;
      return t3;
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new A._Future($.Zone__current, type$._Future_void);
      return t1;
    },
    add$1(_, value) {
      var _this = this;
      A._instanceType(_this)._precomputed1._as(value);
      if (_this._state >= 4)
        throw A.wrapException(_this._badEventState$0());
      _this._async$_add$1(value);
    },
    addError$2(error, stackTrace) {
      var t1 = type$.Object;
      t1._as(error);
      type$.nullable_StackTrace._as(stackTrace);
      A.checkNotNullable(error, "error", t1);
      if (this._state >= 4)
        throw A.wrapException(this._badEventState$0());
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      this._addError$2(error, stackTrace);
    },
    addError$1(error) {
      return this.addError$2(error, null);
    },
    close$0(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      _this._closeUnchecked$0();
      return _this._ensureDoneFuture$0();
    },
    _closeUnchecked$0() {
      var t1 = this._state |= 4;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, B.C__DelayedDone);
    },
    _async$_add$1(value) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(value);
      t2 = _this._state;
      if ((t2 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t2 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedData(value, t1._eval$1("_DelayedData<1>")));
    },
    _addError$2(error, stackTrace) {
      var t1;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new A._DelayedError(error, stackTrace));
    },
    _async$_close$0() {
      var _this = this,
        addState = A._instanceType(_this)._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
      _this._varData = addState.varData;
      _this._state &= 4294967287;
      addState.addStreamFuture._asyncComplete$1(null);
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var subscription, pendingEvents, t2, addState, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      if ((_this._state & 3) !== 0)
        throw A.wrapException(A.StateError$("Stream has already been listened to."));
      subscription = A._ControllerSubscription$(_this, onData, onError, onDone, cancelOnError, t1._precomputed1);
      pendingEvents = _this.get$_pendingEvents();
      t2 = _this._state |= 1;
      if ((t2 & 8) !== 0) {
        addState = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
        addState.varData = subscription;
        addState.addSubscription.resume$0();
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new A._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1(subscription) {
      var result, onCancel, cancelResult, e, s, exception, result0, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      result = null;
      if ((_this._state & 8) !== 0)
        result = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).cancel$0();
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (type$.Future_void._is(cancelResult))
              result = cancelResult;
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            result0 = new A._Future($.Zone__current, type$._Future_void);
            result0._asyncCompleteError$2(e, s);
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new A._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    _recordPause$1(subscription) {
      var _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      if ((_this._state & 8) !== 0)
        t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).addSubscription.pause$0(0);
      A._runGuarded(_this.onPause);
    },
    _recordResume$1(subscription) {
      var _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      if ((_this._state & 8) !== 0)
        t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).addSubscription.resume$0();
      A._runGuarded(_this.onResume);
    },
    set$onListen(onListen) {
      this.onListen = type$.nullable_void_Function._as(onListen);
    },
    set$onCancel(onCancel) {
      this.onCancel = type$.nullable_void_Function._as(onCancel);
    },
    $isEventSink: 1,
    $isStreamSink: 1,
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  A._StreamController__subscribe_closure.prototype = {
    call$0() {
      A._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  A._StreamController__recordCancel_complete.prototype = {
    call$0() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && (doneFuture._state & 30) === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  A._SyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      this.$ti._precomputed1._as(data);
      this.get$_subscription()._async$_add$1(data);
    },
    _sendError$2(error, stackTrace) {
      this.get$_subscription()._addError$2(error, stackTrace);
    },
    _sendDone$0() {
      this.get$_subscription()._async$_close$0();
    }
  };
  A._AsyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      var t1 = this.$ti;
      t1._precomputed1._as(data);
      this.get$_subscription()._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    },
    _sendError$2(error, stackTrace) {
      this.get$_subscription()._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _sendDone$0() {
      this.get$_subscription()._addPending$1(B.C__DelayedDone);
    }
  };
  A._AsyncStreamController.prototype = {};
  A._SyncStreamController.prototype = {};
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._ControllerStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
      this._controller._recordPause$1(this);
    },
    _onResume$0() {
      this._controller._recordResume$1(this);
    }
  };
  A._StreamSinkWrapper.prototype = {$isEventSink: 1, $isStreamSink: 1};
  A._AddStreamState.prototype = {
    cancel$0() {
      var cancel = this.addSubscription.cancel$0();
      return cancel.whenComplete$1(new A._AddStreamState_cancel_closure(this));
    }
  };
  A._AddStreamState_cancel_closure.prototype = {
    call$0() {
      this.$this.addStreamFuture._asyncComplete$1(null);
    },
    $signature: 1
  };
  A._StreamControllerAddStreamState.prototype = {};
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      var _this = this;
      A._instanceType(_this)._eval$1("_PendingEvents<_BufferingStreamSubscription.T>?")._as(pendingEvents);
      if (pendingEvents == null)
        return;
      _this.set$_pending(pendingEvents);
      if (pendingEvents.lastPendingEvent != null) {
        _this._state = (_this._state | 64) >>> 0;
        pendingEvents.schedule$1(_this);
      }
    },
    onData$1(handleData) {
      var t1 = A._instanceType(this);
      this.set$_onData(A._BufferingStreamSubscription__registerDataHandler(this._zone, t1._eval$1("~(_BufferingStreamSubscription.T)?")._as(handleData), t1._eval$1("_BufferingStreamSubscription.T")));
    },
    pause$0(_) {
      var t2, t3, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t2 = (t1 + 128 | 4) >>> 0;
      _this._state = t2;
      if (t1 < 128) {
        t3 = _this._pending;
        if (t3 != null)
          if (t3._state === 1)
            t3._state = 3;
      }
      if ((t1 & 4) === 0 && (t2 & 32) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    resume$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 = _this._state = t1 - 128;
        if (t1 < 128)
          if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent != null)
            _this._pending.schedule$1(_this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 32) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
      }
    },
    cancel$0() {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this.set$_pending(null);
      _this._cancelFuture = _this._onCancel$0();
    },
    _async$_add$1(data) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("_BufferingStreamSubscription.T")._as(data);
      t2 = _this._state;
      if ((t2 & 8) !== 0)
        return;
      if (t2 < 32)
        _this._sendData$1(data);
      else
        _this._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<_BufferingStreamSubscription.T>")));
    },
    _addError$2(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _async$_close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      _this._state = t1;
      if (t1 < 32)
        _this._sendDone$0();
      else
        _this._addPending$1(B.C__DelayedDone);
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var _this = this,
        t1 = A._instanceType(_this),
        pending = t1._eval$1("_StreamImplEvents<_BufferingStreamSubscription.T>?")._as(_this._pending);
      if (pending == null)
        pending = new A._StreamImplEvents(t1._eval$1("_StreamImplEvents<_BufferingStreamSubscription.T>"));
      _this.set$_pending(pending);
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        _this._state = t1;
        if (t1 < 128)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var t2, _this = this,
        t1 = A._instanceType(_this)._eval$1("_BufferingStreamSubscription.T");
      t1._as(data);
      t2 = _this._state;
      _this._state = (t2 | 32) >>> 0;
      _this._zone.runUnaryGuarded$1$2(_this._onData, data, t1);
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t2 & 4) !== 0);
    },
    _sendError$2(error, stackTrace) {
      var cancelFuture, _this = this,
        t1 = _this._state,
        t2 = new A._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        _this._state = (t1 | 16) >>> 0;
        _this._cancel$0();
        cancelFuture = _this._cancelFuture;
        if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
          cancelFuture.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        _this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0() {
      var cancelFuture, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1(callback) {
      var t1, _this = this;
      type$.void_Function._as(callback);
      t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = (t1 & 4294967231) >>> 0;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = (_this._state & 4294967263) >>> 0;
        _this._state = t1;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    set$_onData(_onData) {
      this._onData = A._instanceType(this)._eval$1("~(_BufferingStreamSubscription.T)")._as(_onData);
    },
    set$_pending(_pending) {
      this._pending = A._instanceType(this)._eval$1("_PendingEvents<_BufferingStreamSubscription.T>?")._as(_pending);
    },
    $isStreamSubscription: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  A._BufferingStreamSubscription__sendError_sendError.prototype = {
    call$0() {
      var onError, t3, t4,
        t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      onError = t1._onError;
      t2 = this.error;
      t3 = type$.Object;
      t4 = t1._zone;
      if (type$.void_Function_Object_StackTrace._is(onError))
        t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, type$.StackTrace);
      else
        t4.runUnaryGuarded$1$2(type$.void_Function_Object._as(onError), t2, t3);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 0
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = A._instanceType(this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return this._controller._subscribe$4(t1._eval$1("~(1)?")._as(onData), onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    listen$2$onDone(onData, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
    }
  };
  A._DelayedEvent.prototype = {
    set$next(next) {
      this.next = type$.nullable__DelayedEvent_dynamic._as(next);
    },
    get$next() {
      return this.next;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch)._sendData$1(this.value);
    }
  };
  A._DelayedError.prototype = {
    perform$1(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next() {
      return null;
    },
    set$next(_) {
      throw A.wrapException(A.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var t1, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var t2, $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t2 = t1.$ti._eval$1("_EventDispatch<1>")._as(this.dispatch);
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next();
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(t2);
    },
    $signature: 0
  };
  A._StreamImplEvents.prototype = {
    add$1(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next($event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  A._DoneStreamSubscription.prototype = {
    _schedule$0() {
      var _this = this;
      if ((_this._state & 2) !== 0)
        return;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(_this.get$_sendDone()));
      _this._state = (_this._state | 2) >>> 0;
    },
    onData$1(handleData) {
      this.$ti._eval$1("~(1)?")._as(handleData);
    },
    pause$0(_) {
      this._state += 4;
    },
    resume$0() {
      var t1 = this._state;
      if (t1 >= 4) {
        t1 = this._state = t1 - 4;
        if (t1 < 4 && (t1 & 1) === 0)
          this._schedule$0();
      }
    },
    cancel$0() {
      return $.$get$Future__nullFuture();
    },
    _sendDone$0() {
      var doneHandler, _this = this,
        t1 = _this._state = (_this._state & 4294967293) >>> 0;
      if (t1 >= 4)
        return;
      _this._state = (t1 | 1) >>> 0;
      doneHandler = _this._onDone;
      if (doneHandler != null)
        _this._zone.runGuarded$1(doneHandler);
    },
    $isStreamSubscription: 1
  };
  A._StreamIterator.prototype = {};
  A._cancelAndValue_closure.prototype = {
    call$0() {
      return this.future._complete$1(this.value);
    },
    $signature: 0
  };
  A._ForwardingStream.prototype = {
    get$isBroadcast() {
      return this._async$_source.get$isBroadcast();
    },
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      A._instanceType(this)._eval$1("~(_ForwardingStream.T)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return this._createSubscription$4(onData, onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _createSubscription$4(onData, onError, onDone, cancelOnError) {
      var t1 = A._instanceType(this);
      return A._ForwardingStreamSubscription$(this, t1._eval$1("~(_ForwardingStream.T)?")._as(onData), onError, type$.nullable_void_Function._as(onDone), cancelOnError, t1._eval$1("_ForwardingStream.S"), t1._eval$1("_ForwardingStream.T"));
    }
  };
  A._ForwardingStreamSubscription.prototype = {
    _ForwardingStreamSubscription$5(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
      var _this = this;
      _this.set$_subscription(_this._stream._async$_source.listen$3$onDone$onError(_this.get$_handleData(), _this.get$_handleDone(), _this.get$_handleError()));
    },
    _async$_add$1(data) {
      A._instanceType(this)._eval$1("_ForwardingStreamSubscription.T")._as(data);
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_add(data);
    },
    _addError$2(error, stackTrace) {
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    _onPause$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.pause$0(0);
    },
    _onResume$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.resume$0();
    },
    _onCancel$0() {
      var subscription = this._subscription;
      if (subscription != null) {
        this.set$_subscription(null);
        return subscription.cancel$0();
      }
      return null;
    },
    _handleData$1(data) {
      this._stream._handleData$2(A._instanceType(this)._eval$1("_ForwardingStreamSubscription.S")._as(data), this);
    },
    _handleError$2(error, stackTrace) {
      var t1;
      type$.StackTrace._as(stackTrace);
      t1 = error == null ? type$.Object._as(error) : error;
      A._instanceType(this._stream)._eval$1("_EventSink<_ForwardingStream.T>")._as(this)._addError$2(t1, stackTrace);
    },
    _handleDone$0() {
      A._instanceType(this._stream)._eval$1("_EventSink<_ForwardingStream.T>")._as(this)._async$_close$0();
    },
    set$_subscription(_subscription) {
      this._subscription = A._instanceType(this)._eval$1("StreamSubscription<_ForwardingStreamSubscription.S>?")._as(_subscription);
    }
  };
  A._WhereStream.prototype = {
    _handleData$2(inputEvent, sink) {
      var satisfies, e, s, exception,
        t1 = this.$ti;
      t1._precomputed1._as(inputEvent);
      t1._eval$1("_EventSink<1>")._as(sink);
      satisfies = null;
      try {
        satisfies = this._test.call$1(inputEvent);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._addErrorWithReplacement(sink, e, s);
        return;
      }
      if (A.boolConversionCheck(satisfies))
        sink._async$_add$1(inputEvent);
    }
  };
  A._MapStream.prototype = {
    _handleData$2(inputEvent, sink) {
      var outputEvent, e, s, exception,
        t1 = this.$ti;
      t1._precomputed1._as(inputEvent);
      t1._eval$1("_EventSink<2>")._as(sink);
      outputEvent = null;
      try {
        outputEvent = this._transform.call$1(inputEvent);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._addErrorWithReplacement(sink, e, s);
        return;
      }
      sink._async$_add$1(outputEvent);
    }
  };
  A._TakeStream.prototype = {
    _createSubscription$4(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      t2 = _this._async$_count;
      if (t2 === 0) {
        _this._async$_source.listen$1(null).cancel$0();
        return A._DoneStreamSubscription$(onDone, t1._precomputed1);
      }
      t1 = t1._precomputed1;
      t3 = $.Zone__current;
      t4 = cancelOnError ? 1 : 0;
      t4 = new A._StateStreamSubscription(t2, _this, A._BufferingStreamSubscription__registerDataHandler(t3, onData, t1), A._BufferingStreamSubscription__registerErrorHandler(t3, onError), A._BufferingStreamSubscription__registerDoneHandler(t3, onDone), t3, t4, type$.$env_1_1_int._bind$1(t1)._eval$1("_StateStreamSubscription<1,2>"));
      t4._ForwardingStreamSubscription$5(_this, onData, onError, onDone, cancelOnError, t1, t1);
      return t4;
    },
    _handleData$2(inputEvent, sink) {
      var count,
        t1 = this.$ti;
      t1._precomputed1._as(inputEvent);
      sink = t1._eval$1("_StateStreamSubscription<int,1>")._as(t1._eval$1("_EventSink<1>")._as(sink));
      count = sink._subState;
      if (count > 0) {
        sink._async$_add$1(inputEvent);
        --count;
        sink.set$_subState(count);
        if (count === 0)
          sink._async$_close$0();
      }
    }
  };
  A._StateStreamSubscription.prototype = {
    set$_subState(_subState) {
      this._subState = this.$ti._precomputed1._as(_subState);
    }
  };
  A._TakeWhileStream.prototype = {
    _handleData$2(inputEvent, sink) {
      var satisfies, e, s, exception,
        t1 = this.$ti;
      t1._precomputed1._as(inputEvent);
      t1._eval$1("_EventSink<1>")._as(sink);
      satisfies = null;
      try {
        satisfies = this._test.call$1(inputEvent);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._addErrorWithReplacement(sink, e, s);
        sink._async$_close$0();
        return;
      }
      if (A.boolConversionCheck(satisfies))
        sink._async$_add$1(inputEvent);
      else
        sink._async$_close$0();
    }
  };
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      var t1 = this.error,
        t2 = this.stackTrace;
      A.checkNotNullable(t1, "error", type$.Object);
      A.checkNotNullable(t2, "stackTrace", type$.StackTrace);
      A.Error__throw(t1, t2);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runBinaryGuarded$2$3(f, arg1, arg2, T1, T2) {
      var e, s, exception;
      T1._eval$1("@<0>")._bind$1(T2)._eval$1("~(1,2)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        A._rootRunBinary(null, null, this, f, arg1, arg2, type$.void, T1, T2);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    $index(_, key) {
      return null;
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerBinaryCallback$3$1(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$keys(_) {
      return new A._HashMapKeyIterable(this, A._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(_, key) {
      var strings, t1;
      if (key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else {
        t1 = this._containsKey$1(key);
        return t1;
      }
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    forEach$1(_, action) {
      var keys, $length, t2, i, key, t3, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1,2)")._as(action);
      keys = _this._computeKeys$0();
      for ($length = keys.length, t2 = t1._precomputed1, t1 = t1._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2._as(key);
        t3 = _this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
        if (keys !== _this._collection$_keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (table[key] == null) {
        ++this._collection$_length;
        this._collection$_keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    }
  };
  A._IdentityHashMap.prototype = {
    _computeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._CustomHashMap.prototype = {
    $index(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$_HashMap$_get(key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$_HashMap$_set(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return false;
      return this.super$_HashMap$_containsKey(key);
    },
    _computeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; i += 2)
        if (A.boolConversionCheck(t2.call$2(bucket[i], t1._as(key))))
          return i;
      return -1;
    }
  };
  A._CustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 19
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    },
    contains$1(_, element) {
      return this._collection$_map.containsKey$1(0, element);
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(keys[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._LinkedCustomHashMap.prototype = {
    $index(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$JsLinkedHashMap$internalGet(key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$JsLinkedHashMap$internalSet(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return false;
      return this.super$JsLinkedHashMap$internalContainsKey(key);
    },
    remove$1(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$JsLinkedHashMap$internalRemove(key);
    },
    internalComputeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; ++i)
        if (A.boolConversionCheck(t2.call$2(t1._as(bucket[i].hashMapCellKey), t1._as(key))))
          return i;
      return -1;
    }
  };
  A._LinkedCustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 19
  };
  A._HashSet.prototype = {
    get$iterator(_) {
      return new A._HashSetIterator(this, this._computeElements$0(), A._instanceType(this)._eval$1("_HashSetIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._HashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._elements = null;
      return true;
    },
    _computeElements$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._elements;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._elements = result;
    },
    _collection$_addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._elements = null;
      return true;
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    },
    $isHashSet: 1
  };
  A._HashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        elements = _this._elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._elements)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(elements[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._LinkedHashSet.prototype = {
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, t1;
      if (object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return type$.nullable__LinkedHashSetCell._as(strings[object]) != null;
      } else {
        t1 = this._contains$1(object);
        return t1;
      }
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    get$first(_) {
      var first = this._collection$_first;
      if (first == null)
        throw A.wrapException(A.StateError$("No elements"));
      return A._instanceType(this)._precomputed1._as(first._collection$_element);
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(element);
    },
    _add$1(element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    _collection$_addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (type$.nullable__LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = type$.nullable__LinkedHashSetCell._as(table[element]);
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(A._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    }
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(_this.$ti._eval$1("1?")._as(cell._collection$_element));
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.IterableBase.prototype = {};
  A.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  A.ListMixin.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    every$1(receiver, test) {
      var $length, i;
      A.instanceType(receiver)._eval$1("bool(ListMixin.E)")._as(test);
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (!A.boolConversionCheck(test.call$1(this.$index(receiver, i))))
          return false;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    map$1$1(receiver, f, $T) {
      var t1 = A.instanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListMixin.E)")._as(f), t1._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = J.JSArray_JSArray$growable(0, A.instanceType(receiver)._eval$1("ListMixin.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, true, A.instanceType(receiver)._eval$1("ListMixin.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        B.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
      return result;
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1(receiver, element) {
      var t1;
      A.instanceType(receiver)._eval$1("ListMixin.E")._as(element);
      t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A.instanceType(receiver)._eval$1("@<ListMixin.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.instanceType(receiver)._eval$1("ListMixin.E?")._as(fill);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    indexOf$1(receiver, element) {
      var i;
      for (i = 0; i < this.get$length(receiver); ++i)
        if (J.$eq$(this.$index(receiver, i), element))
          return i;
      return -1;
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  A.MapBase.prototype = {};
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 20
  };
  A.MapMixin.prototype = {
    forEach$1(receiver, action) {
      var t2, key, t3,
        t1 = A.instanceType(receiver);
      t1._eval$1("~(MapMixin.K,MapMixin.V)")._as(action);
      for (t2 = J.get$iterator$ax(this.get$keys(receiver)), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(receiver, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    update$3$ifAbsent(receiver, key, update, ifAbsent) {
      var t2, _this = this,
        t1 = A.instanceType(receiver);
      t1._eval$1("MapMixin.K")._as(key);
      t1._eval$1("MapMixin.V(MapMixin.V)")._as(update);
      t1._eval$1("MapMixin.V()?")._as(ifAbsent);
      if (_this.containsKey$1(receiver, key)) {
        t2 = _this.$index(receiver, key);
        t1 = update.call$1(t2 == null ? t1._eval$1("MapMixin.V")._as(t2) : t2);
        _this.$indexSet(receiver, key, t1);
        return t1;
      }
      t1 = ifAbsent.call$0();
      _this.$indexSet(receiver, key, t1);
      return t1;
    },
    get$entries(receiver) {
      return J.map$1$1$ax(this.get$keys(receiver), new A.MapMixin_entries_closure(receiver), A.instanceType(receiver)._eval$1("MapEntry<MapMixin.K,MapMixin.V>"));
    },
    containsKey$1(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    toString$0(receiver) {
      return A.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  A.MapMixin_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = A.instanceType(t1);
      t2._eval$1("MapMixin.K")._as(key);
      t1 = J.$index$asx(t1, key);
      if (t1 == null)
        t1 = t2._eval$1("MapMixin.V")._as(t1);
      return new A.MapEntry(key, t1, t2._eval$1("@<MapMixin.K>")._bind$1(t2._eval$1("MapMixin.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return A.instanceType(this.$this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>(MapMixin.K)");
    }
  };
  A.SetMixin.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(A._instanceType(this)._eval$1("Iterable<SetMixin.E>")._as(elements)); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    toString$0(_) {
      return A.IterableBase_iterableToFullString(this, "{", "}");
    },
    join$1(_, separator) {
      var t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        t1 = "" + A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + A.S(iterator.get$current());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._eval$1("SetMixin.E"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    elementAt$1(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      A.checkNotNullable(index, _s5_, type$.int);
      A.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw A.wrapException(A.IndexError$(index, this, _s5_, null, elementIndex));
    }
  };
  A.SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  A._SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  A._ListBase_Object_ListMixin.prototype = {};
  A._SetBase_Object_SetMixin.prototype = {};
  A.__SetBase_Object_SetMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$keys(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1(_, key) {
      if (this._processed == null)
        return this._data.containsKey$1(0, key);
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = type$.nullable_List_dynamic._as(this._data);
      if (keys == null)
        keys = this._data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        B.JSArray_methods.add$1(keys, "");
      else
        B.JSArray_methods.set$length(keys, 0);
      _this._original = _this._processed = null;
      return _this._data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      var t1 = this._convert$_parent;
      return t1.get$length(t1);
    },
    elementAt$1(_, index) {
      var t1 = this._convert$_parent;
      if (t1._processed == null)
        t1 = t1.get$keys(t1).elementAt$1(0, index);
      else {
        t1 = t1._convert$_computeKeys$0();
        if (!(index >= 0 && index < t1.length))
          return A.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    get$iterator(_) {
      var t1 = this._convert$_parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(t1);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    },
    contains$1(_, key) {
      return this._convert$_parent.containsKey$1(0, key);
    }
  };
  A.Base64Codec.prototype = {
    normalize$3(source, start, end) {
      var inverseAlphabet, t1, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t2, t3, endLength, $length,
        _s31_ = "Invalid base64 encoding length ";
      end = A.RangeError_checkValidRange(start, end, source.length);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t1 = inverseAlphabet.length, i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = B.JSString_methods._codeUnitAt$1(source, i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = A.hexDigitValue(B.JSString_methods._codeUnitAt$1(source, i0));
            digit2 = A.hexDigitValue(B.JSString_methods._codeUnitAt$1(source, i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          if (!(char0 >= 0 && char0 < t1))
            return A.ioore(inverseAlphabet, char0);
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = B.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t2 = buffer == null ? null : buffer._contents.length;
                if (t2 == null)
                  t2 = 0;
                firstPadding = t2 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t2 = buffer;
            } else
              t2 = buffer;
            t3 = t2._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t2._contents = t3 + A.Primitives_stringFromCharCode(char);
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = buffer._contents += B.JSString_methods.substring$2(source, sliceStart, end);
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {};
  A.Codec.prototype = {};
  A.Converter.prototype = {};
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$2$reviver(_, source, reviver) {
      var t1;
      type$.nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object._as(reviver);
      t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    decode$1($receiver, source) {
      return this.decode$2$reviver($receiver, source, null);
    },
    encode$2$toEncodable(value, toEncodable) {
      var t1;
      type$.nullable_nullable_Object_Function_dynamic._as(toEncodable);
      t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    encode$1(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {};
  A.JsonDecoder.prototype = {};
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = B.JSString_methods._codeUnitAt$1(s, i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (B.JSString_methods._codeUnitAt$1(s, t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (B.JSString_methods.codeUnitAt$1(s, t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      B.JSArray_methods.add$1(t1, object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = A.List_List$filled(t2, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        t1 = i + 1;
        if (!(t1 < t2))
          return A.ioore(keyValueList, t1);
        _this.writeObject$1(keyValueList[t1]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 20
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink;
      return t1 instanceof A.StringBuffer ? t1.toString$0(0) : null;
    },
    writeNumber$1(number) {
      this._sink.write$1(B.JSNumber_methods.toString$0(number));
    },
    writeString$1(string) {
      this._sink.write$1(string);
    },
    writeStringSlice$3(string, start, end) {
      this._sink.write$1(B.JSString_methods.substring$2(string, start, end));
    },
    writeCharCode$1(charCode) {
      this._sink.writeCharCode$1(charCode);
    }
  };
  A.Utf8Codec.prototype = {
    get$encoder() {
      return B.C_Utf8Encoder;
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var t1, encoder,
        end = A.RangeError_checkValidRange(0, null, string.get$length(string)),
        $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array($length * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end) {
        string.codeUnitAt$1(0, end - 1);
        encoder._writeReplacementCharacter$0();
      }
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1,
        t4 = t1.length;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, t4, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t4 = t1.length;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (B.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = B.JSString_methods._codeUnitAt$1(str, stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else {
          t3 = codeUnit & 64512;
          if (t3 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, B.JSString_methods._codeUnitAt$1(str, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t3 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t3 = _this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            _this._bufferIndex = t4;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          } else {
            t3 = _this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            t4 = _this._bufferIndex = t3 + 1;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit >>> 12 | 224;
            t3 = _this._bufferIndex = t4 + 1;
            if (!(t4 < t2))
              return A.ioore(t1, t4);
            t1[t4] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t3 + 1;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A.DateTime.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._core$_value === other._core$_value && this.isUtc === other.isUtc;
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._core$_value, type$.DateTime._as(other)._core$_value);
    },
    get$hashCode(_) {
      var t1 = this._core$_value;
      return (t1 ^ B.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    },
    toIso8601String$0() {
      var _this = this,
        y = A.Primitives_getYear(_this) >= -9999 && A.Primitives_getYear(_this) <= 9999 ? A.DateTime__fourDigits(A.Primitives_getYear(_this)) : A.DateTime__sixDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return t1 + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms;
    },
    $isComparable: 1
  };
  A.DateTime_parse_parseIntOrZero.prototype = {
    call$1(matched) {
      if (matched == null)
        return 0;
      return A.int_parse(matched, null);
    },
    $signature: 21
  };
  A.DateTime_parse_parseMilliAndMicroseconds.prototype = {
    call$1(matched) {
      var t1, result, i;
      if (matched == null)
        return 0;
      for (t1 = matched.length, result = 0, i = 0; i < 6; ++i) {
        result *= 10;
        if (i < t1)
          result += B.JSString_methods._codeUnitAt$1(matched, i) ^ 48;
      }
      return result;
    },
    $signature: 21
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, type$.Duration._as(other)._duration);
    },
    toString$0(_) {
      var minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        microseconds0 = microseconds % 3600000000,
        minutes = B.JSInt_methods._tdivFast$1(microseconds0, 60000000);
      microseconds0 %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds0, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return "" + (microseconds / 3600000000 | 0) + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds0 % 1000000), 6, "0");
    },
    $isComparable: 1
  };
  A._Enum.prototype = {};
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.NullThrownError.prototype = {
    toString$0(_) {
      return "Throw of null.";
    }
  };
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.invalidValue);
    }
  };
  A.RangeError.prototype = {
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + A.S(this.message);
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = B.JSString_methods._codeUnitAt$1(source, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = B.JSString_methods.codeUnitAt$1(source, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1
  };
  A.Iterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this, A._instanceType(this)._eval$1("Iterable.E"), $R);
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    every$1(_, test) {
      var t1;
      A._instanceType(this)._eval$1("bool(Iterable.E)")._as(test);
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (!A.boolConversionCheck(test.call$1(t1.get$current())))
          return false;
      return true;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    get$single(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      result = it.get$current();
      if (it.moveNext$0())
        throw A.wrapException(A.IterableElementError_tooMany());
      return result;
    },
    elementAt$1(_, index) {
      var t1, elementIndex, element;
      A.RangeError_checkNotNegative(index, "index");
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw A.wrapException(A.IndexError$(index, this, "index", null, elementIndex));
    },
    toString$0(_) {
      return A.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  A.Iterator.prototype = {};
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeType(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return "";
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    write$1(obj) {
      this._contents += A.S(obj);
    },
    writeCharCode$1(charCode) {
      this._contents += A.Primitives_stringFromCharCode(charCode);
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 55
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 58
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 64
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        A._lateInitializeOnceCheck(value, "_text");
        value = _this.___Uri__text = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        A._lateInitializeOnceCheck(_this.___Uri_hashCode, "hashCode");
        _this.___Uri_hashCode = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port(_) {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(_this) === other.get$host(other))
                if (_this.get$port(_this) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t1 = _this._query;
                    t2 = t1 == null;
                    if (!t2 === other.get$hasQuery()) {
                      if (t2)
                        t1 = "";
                      if (t1 === other.get$query()) {
                        t1 = _this._fragment;
                        t2 = t1 == null;
                        if (!t2 === other.get$hasFragment()) {
                          if (t2)
                            t1 = "";
                          t1 = t1 === other.get$fragment();
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path(receiver) {
      return this.path;
    }
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._separatorIndices;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t2 = _this._text;
        t1 = t1[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t2, "?", t1);
        end = t2.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t2, queryIndex + 1, end, B.List_CVk, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t2, t1, end, B.List_qg4, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t2,
        t1 = this._separatorIndices;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = this._text;
      return t1[0] === -1 ? "data:" + t2 : t2;
    }
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = this.tables;
      if (!(state < t1.length))
        return A.ioore(t1, state);
      t1 = t1[state];
      B.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 65
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, i, t2;
      for (t1 = chars.length, i = 0; i < t1; ++i) {
        t2 = B.JSString_methods._codeUnitAt$1(chars, i) ^ 96;
        if (!(t2 < 96))
          return A.ioore(target, t2);
        target[t2] = transition;
      }
    },
    $signature: 22
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var i, n, t1;
      for (i = B.JSString_methods._codeUnitAt$1(range, 0), n = B.JSString_methods._codeUnitAt$1(range, 1); i <= n; ++i) {
        t1 = (i ^ 96) >>> 0;
        if (!(t1 < 96))
          return A.ioore(target, t1);
        target[t1] = transition;
      }
    },
    $signature: 22
  };
  A._SimpleUri.prototype = {
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port(_) {
      var t1, _this = this;
      if (_this._hostStart > 0 && _this._portStart + 1 < _this._pathStart)
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path(_) {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.Expando.prototype = {
    $index(_, object) {
      var t1 = typeof object == "string";
      if (t1)
        A.throwExpression(A.ArgumentError$value(object, string$.Expand, null));
      return this._jsWeakMap.get(object);
    },
    toString$0(_) {
      return "Expando:null";
    }
  };
  A.HtmlElement.prototype = {$isHtmlElement: 1};
  A.AnchorElement.prototype = {
    set$href(receiver, value) {
      receiver.href = value;
    },
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    },
    $isAnchorElement: 1
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.BaseElement.prototype = {$isBaseElement: 1};
  A.Blob.prototype = {$isBlob: 1};
  A.BodyElement.prototype = {$isBodyElement: 1};
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CloseEvent.prototype = {$isCloseEvent: 1};
  A.CssStyleDeclaration.prototype = {
    _browserPropertyName$1(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name == "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1(receiver, propertyName) {
      var prefixed,
        t1 = propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
          return letter.toUpperCase();
        });
      t1.toString;
      t1 = t1 in receiver;
      t1.toString;
      if (t1)
        return propertyName;
      prefixed = $.$get$Device_cssPrefix() + propertyName;
      t1 = prefixed in receiver;
      t1.toString;
      if (t1)
        return prefixed;
      return propertyName;
    },
    _setPropertyHelper$3(receiver, propertyName, value, priority) {
      receiver.setProperty(propertyName, value, priority);
    },
    set$cssText(receiver, value) {
      receiver.cssText = value;
    },
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.CssStyleDeclarationBase.prototype = {};
  A.Document.prototype = {};
  A.DomException.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.DomImplementation.prototype = {
    createHtmlDocument$1(receiver, title) {
      var t1 = receiver.createHTMLDocument(title);
      t1.toString;
      return t1;
    }
  };
  A.DomTokenList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A._ChildrenElementList.prototype = {
    get$isEmpty(_) {
      return this._element.firstElementChild == null;
    },
    get$length(_) {
      return this._html$_childElements.length;
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._html$_childElements;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return type$.Element._as(t1[index]);
    },
    $indexSet(_, index, value) {
      var t1;
      A._asInt(index);
      type$.Element._as(value);
      t1 = this._html$_childElements;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      this._element.replaceChild(value, t1[index]).toString;
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize element lists"));
    },
    add$1(_, value) {
      type$.Element._as(value);
      this._element.appendChild(value).toString;
      return value;
    },
    get$iterator(_) {
      var t1 = this.toList$0(this);
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$first(_) {
      return A._ChildrenElementList__first(this._element);
    }
  };
  A.Element.prototype = {
    get$attributes(receiver) {
      return new A._ElementAttributeMap(receiver);
    },
    get$children(receiver) {
      var t1 = receiver.children;
      t1.toString;
      return new A._ChildrenElementList(receiver, t1);
    },
    get$classes(receiver) {
      return new A._ElementCssClassSet(receiver);
    },
    toString$0(receiver) {
      var t1 = receiver.localName;
      t1.toString;
      return t1;
    },
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var t1, t2, contextElement, fragment;
      if (treeSanitizer == null) {
        if (validator == null) {
          t1 = $.Element__defaultValidator;
          if (t1 == null) {
            t1 = A._setArrayType([], type$.JSArray_NodeValidator);
            t2 = new A.NodeValidatorBuilder(t1);
            B.JSArray_methods.add$1(t1, A._Html5NodeValidator$(null));
            B.JSArray_methods.add$1(t1, A._TemplatingNodeValidator$());
            $.Element__defaultValidator = t2;
            validator = t2;
          } else
            validator = t1;
        }
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          t1 = new A._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          t1.validator = validator;
          treeSanitizer = t1;
        }
      } else if (validator != null)
        throw A.wrapException(A.ArgumentError$("validator can only be passed if treeSanitizer is null", null));
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation;
        t2.toString;
        t2 = B.DomImplementation_methods.createHtmlDocument$1(t2, "");
        $.Element__parseDocument = t2;
        t2 = t2.createRange();
        t2.toString;
        $.Element__parseRange = t2;
        t2 = $.Element__parseDocument.createElement("base");
        type$.BaseElement._as(t2);
        t1 = t1.baseURI;
        t1.toString;
        t2.href = t1;
        $.Element__parseDocument.head.appendChild(t2).toString;
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        B.HtmlDocument_methods.set$body(t1, type$.BodyElement._as(t2));
      }
      t1 = $.Element__parseDocument;
      if (type$.BodyElement._is(receiver)) {
        t1 = t1.body;
        t1.toString;
        contextElement = t1;
      } else {
        t1.toString;
        t2 = receiver.tagName;
        t2.toString;
        contextElement = t1.createElement(t2);
        $.Element__parseDocument.body.appendChild(contextElement).toString;
      }
      t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1) {
        t1 = receiver.tagName;
        t1.toString;
        t1 = !B.JSArray_methods.contains$1(B.List_ego, t1);
      } else
        t1 = false;
      if (t1) {
        $.Element__parseRange.selectNodeContents(contextElement);
        t1 = $.Element__parseRange;
        t1.toString;
        t1 = t1.createContextualFragment(html == null ? "null" : html);
        t1.toString;
        fragment = t1;
      } else {
        J.set$_innerHtml$x(contextElement, html);
        t1 = $.Element__parseDocument.createDocumentFragment();
        t1.toString;
        for (; t2 = contextElement.firstChild, t2 != null;)
          t1.appendChild(t2).toString;
        fragment = t1;
      }
      if (contextElement !== $.Element__parseDocument.body)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment).toString;
      return fragment;
    },
    createFragment$2$treeSanitizer($receiver, html, treeSanitizer) {
      return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    },
    set$innerHtml(receiver, html) {
      this.setInnerHtml$1(receiver, html);
    },
    setInnerHtml$2$validator(receiver, html, validator) {
      this.set$text(receiver, null);
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, null, validator)).toString;
    },
    setInnerHtml$1($receiver, html) {
      return this.setInnerHtml$2$validator($receiver, html, null);
    },
    set$_innerHtml(receiver, value) {
      receiver.innerHTML = value;
    },
    get$tagName(receiver) {
      var t1 = receiver.tagName;
      t1.toString;
      return t1;
    },
    $isElement: 1
  };
  A.Element_Element$html_closure.prototype = {
    call$1(e) {
      return type$.Element._is(type$.Node._as(e));
    },
    $signature: 23
  };
  A.Event.prototype = {
    get$target(receiver) {
      return A._convertNativeToDart_EventTarget(receiver.target);
    },
    $isEvent: 1
  };
  A.EventTarget.prototype = {
    addEventListener$3(receiver, type, listener, useCapture) {
      type$.nullable_dynamic_Function_Event._as(listener);
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, useCapture);
    },
    _addEventListener$3(receiver, type, listener, options) {
      return receiver.addEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), options);
    },
    _removeEventListener$3(receiver, type, listener, options) {
      return receiver.removeEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), options);
    },
    $isEventTarget: 1
  };
  A.File.prototype = {$isFile: 1};
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.History.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1;
      A._asInt(index);
      t1 = index >>> 0 !== index || index >= receiver.length;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$(index, receiver, null, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1,
    $isHtmlCollection: 1
  };
  A.HtmlDocument.prototype = {
    set$body(receiver, value) {
      receiver.body = value;
    }
  };
  A.InputElement.prototype = {
    set$value(receiver, value) {
      receiver.value = value;
    },
    $isInputElement: 1
  };
  A.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  A.Location.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    },
    $isLocation: 1
  };
  A.MessageEvent.prototype = {$isMessageEvent: 1};
  A.MessagePort.prototype = {$isMessagePort: 1};
  A.MouseEvent.prototype = {$isMouseEvent: 1};
  A._ChildNodeListLazy.prototype = {
    get$first(_) {
      var result = this._this.firstChild;
      if (result == null)
        throw A.wrapException(A.StateError$("No elements"));
      return result;
    },
    get$single(_) {
      var t1 = this._this,
        l = t1.childNodes.length;
      if (l === 0)
        throw A.wrapException(A.StateError$("No elements"));
      if (l > 1)
        throw A.wrapException(A.StateError$("More than one element"));
      t1 = t1.firstChild;
      t1.toString;
      return t1;
    },
    add$1(_, value) {
      this._this.appendChild(type$.Node._as(value)).toString;
    },
    addAll$1(_, iterable) {
      var t1, t2, len, i, t3;
      type$.Iterable_Node._as(iterable);
      if (iterable instanceof A._ChildNodeListLazy) {
        t1 = iterable._this;
        t2 = this._this;
        if (t1 !== t2)
          for (len = t1.childNodes.length, i = 0; i < len; ++i) {
            t3 = t1.firstChild;
            t3.toString;
            t2.appendChild(t3).toString;
          }
        return;
      }
      for (t1 = iterable.get$iterator(iterable), t2 = this._this; t1.moveNext$0();)
        t2.appendChild(t1.get$current()).toString;
    },
    $indexSet(_, index, value) {
      var t1, t2;
      A._asInt(index);
      type$.Node._as(value);
      t1 = this._this;
      t2 = t1.childNodes;
      if (!(index >= 0 && index < t2.length))
        return A.ioore(t2, index);
      t1.replaceChild(value, t2[index]).toString;
    },
    get$iterator(_) {
      var t1 = this._this.childNodes;
      return new A.FixedSizeListIterator(t1, t1.length, A.instanceType(t1)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    get$length(_) {
      return this._this.childNodes.length;
    },
    set$length(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._this.childNodes;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    }
  };
  A.Node.prototype = {
    remove$0(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver).toString;
    },
    replaceWith$1(receiver, otherNode) {
      var $parent, t1, exception;
      try {
        t1 = receiver.parentNode;
        t1.toString;
        $parent = t1;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
      }
      return receiver;
    },
    _clearChildren$0(receiver) {
      var t1;
      for (; t1 = receiver.firstChild, t1 != null;)
        receiver.removeChild(t1).toString;
    },
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    set$text(receiver, value) {
      receiver.textContent = value;
    },
    insertBefore$2(receiver, node, child) {
      var t1 = receiver.insertBefore(type$.Node._as(node), child);
      t1.toString;
      return t1;
    },
    _replaceChild$2(receiver, node, child) {
      var t1 = receiver.replaceChild(node, child);
      t1.toString;
      return t1;
    },
    $isNode: 1
  };
  A.NodeList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1;
      A._asInt(index);
      t1 = index >>> 0 !== index || index >= receiver.length;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$(index, receiver, null, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.PopStateEvent.prototype = {$isPopStateEvent: 1};
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Storage.prototype = {
    containsKey$1(receiver, key) {
      return receiver.getItem(key) != null;
    },
    $index(receiver, key) {
      return receiver.getItem(A._asString(key));
    },
    $indexSet(receiver, key, value) {
      receiver.setItem(key, A._asString(value));
    },
    forEach$1(receiver, f) {
      var i, key, t1;
      type$.void_Function_String_String._as(f);
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        t1 = receiver.getItem(key);
        t1.toString;
        f.call$2(key, t1);
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.Storage_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      return receiver.key(0) == null;
    },
    $isMap: 1
  };
  A.Storage_keys_closure.prototype = {
    call$2(k, v) {
      return B.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 77
  };
  A.TableElement.prototype = {
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var table,
        t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      table = A.Element_Element$html("<table>" + A.S(html) + "</table>", treeSanitizer, validator);
      t1 = document.createDocumentFragment();
      t1.toString;
      new A._ChildNodeListLazy(t1).addAll$1(0, new A._ChildNodeListLazy(table));
      return t1;
    }
  };
  A.TableRowElement.prototype = {
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var t2,
        t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      t2 = t1.createDocumentFragment();
      t2.toString;
      t1 = t1.createElement("table");
      t1.toString;
      t1 = new A._ChildNodeListLazy(B.TableElement_methods.createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator));
      t1 = new A._ChildNodeListLazy(t1.get$single(t1));
      new A._ChildNodeListLazy(t2).addAll$1(0, new A._ChildNodeListLazy(t1.get$single(t1)));
      return t2;
    }
  };
  A.TableSectionElement.prototype = {
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var t2,
        t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      t2 = t1.createDocumentFragment();
      t2.toString;
      t1 = t1.createElement("table");
      t1.toString;
      t1 = new A._ChildNodeListLazy(B.TableElement_methods.createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator));
      new A._ChildNodeListLazy(t2).addAll$1(0, new A._ChildNodeListLazy(t1.get$single(t1)));
      return t2;
    }
  };
  A.TemplateElement.prototype = {
    setInnerHtml$2$validator(receiver, html, validator) {
      var t1, fragment;
      this.set$text(receiver, null);
      t1 = receiver.content;
      t1.toString;
      J._clearChildren$0$x(t1);
      fragment = this.createFragment$3$treeSanitizer$validator(receiver, html, null, validator);
      receiver.content.appendChild(fragment).toString;
    },
    setInnerHtml$1($receiver, html) {
      return this.setInnerHtml$2$validator($receiver, html, null);
    },
    $isTemplateElement: 1
  };
  A.TextAreaElement.prototype = {
    set$value(receiver, value) {
      receiver.value = value;
    },
    $isTextAreaElement: 1
  };
  A.UIEvent.prototype = {};
  A.WebSocket.prototype = {
    set$binaryType(receiver, value) {
      receiver.binaryType = value;
    },
    close$2(receiver, code, reason) {
      return receiver.close(code, reason);
    },
    close$1($receiver, code) {
      return $receiver.close(code);
    },
    send$1(receiver, data) {
      return receiver.send(data);
    },
    $isWebSocket: 1
  };
  A.Window0.prototype = {$isWindowBase: 1};
  A._Attr.prototype = {$is_Attr: 1};
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1;
      A._asInt(index);
      t1 = index >>> 0 !== index || index >= receiver.length;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$(index, receiver, null, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._AttributeMap.prototype = {
    forEach$1(_, f) {
      var t1, t2, t3, _i, key, value;
      type$.void_Function_String_String._as(f);
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._element, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        value = t3.getAttribute(key);
        f.call$2(key, value == null ? A._asString(value) : value);
      }
    },
    get$keys(_) {
      var keys, len, t2, i, attr, t3,
        t1 = this._element.attributes;
      t1.toString;
      keys = A._setArrayType([], type$.JSArray_String);
      for (len = t1.length, t2 = type$._Attr, i = 0; i < len; ++i) {
        if (!(i < t1.length))
          return A.ioore(t1, i);
        attr = t2._as(t1[i]);
        if (attr.namespaceURI == null) {
          t3 = attr.name;
          t3.toString;
          B.JSArray_methods.add$1(keys, t3);
        }
      }
      return keys;
    },
    get$isEmpty(_) {
      return this.get$keys(this).length === 0;
    }
  };
  A._ElementAttributeMap.prototype = {
    containsKey$1(_, key) {
      var t1 = this._element.hasAttribute(key);
      t1.toString;
      return t1;
    },
    $index(_, key) {
      return this._element.getAttribute(A._asString(key));
    },
    $indexSet(_, key, value) {
      this._element.setAttribute(key, A._asString(value));
    },
    get$length(_) {
      return this.get$keys(this).length;
    }
  };
  A._ElementCssClassSet.prototype = {
    readClasses$0() {
      var t1, t2, _i, trimmed,
        s = A.LinkedHashSet_LinkedHashSet(type$.String);
      for (t1 = this._element.className.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1(s) {
      this._element.className = type$.Set_String._as(s).join$1(0, " ");
    },
    get$length(_) {
      var t1 = this._element.classList.length;
      t1.toString;
      return t1;
    },
    get$isEmpty(_) {
      var t1 = this._element.classList.length;
      t1.toString;
      return t1 === 0;
    },
    get$isNotEmpty(_) {
      var t1 = this._element.classList.length;
      t1.toString;
      return t1 !== 0;
    },
    add$1(_, value) {
      var list, t1;
      A._asString(value);
      list = this._element.classList;
      t1 = list.contains(value);
      t1.toString;
      list.add(value);
      return !t1;
    },
    remove$1(_, value) {
      var list, t1;
      if (typeof value == "string") {
        list = this._element.classList;
        t1 = list.contains(value);
        t1.toString;
        list.remove(value);
      } else
        t1 = false;
      return t1;
    }
  };
  A.EventStreamProvider.prototype = {};
  A._EventStream.prototype = {
    get$isBroadcast() {
      return true;
    },
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = A._instanceType(this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return A._EventStreamSubscription$(this._html$_target, this._eventType, onData, false, t1._precomputed1);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._ElementEventStreamImpl.prototype = {};
  A._EventStreamSubscription.prototype = {
    cancel$0() {
      var _this = this;
      if (_this._html$_target == null)
        return $.$get$nullFuture();
      _this._unlisten$0();
      _this._html$_target = null;
      _this.set$_html$_onData(null);
      return $.$get$nullFuture();
    },
    onData$1(handleData) {
      var t1, _this = this;
      _this.$ti._eval$1("~(1)?")._as(handleData);
      if (_this._html$_target == null)
        throw A.wrapException(A.StateError$("Subscription has been canceled."));
      _this._unlisten$0();
      t1 = A._wrapZone(new A._EventStreamSubscription_onData_closure(handleData), type$.Event);
      _this.set$_html$_onData(t1);
      _this._tryResume$0();
    },
    pause$0(_) {
      if (this._html$_target == null)
        return;
      ++this._pauseCount;
      this._unlisten$0();
    },
    resume$0() {
      var _this = this;
      if (_this._html$_target == null || _this._pauseCount <= 0)
        return;
      --_this._pauseCount;
      _this._tryResume$0();
    },
    _tryResume$0() {
      var t2, _this = this,
        t1 = _this._html$_onData;
      if (t1 != null && _this._pauseCount <= 0) {
        t2 = _this._html$_target;
        t2.toString;
        J.addEventListener$3$x(t2, _this._eventType, t1, _this._useCapture);
      }
    },
    _unlisten$0() {
      var t2, _this = this,
        t1 = _this._html$_onData;
      if (t1 != null) {
        t2 = _this._html$_target;
        t2.toString;
        J._removeEventListener$3$x(t2, _this._eventType, type$.nullable_dynamic_Function_Event._as(t1), _this._useCapture);
      }
    },
    set$_html$_onData(_onData) {
      this._html$_onData = type$.nullable_dynamic_Function_Event._as(_onData);
    }
  };
  A._EventStreamSubscription_closure.prototype = {
    call$1(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 11
  };
  A._EventStreamSubscription_onData_closure.prototype = {
    call$1(e) {
      return this.handleData.call$1(type$.Event._as(e));
    },
    $signature: 11
  };
  A._Html5NodeValidator.prototype = {
    _Html5NodeValidator$1$uriPolicy(uriPolicy) {
      var _i;
      if ($._Html5NodeValidator__attributeValidators.__js_helper$_length === 0) {
        for (_i = 0; _i < 262; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, B.List_2Zi[_i], A.html__Html5NodeValidator__standardAttributeValidator$closure());
        for (_i = 0; _i < 12; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, B.List_yrN[_i], A.html__Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    allowsElement$1(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, A.Element__safeTagName(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, A.Element__safeTagName(element) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return A._asBool(validator.call$4(element, attributeName, value, this));
    },
    $isNodeValidator: 1
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("ImmutableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to immutable List."));
    }
  };
  A.NodeValidatorBuilder.prototype = {
    allowsElement$1(element) {
      return B.JSArray_methods.any$1(this._validators, new A.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      return B.JSArray_methods.any$1(this._validators, new A.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  A.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1(v) {
      return type$.NodeValidator._as(v).allowsElement$1(this.element);
    },
    $signature: 24
  };
  A.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1(v) {
      return type$.NodeValidator._as(v).allowsAttribute$3(this.element, this.attributeName, this.value);
    },
    $signature: 24
  };
  A._SimpleNodeValidator.prototype = {
    _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
      var legalAttributes, extraUriAttributes, t1;
      this.allowedElements.addAll$1(0, allowedElements);
      legalAttributes = allowedAttributes.where$1(0, new A._SimpleNodeValidator_closure());
      extraUriAttributes = allowedAttributes.where$1(0, new A._SimpleNodeValidator_closure0());
      this.allowedAttributes.addAll$1(0, legalAttributes);
      t1 = this.allowedUriAttributes;
      t1.addAll$1(0, B.List_empty);
      t1.addAll$1(0, extraUriAttributes);
    },
    allowsElement$1(element) {
      return this.allowedElements.contains$1(0, A.Element__safeTagName(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      var t3, _this = this,
        tagName = A.Element__safeTagName(element),
        t1 = _this.allowedUriAttributes,
        t2 = tagName + "::" + attributeName;
      if (t1.contains$1(0, t2))
        return _this.uriPolicy.allowsUri$1(value);
      else {
        t3 = "*::" + attributeName;
        if (t1.contains$1(0, t3))
          return _this.uriPolicy.allowsUri$1(value);
        else {
          t1 = _this.allowedAttributes;
          if (t1.contains$1(0, t2))
            return true;
          else if (t1.contains$1(0, t3))
            return true;
          else if (t1.contains$1(0, tagName + "::*"))
            return true;
          else if (t1.contains$1(0, "*::*"))
            return true;
        }
      }
      return false;
    },
    $isNodeValidator: 1
  };
  A._SimpleNodeValidator_closure.prototype = {
    call$1(x) {
      return !B.JSArray_methods.contains$1(B.List_yrN, A._asString(x));
    },
    $signature: 17
  };
  A._SimpleNodeValidator_closure0.prototype = {
    call$1(x) {
      return B.JSArray_methods.contains$1(B.List_yrN, A._asString(x));
    },
    $signature: 17
  };
  A._TemplatingNodeValidator.prototype = {
    allowsAttribute$3(element, attributeName, value) {
      if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }
  };
  A._TemplatingNodeValidator_closure.prototype = {
    call$1(attr) {
      return "TEMPLATE::" + A._asString(attr);
    },
    $signature: 33
  };
  A._SvgNodeValidator.prototype = {
    allowsElement$1(element) {
      var t1;
      if (type$.ScriptElement._is(element))
        return false;
      t1 = type$.SvgElement._is(element);
      if (t1 && A.Element__safeTagName(element) === "foreignObject")
        return false;
      if (t1)
        return true;
      return false;
    },
    allowsAttribute$3(element, attributeName, value) {
      if (attributeName === "is" || B.JSString_methods.startsWith$1(attributeName, "on"))
        return false;
      return this.allowsElement$1(element);
    },
    $isNodeValidator: 1
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this.set$_html$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_html$_current(null);
      _this._position = t1;
      return false;
    },
    get$current() {
      var t1 = this._html$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_html$_current(_current) {
      this._html$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._DOMWindowCrossFrame.prototype = {$isEventTarget: 1, $isWindowBase: 1};
  A._SameOriginUriPolicy.prototype = {$isUriPolicy: 1};
  A._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1(node) {
      var previousTreeModifications,
        walk = new A._ValidatingTreeSanitizer_sanitizeTree_walk(this);
      do {
        previousTreeModifications = this.numTreeModifications;
        walk.call$2(node, null);
      } while (previousTreeModifications !== this.numTreeModifications);
    },
    _removeNode$2(node, $parent) {
      ++this.numTreeModifications;
      if ($parent == null || $parent !== node.parentNode)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node).toString;
    },
    _sanitizeUntrustedElement$2(element, $parent) {
      var corruptedTest1, elementText, elementTagName, t1, corrupted0, exception, t2,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._element.getAttribute("is");
        type$.Element._as(element);
        t1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap))
            return true;
          if (element.id == "lastChild" || element.name == "lastChild" || element.id == "previousSibling" || element.name == "previousSibling" || element.id == "children" || element.name == "children")
            return true;
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
            return true;
          if (element.children)
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
              return true;
          var length = 0;
          if (element.children)
            length = element.children.length;
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == "attributes" || child.name == "attributes" || child.id == "lastChild" || child.name == "lastChild" || child.id == "previousSibling" || child.name == "previousSibling" || child.id == "children" || child.name == "children")
              return true;
          }
          return false;
        }(element);
        t1.toString;
        corruptedTest1 = t1;
        if (A.boolConversionCheck(corruptedTest1))
          corrupted0 = true;
        else {
          t1 = !(element.attributes instanceof NamedNodeMap);
          t1.toString;
          corrupted0 = t1;
        }
        corrupted = corrupted0;
      } catch (exception) {
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
      }
      try {
        elementTagName = A.Element__safeTagName(element);
        this._sanitizeElement$7(type$.Element._as(element), $parent, corrupted, elementText, elementTagName, type$.Map_dynamic_dynamic._as(attrs), A._asStringQ(isAttr));
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window.toString;
          t1 = A.S(elementText);
          t2 = typeof console != "undefined";
          t2.toString;
          if (t2)
            window.console.warn("Removing corrupted element " + t1);
        }
      }
    },
    _sanitizeElement$7(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, t2, keys, i, $name, t3, t4, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window.toString;
        t1 = typeof console != "undefined";
        t1.toString;
        if (t1)
          window.console.warn("Removing element due to corrupted attributes on <" + text + ">");
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window.toString;
        t1 = A.S($parent);
        t2 = typeof console != "undefined";
        t2.toString;
        if (t2)
          window.console.warn("Removing disallowed element <" + tag + "> from " + t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window.toString;
          t1 = typeof console != "undefined";
          t1.toString;
          if (t1)
            window.console.warn("Removing disallowed type extension <" + tag + ' is="' + isAttr + '">');
          return;
        }
      t1 = attrs.get$keys(attrs);
      keys = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
      for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._element, t2 = "Removing disallowed attribute <" + tag + " "; i >= 0; --i) {
        if (!(i < keys.length))
          return A.ioore(keys, i);
        $name = keys[i];
        t3 = _this.validator;
        t4 = J.toLowerCase$0$s($name);
        A._asString($name);
        if (!t3.allowsAttribute$3(element, t4, A._asString(t1.getAttribute($name)))) {
          window.toString;
          t3 = t1.getAttribute($name);
          t4 = typeof console != "undefined";
          t4.toString;
          if (t4)
            window.console.warn(t2 + $name + '="' + A.S(t3) + '">');
          t1.removeAttribute($name);
        }
      }
      if (type$.TemplateElement._is(element)) {
        t1 = element.content;
        t1.toString;
        _this.sanitizeTree$1(t1);
      }
    },
    $isNodeTreeSanitizer: 1
  };
  A._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2(node, $parent) {
      var child, nextChild, t3, t4, exception,
        t1 = this.$this,
        t2 = node.nodeType;
      t2.toString;
      switch (t2) {
        case 1:
          t1._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          t1._removeNode$2(node, $parent);
      }
      child = node.lastChild;
      for (t2 = type$.Node; child != null;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
          if (nextChild != null) {
            t3 = nextChild.nextSibling;
            t4 = child;
            t4 = t3 == null ? t4 != null : t3 !== t4;
            t3 = t4;
          } else
            t3 = false;
          if (t3) {
            t3 = A.StateError$("Corrupt HTML");
            throw A.wrapException(t3);
          }
        } catch (exception) {
          t3 = t2._as(child);
          ++t1.numTreeModifications;
          t4 = t3.parentNode;
          if (node !== t4) {
            if (t4 != null)
              t4.removeChild(t3).toString;
          } else
            node.removeChild(t3).toString;
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = nextChild;
      }
    },
    $signature: 34
  };
  A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._Storage_JavaScriptObject_MapMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._StructuredClone.prototype = {
    findSlot$1(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      B.JSArray_methods.add$1(t1, value);
      B.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1(e) {
      var slot, t2, copy, t3, _this = this, t1 = {};
      if (e == null)
        return e;
      if (A._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof A.DateTime)
        return new Date(e._core$_value);
      if (type$.RegExp._is(e))
        throw A.wrapException(A.UnimplementedError$("structured clone of RegExp"));
      if (type$.File._is(e))
        return e;
      if (type$.Blob._is(e))
        return e;
      if (type$.NativeByteBuffer._is(e) || type$.NativeTypedData._is(e) || type$.MessagePort._is(e))
        return e;
      if (type$.Map_dynamic_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        if (!(slot < t2.length))
          return A.ioore(t2, slot);
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        B.JSArray_methods.$indexSet(t2, slot, copy);
        J.forEach$1$ax(e, new A._StructuredClone_walk_closure(t1, _this));
        return t1.copy;
      }
      if (type$.List_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        return _this.copyList$2(e, slot);
      }
      if (type$.JSObject._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        if (!(slot < t2.length))
          return A.ioore(t2, slot);
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        t3 = {};
        t3.toString;
        t1.copy = t3;
        B.JSArray_methods.$indexSet(t2, slot, t3);
        _this.forEachObjectKey$2(e, new A._StructuredClone_walk_closure0(t1, _this));
        return t1.copy;
      }
      throw A.wrapException(A.UnimplementedError$("structured clone of other type"));
    },
    copyList$2(e, slot) {
      var i,
        t1 = J.getInterceptor$asx(e),
        $length = t1.get$length(e),
        t2 = new Array($length);
      t2.toString;
      B.JSArray_methods.$indexSet(this.copies, slot, t2);
      for (i = 0; i < $length; ++i)
        B.JSArray_methods.$indexSet(t2, i, this.walk$1(t1.$index(e, i)));
      return t2;
    }
  };
  A._StructuredClone_walk_closure.prototype = {
    call$2(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 35
  };
  A._StructuredClone_walk_closure0.prototype = {
    call$2(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 36
  };
  A._AcceptStructuredClone.prototype = {
    findSlot$1(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      B.JSArray_methods.add$1(t1, value);
      B.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1(e) {
      var t1, t2, proto, slot, copy, t3, $length, t4, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (A._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      t1 = e instanceof Date;
      t1.toString;
      if (t1) {
        t1 = e.getTime();
        t1.toString;
        if (Math.abs(t1) <= 864e13)
          t2 = false;
        else
          t2 = true;
        if (t2)
          A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + t1, null));
        A.checkNotNullable(true, "isUtc", type$.bool);
        return new A.DateTime(t1, true);
      }
      t1 = e instanceof RegExp;
      t1.toString;
      if (t1)
        throw A.wrapException(A.UnimplementedError$("structured clone of RegExp"));
      t1 = typeof Promise != "undefined" && e instanceof Promise;
      t1.toString;
      if (t1)
        return A.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      t1 = proto === Object.prototype;
      t1.toString;
      if (!t1) {
        t1 = proto === null;
        t1.toString;
      } else
        t1 = true;
      if (t1) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        copy = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        _box_0.copy = copy;
        B.JSArray_methods.$indexSet(t1, slot, copy);
        _this.forEachJsField$2(e, new A._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      t1 = e instanceof Array;
      t1.toString;
      if (t1) {
        t1 = e;
        t1.toString;
        slot = _this.findSlot$1(t1);
        t2 = _this.copies;
        if (!(slot < t2.length))
          return A.ioore(t2, slot);
        copy = t2[slot];
        if (copy != null)
          return copy;
        t3 = J.getInterceptor$asx(t1);
        $length = t3.get$length(t1);
        if (_this.mustCopy) {
          t4 = new Array($length);
          t4.toString;
          copy = t4;
        } else
          copy = t1;
        B.JSArray_methods.$indexSet(t2, slot, copy);
        for (t2 = J.getInterceptor$ax(copy), i = 0; i < $length; ++i)
          t2.$indexSet(copy, i, _this.walk$1(t3.$index(t1, i)));
        return copy;
      }
      return e;
    },
    convertNativeToDart_AcceptStructuredClone$2$mustCopy(object, mustCopy) {
      this.mustCopy = true;
      return this.walk$1(object);
    }
  };
  A._AcceptStructuredClone_walk_closure.prototype = {
    call$2(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 37
  };
  A._StructuredCloneDart2Js.prototype = {
    forEachObjectKey$2(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  A._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  A.CssClassSetImpl.prototype = {
    _validateToken$1(value) {
      var t1 = $.$get$CssClassSetImpl__validTokenRE()._nativeRegExp;
      if (t1.test(value))
        return value;
      throw A.wrapException(A.ArgumentError$value(value, "value", "Not a valid class token"));
    },
    toString$0(_) {
      return this.readClasses$0().join$1(0, " ");
    },
    get$iterator(_) {
      var t1 = this.readClasses$0();
      return A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1);
    },
    get$isEmpty(_) {
      return this.readClasses$0()._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.readClasses$0()._collection$_length !== 0;
    },
    get$length(_) {
      return this.readClasses$0()._collection$_length;
    },
    add$1(_, value) {
      var t1;
      A._asString(value);
      this._validateToken$1(value);
      t1 = this.modify$1(new A.CssClassSetImpl_add_closure(value));
      return A._asBool(t1 == null ? false : t1);
    },
    remove$1(_, value) {
      var s, result;
      if (typeof value != "string")
        return false;
      this._validateToken$1(value);
      s = this.readClasses$0();
      result = s.remove$1(0, value);
      this.writeClasses$1(s);
      return result;
    },
    get$first(_) {
      var t1 = this.readClasses$0();
      return t1.get$first(t1);
    },
    skip$1(_, n) {
      var t1 = this.readClasses$0();
      return A.SkipIterable_SkipIterable(t1, n, A._instanceType(t1)._eval$1("SetMixin.E"));
    },
    elementAt$1(_, index) {
      return this.readClasses$0().elementAt$1(0, index);
    },
    modify$1(f) {
      var s, ret;
      type$.dynamic_Function_Set_String._as(f);
      s = this.readClasses$0();
      ret = f.call$1(s);
      this.writeClasses$1(s);
      return ret;
    }
  };
  A.CssClassSetImpl_add_closure.prototype = {
    call$1(s) {
      return type$.Set_String._as(s).add$1(0, this.value);
    },
    $signature: 38
  };
  A.FilteredElementList.prototype = {
    get$_html_common$_iterable() {
      var t1 = this._childNodes,
        t2 = A._instanceType(t1);
      return new A.MappedIterable(new A.WhereIterable(t1, t2._eval$1("bool(ListMixin.E)")._as(new A.FilteredElementList__iterable_closure()), t2._eval$1("WhereIterable<ListMixin.E>")), t2._eval$1("Element(ListMixin.E)")._as(new A.FilteredElementList__iterable_closure0()), t2._eval$1("MappedIterable<ListMixin.E,Element>"));
    },
    $indexSet(_, index, value) {
      var t1;
      A._asInt(index);
      type$.Element._as(value);
      t1 = this.get$_html_common$_iterable();
      J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index)), value);
    },
    set$length(_, newLength) {
      var len = J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw A.wrapException(A.ArgumentError$("Invalid list length", null));
      this.removeRange$2(0, newLength, len);
    },
    add$1(_, value) {
      this._childNodes._this.appendChild(type$.Element._as(value)).toString;
    },
    removeRange$2(_, start, end) {
      var t1 = this.get$_html_common$_iterable();
      t1 = A.SkipIterable_SkipIterable(t1, start, t1.$ti._eval$1("Iterable.E"));
      B.JSArray_methods.forEach$1(A.List_List$from(A.TakeIterable_TakeIterable(t1, end - start, A._instanceType(t1)._eval$1("Iterable.E")), true, type$.dynamic), new A.FilteredElementList_removeRange_closure());
    },
    get$length(_) {
      return J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this.get$_html_common$_iterable();
      return t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
    },
    get$iterator(_) {
      var t1 = A.List_List$from(this.get$_html_common$_iterable(), false, type$.Element);
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    }
  };
  A.FilteredElementList__iterable_closure.prototype = {
    call$1(n) {
      return type$.Element._is(type$.Node._as(n));
    },
    $signature: 23
  };
  A.FilteredElementList__iterable_closure0.prototype = {
    call$1(n) {
      return type$.Element._as(type$.Node._as(n));
    },
    $signature: 39
  };
  A.FilteredElementList_removeRange_closure.prototype = {
    call$1(el) {
      return J.remove$0$ax(el);
    },
    $signature: 2
  };
  A.VersionChangeEvent.prototype = {
    get$target(receiver) {
      var t1 = receiver.target;
      t1.toString;
      return t1;
    }
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(0, this.T._eval$1("0/?")._as(r));
    },
    $signature: 2
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 2
  };
  A._JSRandom.prototype = {
    nextInt$1(max) {
      if (max <= 0 || max > 4294967296)
        throw A.wrapException(A.RangeError$(string$.max_mu + max));
      return Math.random() * max >>> 0;
    }
  };
  A._Random.prototype = {
    _Random$1(seed) {
      var low, high, tmplow, low0, t1, t2, t3, _this = this, _4294967296 = 4294967296,
        empty_seed = seed < 0 ? -1 : 0;
      do {
        low = seed >>> 0;
        seed = B.JSInt_methods._tdivFast$1(seed - low, _4294967296);
        high = seed >>> 0;
        seed = B.JSInt_methods._tdivFast$1(seed - high, _4294967296);
        tmplow = (~low >>> 0) + (low << 21 >>> 0);
        low0 = tmplow >>> 0;
        high = (~high >>> 0) + ((high << 21 | low >>> 11) >>> 0) + B.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296) >>> 0;
        tmplow = ((low0 ^ (low0 >>> 24 | high << 8)) >>> 0) * 265;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 24) >>> 0) * 265 + B.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        tmplow = ((low ^ (low >>> 14 | high << 18)) >>> 0) * 21;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 14) >>> 0) * 21 + B.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        low = (low ^ (low >>> 28 | high << 4)) >>> 0;
        high = (high ^ high >>> 28) >>> 0;
        tmplow = (low << 31 >>> 0) + low;
        low0 = tmplow >>> 0;
        t1 = B.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296);
        tmplow = _this._lo * 1037;
        t2 = _this._lo = tmplow >>> 0;
        t3 = _this._hi * 1037 + B.JSInt_methods._tdivFast$1(tmplow - t2, _4294967296) >>> 0;
        _this._hi = t3;
        t2 = (t2 ^ low0) >>> 0;
        _this._lo = t2;
        t1 = (t3 ^ high + ((high << 31 | low >>> 1) >>> 0) + t1 >>> 0) >>> 0;
        _this._hi = t1;
      } while (seed !== empty_seed);
      if (t1 === 0 && t2 === 0)
        _this._lo = 23063;
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
    },
    _nextState$0() {
      var _this = this,
        t1 = _this._lo,
        tmpHi = 4294901760 * t1,
        tmpHiLo = tmpHi >>> 0,
        tmpLo = 55905 * t1,
        tmpLoLo = tmpLo >>> 0,
        newLo = tmpLoLo + tmpHiLo + _this._hi;
      t1 = newLo >>> 0;
      _this._lo = t1;
      _this._hi = B.JSInt_methods._tdivFast$1(tmpLo - tmpLoLo + (tmpHi - tmpHiLo) + (newLo - t1), 4294967296) >>> 0;
    },
    nextInt$1(max) {
      var t1, rnd32, result, _this = this;
      if (max <= 0 || max > 4294967296)
        throw A.wrapException(A.RangeError$(string$.max_mu + max));
      t1 = max - 1;
      if ((max & t1) === 0) {
        _this._nextState$0();
        return (_this._lo & t1) >>> 0;
      }
      do {
        _this._nextState$0();
        rnd32 = _this._lo;
        result = rnd32 % max;
      } while (rnd32 - result + max >= 4294967296);
      return result;
    }
  };
  A.ScriptElement0.prototype = {$isScriptElement0: 1};
  A.AttributeClassSet.prototype = {
    readClasses$0() {
      var t1, t2, _i, trimmed,
        classname = this._svg$_element.getAttribute("class"),
        s = A.LinkedHashSet_LinkedHashSet(type$.String);
      if (classname == null)
        return s;
      for (t1 = classname.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1(s) {
      this._svg$_element.setAttribute("class", s.join$1(0, " "));
    }
  };
  A.SvgElement.prototype = {
    get$classes(receiver) {
      return new A.AttributeClassSet(receiver);
    },
    get$children(receiver) {
      return new A.FilteredElementList(receiver, new A._ChildNodeListLazy(receiver));
    },
    set$innerHtml(receiver, value) {
      this.setInnerHtml$1(receiver, value);
    },
    createFragment$3$treeSanitizer$validator(receiver, svg, treeSanitizer, validator) {
      var t1, t2, fragment, root;
      if (validator == null) {
        t1 = A._setArrayType([], type$.JSArray_NodeValidator);
        validator = new A.NodeValidatorBuilder(t1);
        B.JSArray_methods.add$1(t1, A._Html5NodeValidator$(null));
        B.JSArray_methods.add$1(t1, A._TemplatingNodeValidator$());
        B.JSArray_methods.add$1(t1, new A._SvgNodeValidator());
      }
      treeSanitizer = new A._ValidatingTreeSanitizer(validator);
      t1 = document;
      t2 = t1.body;
      t2.toString;
      fragment = B.BodyElement_methods.createFragment$2$treeSanitizer(t2, '<svg version="1.1">' + A.S(svg) + "</svg>", treeSanitizer);
      t1 = t1.createDocumentFragment();
      t1.toString;
      t2 = new A._ChildNodeListLazy(fragment);
      root = t2.get$single(t2);
      for (; t2 = root.firstChild, t2 != null;)
        t1.appendChild(t2).toString;
      return t1;
    },
    $isSvgElement: 1
  };
  A.ArtemisClient.prototype = {
    execute$2$1(query, $T, $U) {
      A.checkTypeBound($U, type$.JsonSerializable, "U", "execute");
      return this.execute$body$ArtemisClient($T._eval$1("@<0>")._bind$1($U)._eval$1("GraphQLQuery<1,2>")._as(query), $T, $U, $T._eval$1("GraphQLResponse<0>"));
    },
    execute$body$ArtemisClient(query, $T, $U, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, response;
      var $async$execute$2$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._client$_link.request$1(0, new A.Request(new A.Operation(query.get$document(query), query.get$operationName()), query.getVariablesMap$0(), B.Context_Map_empty));
              $async$goto = 3;
              return A._asyncAwait(t1.get$first(t1), $async$execute$2$1);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.data;
              if (t1 == null)
                t1 = null;
              else
                t1 = query.parse$1(t1);
              $async$returnValue = new A.GraphQLResponse(t1, response.errors, $T._eval$1("GraphQLResponse<0>"));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$execute$2$1, $async$completer);
    },
    stream$2$1(_, query, $T, $U) {
      var t1, t2, t3;
      A.checkTypeBound($U, type$.JsonSerializable, "U", "stream");
      $T._eval$1("@<0>")._bind$1($U)._eval$1("GraphQLQuery<1,2>")._as(query);
      t1 = this._client$_link.request$1(0, new A.Request(new A.Operation(query.document, query.EventsRoomSubscription_operationName), query.getVariablesMap$0(), B.Context_Map_empty));
      t2 = $T._eval$1("GraphQLResponse<0>");
      t3 = t1.$ti;
      return new A._MapStream(t3._bind$1(t2)._eval$1("1(Stream.T)")._as(new A.ArtemisClient_stream_closure(query, $T)), t1, t3._eval$1("@<Stream.T>")._bind$1(t2)._eval$1("_MapStream<1,2>"));
    },
    dispose$0() {
    }
  };
  A.ArtemisClient_stream_closure.prototype = {
    call$1(response) {
      var t1, t2, t3, _null = null;
      type$.Response._as(response);
      t1 = response.data;
      if (t1 == null)
        t1 = _null;
      else {
        t2 = type$.Map_String_dynamic;
        t3 = new A.EventsRoom$Subscription(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
        t3.__EventsRoom$Subscription_eventsRoom = A.EventsRoom$Subscription$RoomEvent_EventsRoom$Subscription$RoomEvent$fromJson(t2._as(J.$index$asx(t2._as(t1), "eventsRoom")));
        t1 = t3;
      }
      return new A.GraphQLResponse(t1, response.errors, this.T._eval$1("GraphQLResponse<0>"));
    },
    $signature() {
      return this.T._eval$1("GraphQLResponse<0>(Response)");
    }
  };
  A.GraphQLQuery.prototype = {
    getVariablesMap$0() {
      var t1 = this.get$variables();
      t1 = t1 == null ? null : t1.toJson$0();
      return t1 == null ? A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic) : t1;
    },
    get$variables() {
      return null;
    }
  };
  A.GraphQLResponse.prototype = {};
  A.DelegatingStreamSink.prototype = {
    close$0(_) {
      return this._stream_sink$_sink.close$0(0);
    },
    $isEventSink: 1,
    $isStreamSink: 1
  };
  A.SingleSubscriptionTransformer.prototype = {
    bind$1(stream) {
      var subscription, controller,
        t1 = this.$ti;
      t1._eval$1("Stream<1>")._as(stream);
      subscription = A._Cell$named("subscription");
      controller = A.StreamController_StreamController(new A.SingleSubscriptionTransformer_bind_closure(subscription), null, null, null, true, t1._rest[1]);
      subscription.__late_helper$_value = stream.listen$3$onDone$onError(new A.SingleSubscriptionTransformer_bind_closure0(this, controller), controller.get$close(controller), controller.get$addError());
      return new A._ControllerStream(controller, A._instanceType(controller)._eval$1("_ControllerStream<1>"));
    }
  };
  A.SingleSubscriptionTransformer_bind_closure.prototype = {
    call$0() {
      return this.subscription._readLocal$0().cancel$0();
    },
    $signature: 12
  };
  A.SingleSubscriptionTransformer_bind_closure0.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this.$ti;
      t1._precomputed1._as(value);
      try {
        this.controller.add$1(0, t1._rest[1]._as(value));
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.TypeError._is(t1)) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          this.controller.addError$2(error, stackTrace);
        } else
          throw exception;
      }
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A.DefaultEquality.prototype = {$isEquality: 1};
  A.IterableEquality.prototype = {
    equals$2(elements1, elements2) {
      var it1, it2, hasNext,
        t1 = this.$ti._eval$1("Iterable<1>?");
      t1._as(elements1);
      t1._as(elements2);
      if (elements1 === elements2)
        return true;
      it1 = J.get$iterator$ax(elements1);
      it2 = J.get$iterator$ax(elements2);
      for (t1 = this._elementEquality; true;) {
        hasNext = it1.moveNext$0();
        if (hasNext !== it2.moveNext$0())
          return false;
        if (!hasNext)
          return true;
        if (!t1.equals$2(it1.get$current(), it2.get$current()))
          return false;
      }
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      this.$ti._eval$1("Iterable<1>?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();) {
        hash = hash + t2.hash$1(0, t1.get$current()) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.ListEquality.prototype = {
    equals$2(list1, list2) {
      var $length, t2, t3, i,
        t1 = this.$ti._eval$1("List<1>?");
      t1._as(list1);
      t1._as(list2);
      if (list1 === list2)
        return true;
      t1 = J.getInterceptor$asx(list1);
      $length = t1.get$length(list1);
      t2 = J.getInterceptor$asx(list2);
      if ($length !== t2.get$length(list2))
        return false;
      for (t3 = this._elementEquality, i = 0; i < $length; ++i)
        if (!t3.equals$2(t1.$index(list1, i), t2.$index(list2, i)))
          return false;
      return true;
    },
    hash$1(_, list) {
      var t1, t2, hash, i;
      this.$ti._eval$1("List<1>?")._as(list);
      for (t1 = J.getInterceptor$asx(list), t2 = this._elementEquality, hash = 0, i = 0; i < t1.get$length(list); ++i) {
        hash = hash + t2.hash$1(0, t1.$index(list, i)) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A._UnorderedEquality.prototype = {
    equals$2(elements1, elements2) {
      var counts, $length, e, count,
        t1 = A._instanceType(this),
        t2 = t1._eval$1("_UnorderedEquality.T?");
      t2._as(elements1);
      t2._as(elements2);
      if (elements1 === elements2)
        return true;
      t2 = this._elementEquality;
      counts = A.HashMap_HashMap(t1._eval$1("bool(_UnorderedEquality.E,_UnorderedEquality.E)")._as(t2.get$equals()), t1._eval$1("int(_UnorderedEquality.E)")._as(t2.get$hash(t2)), t2.get$isValidKey(), t1._eval$1("_UnorderedEquality.E"), type$.int);
      for (t1 = J.get$iterator$ax(elements1), $length = 0; t1.moveNext$0();) {
        e = t1.get$current();
        count = counts.$index(0, e);
        counts.$indexSet(0, e, (count == null ? 0 : count) + 1);
        ++$length;
      }
      for (t1 = J.get$iterator$ax(elements2); t1.moveNext$0();) {
        e = t1.get$current();
        count = counts.$index(0, e);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        counts.$indexSet(0, e, count - 1);
        --$length;
      }
      return $length === 0;
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      A._instanceType(this)._eval$1("_UnorderedEquality.T?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();)
        hash = hash + t2.hash$1(0, t1.get$current()) & 2147483647;
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.SetEquality.prototype = {};
  A._MapEntry.prototype = {
    get$hashCode(_) {
      var t1 = this.equality;
      return 3 * t1._keyEquality.hash$1(0, this.key) + 7 * t1._valueEquality.hash$1(0, this.value) & 2147483647;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._MapEntry) {
        t1 = this.equality;
        t1 = t1._keyEquality.equals$2(this.key, other.key) && t1._valueEquality.equals$2(this.value, other.value);
      } else
        t1 = false;
      return t1;
    }
  };
  A.MapEquality.prototype = {
    equals$2(map1, map2) {
      var t2, equalElementCounts, t3, key, entry, count,
        t1 = this.$ti._eval$1("Map<1,2>?");
      t1._as(map1);
      t1._as(map2);
      if (map1 === map2)
        return true;
      t1 = J.getInterceptor$asx(map1);
      t2 = J.getInterceptor$asx(map2);
      if (t1.get$length(map1) !== t2.get$length(map2))
        return false;
      equalElementCounts = A.HashMap_HashMap(null, null, null, type$._MapEntry, type$.int);
      for (t3 = J.get$iterator$ax(t1.get$keys(map1)); t3.moveNext$0();) {
        key = t3.get$current();
        entry = new A._MapEntry(this, key, t1.$index(map1, key));
        count = equalElementCounts.$index(0, entry);
        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
      }
      for (t1 = J.get$iterator$ax(t2.get$keys(map2)); t1.moveNext$0();) {
        key = t1.get$current();
        entry = new A._MapEntry(this, key, t2.$index(map2, key));
        count = equalElementCounts.$index(0, entry);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        equalElementCounts.$indexSet(0, entry, count - 1);
      }
      return true;
    },
    hash$1(_, map) {
      var t2, t3, t4, t5, hash, key, keyHash, t6,
        t1 = this.$ti;
      t1._eval$1("Map<1,2>?")._as(map);
      for (t2 = J.getInterceptor$x(map), t3 = J.get$iterator$ax(t2.get$keys(map)), t4 = this._keyEquality, t5 = this._valueEquality, t1 = t1._rest[1], hash = 0; t3.moveNext$0();) {
        key = t3.get$current();
        keyHash = t4.hash$1(0, key);
        t6 = t2.$index(map, key);
        hash = hash + 3 * keyHash + 7 * t5.hash$1(0, t6 == null ? t1._as(t6) : t6) & 2147483647;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.DeepCollectionEquality.prototype = {
    equals$2(e1, e2) {
      var _this = this,
        t1 = type$.Set_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.SetEquality(_this, type$.SetEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Map_dynamic_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).equals$2(e1, e2);
      t1 = type$.List_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.ListEquality(_this, type$.ListEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Iterable_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && A.boolConversionCheck(new A.IterableEquality(_this, type$.IterableEquality_dynamic).equals$2(e1, e2));
      return J.$eq$(e1, e2);
    },
    hash$1(_, o) {
      var _this = this;
      if (type$.Set_dynamic._is(o))
        return new A.SetEquality(_this, type$.SetEquality_dynamic).hash$1(0, o);
      if (type$.Map_dynamic_dynamic._is(o))
        return new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).hash$1(0, o);
      if (type$.List_dynamic._is(o))
        return new A.ListEquality(_this, type$.ListEquality_dynamic).hash$1(0, o);
      if (type$.Iterable_dynamic._is(o))
        return new A.IterableEquality(_this, type$.IterableEquality_dynamic).hash$1(0, o);
      return J.get$hashCode$(o);
    },
    isValidKey$1(o) {
      !type$.Iterable_dynamic._is(o);
      return true;
    },
    $isEquality: 1
  };
  A.Equatable.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Equatable && A.getRuntimeType(this) === A.getRuntimeType(other) && A.equals(this.get$props(), other.get$props());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(A.getRuntimeType(this)) ^ A.mapPropsToHashCode(this.get$props())) >>> 0;
    },
    toString$0(_) {
      var t1, _this = this;
      switch (null) {
        case true:
          return A.mapPropsToString(A.getRuntimeType(_this), _this.get$props());
        case false:
          return A.getRuntimeType(_this).toString$0(0);
        default:
          A.EquatableConfig_stringify();
          t1 = A.getRuntimeType(_this).toString$0(0);
          return t1;
      }
    }
  };
  A.EquatableMixin.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = type$.EquatableMixin._is(other) && A.getRuntimeType(this) === A.getRuntimeType(other) && A.equals(this.get$props(), other.get$props());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(A.getRuntimeType(this)) ^ A.mapPropsToHashCode(this.get$props())) >>> 0;
    },
    toString$0(_) {
      var t1, _this = this;
      switch (null) {
        case true:
          return A.mapPropsToString(A.getRuntimeType(_this), _this.get$props());
        case false:
          return A.getRuntimeType(_this).toString$0(0);
        default:
          A.EquatableConfig_stringify();
          t1 = A.getRuntimeType(_this).toString$0(0);
          return t1;
      }
    }
  };
  A._combine_closure.prototype = {
    call$2(a, b) {
      return J.get$hashCode$(a) - J.get$hashCode$(b);
    },
    $signature: 25
  };
  A._combine_closure0.prototype = {
    call$1(key) {
      var t1 = this._box_0,
        t2 = t1.hash;
      t1.hash = (t2 ^ A._combine(t2, [key, J.$index$asx(this.object, key)])) >>> 0;
    },
    $signature: 2
  };
  A.mapPropsToString_closure.prototype = {
    call$1(prop) {
      return J.toString$0$(prop);
    },
    $signature: 44
  };
  A.Node0.prototype = {
    $eq(_, o) {
      var _this = this;
      if (o == null)
        return false;
      if (_this === o)
        return true;
      if (J.get$runtimeType$(o) !== A.getRuntimeType(_this))
        return false;
      type$.Node_2._as(o);
      return B.ListEquality_DeepCollectionEquality.equals$2(o.get$_children(o), _this.get$_children(_this));
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, this.get$_children(this));
    }
  };
  A.DocumentNode.prototype = {
    get$_children(_) {
      return A._setArrayType([this.definitions], type$.JSArray_Object);
    }
  };
  A.DefinitionNode.prototype = {};
  A.ExecutableDefinitionNode.prototype = {};
  A.OperationType.prototype = {
    toString$0(_) {
      return "OperationType." + this._name;
    }
  };
  A.OperationDefinitionNode.prototype = {
    accept$1$1(_, v, $R) {
      var t1, t2, t3, _this = this;
      $R._eval$1("Visitor<0>")._as(v);
      t1 = A._setArrayType([A._opType(_this.type)], type$.JSArray_nullable_String);
      type$.Visitor_String._as(v);
      t2 = type$.JSArray_String;
      B.JSArray_methods.addAll$1(t1, A._setArrayType([" ", _this.name.value], t2));
      t3 = _this.variableDefinitions;
      if (t3.length !== 0)
        t1.push(v.visitVariableDefinitionSetNode$1(t3));
      t3 = _this.directives;
      if (t3.length !== 0)
        B.JSArray_methods.addAll$1(t1, A._setArrayType([" ", v.visitDirectiveSetNode$1(t3)], t2));
      t1.push(" ");
      t1.push(v.visitSelectionSetNode$1(_this.selectionSet));
      return B.JSArray_methods.join$0(t1);
    },
    get$_children(_) {
      var _this = this;
      return [_this.name, _this.type, _this.selectionSet, _this.variableDefinitions, _this.directives];
    }
  };
  A.SelectionSetNode.prototype = {
    get$_children(_) {
      return A._setArrayType([this.selections], type$.JSArray_Object);
    }
  };
  A.SelectionNode.prototype = {};
  A.FieldNode.prototype = {
    accept$1$1(_, v, $R) {
      var t1, t2, t3, _this = this;
      $R._eval$1("Visitor<0>")._as(v);
      t1 = type$.JSArray_String;
      t2 = A._setArrayType([], t1);
      type$.Visitor_String._as(v);
      t2.push(_this.name.value);
      t3 = _this.$arguments;
      if (t3.length !== 0)
        t2.push(v.visitArgumentSetNode$1(t3));
      t3 = _this.directives;
      if (t3.length !== 0)
        B.JSArray_methods.addAll$1(t2, A._setArrayType([" ", v.visitDirectiveSetNode$1(t3)], t1));
      t3 = _this.selectionSet;
      if (t3 != null)
        B.JSArray_methods.addAll$1(t2, A._setArrayType([" ", v.visitSelectionSetNode$1(t3)], t1));
      return B.JSArray_methods.join$0(t2);
    },
    get$_children(_) {
      var _this = this;
      return [_this.alias, _this.name, _this.selectionSet, _this.$arguments, _this.directives];
    }
  };
  A.ArgumentNode.prototype = {
    get$_children(_) {
      return A._setArrayType([this.name, this.value], type$.JSArray_Object);
    }
  };
  A.FragmentSpreadNode.prototype = {
    accept$1$1(_, v, $R) {
      var t1, t2, t3;
      $R._eval$1("Visitor<0>")._as(v);
      type$.Visitor_String._as(v);
      t1 = type$.JSArray_String;
      t2 = A._setArrayType(["...", this.name.value], t1);
      t3 = this.directives;
      if (t3.length !== 0)
        B.JSArray_methods.addAll$1(t2, A._setArrayType([" ", v.visitDirectiveSetNode$1(t3)], t1));
      return B.JSArray_methods.join$0(t2);
    },
    get$_children(_) {
      return A._setArrayType([this.name, this.directives], type$.JSArray_Object);
    }
  };
  A.InlineFragmentNode.prototype = {
    accept$1$1(_, v, $R) {
      var t1, t2, t3;
      $R._eval$1("Visitor<0>")._as(v);
      type$.Visitor_String._as(v);
      t1 = type$.JSArray_String;
      t2 = A._setArrayType(["...", " ", "on " + v.visitNamedTypeNode$1(this.typeCondition.on)], t1);
      t3 = this.directives;
      if (t3.length !== 0)
        B.JSArray_methods.addAll$1(t2, A._setArrayType([" ", v.visitDirectiveSetNode$1(t3)], t1));
      t2.push(" ");
      t2.push(v.visitSelectionSetNode$1(this.selectionSet));
      return B.JSArray_methods.join$0(t2);
    },
    get$_children(_) {
      return [this.typeCondition, this.selectionSet, this.directives];
    }
  };
  A.FragmentDefinitionNode.prototype = {
    accept$1$1(_, v, $R) {
      var t1, t2, t3, _this = this;
      $R._eval$1("Visitor<0>")._as(v);
      type$.Visitor_String._as(v);
      t1 = type$.JSArray_String;
      t2 = A._setArrayType(["fragment ", _this.name.value, " ", "on " + v.visitNamedTypeNode$1(_this.typeCondition.on)], t1);
      t3 = _this.directives;
      if (t3.length !== 0)
        B.JSArray_methods.addAll$1(t2, A._setArrayType([" ", v.visitDirectiveSetNode$1(t3)], t1));
      t2.push(" ");
      t2.push(v.visitSelectionSetNode$1(_this.selectionSet));
      return B.JSArray_methods.join$0(t2);
    },
    get$_children(_) {
      var _this = this;
      return [_this.name, _this.typeCondition, _this.selectionSet, _this.directives];
    }
  };
  A.TypeConditionNode.prototype = {
    get$_children(_) {
      return A._setArrayType([this.on], type$.JSArray_Object);
    }
  };
  A.ValueNode.prototype = {};
  A.VariableNode.prototype = {
    get$_children(_) {
      return A._setArrayType([this.name], type$.JSArray_Object);
    }
  };
  A.VariableDefinitionNode.prototype = {
    get$_children(_) {
      var _this = this;
      return [_this.variable, _this.type, _this.defaultValue, _this.directives];
    }
  };
  A.DefaultValueNode.prototype = {
    get$_children(_) {
      return [this.value];
    }
  };
  A.TypeNode.prototype = {};
  A.NamedTypeNode.prototype = {
    get$_children(_) {
      return A._setArrayType([this.isNonNull, this.name], type$.JSArray_Object);
    }
  };
  A.NameNode.prototype = {
    get$_children(_) {
      return A._setArrayType([this.value], type$.JSArray_Object);
    }
  };
  A.Visitor.prototype = {};
  A._PrintVisitor.prototype = {
    visitDocumentNode$1(doc) {
      var t1 = doc.definitions,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A._PrintVisitor_visitDocumentNode_closure(this)), t2._eval$1("MappedListIterable<1,String>")).join$1(0, "\n\n");
    },
    visitDirectiveSetNode$1(directives) {
      var t1;
      type$.Iterable_DirectiveNode._as(directives);
      t1 = A._arrayInstanceType(directives);
      return new A.MappedListIterable(directives, t1._eval$1("String(1)")._as(new A._PrintVisitor_visitDirectiveSetNode_closure(this)), t1._eval$1("MappedListIterable<1,String>")).join$1(0, " ");
    },
    visitVariableDefinitionSetNode$1(defs) {
      var t1;
      type$.Iterable_VariableDefinitionNode._as(defs);
      t1 = A._arrayInstanceType(defs);
      return "(" + new A.MappedListIterable(defs, t1._eval$1("String(1)")._as(new A._PrintVisitor_visitVariableDefinitionSetNode_closure(this)), t1._eval$1("MappedListIterable<1,String>")).join$1(0, ", ") + ")";
    },
    visitArgumentSetNode$1(args) {
      var t1;
      type$.Iterable_ArgumentNode._as(args);
      t1 = A._arrayInstanceType(args);
      return "(" + new A.MappedListIterable(args, t1._eval$1("String(1)")._as(new A._PrintVisitor_visitArgumentSetNode_closure(this)), t1._eval$1("MappedListIterable<1,String>")).join$1(0, ", ") + ")";
    },
    visitDefaultValueNode$1(defaultValueNode) {
      return "";
    },
    visitNamedTypeNode$1(namedTypeNode) {
      var t1;
      type$.Visitor_String._as(this);
      t1 = A._setArrayType([namedTypeNode.name.value], type$.JSArray_String);
      if (namedTypeNode.isNonNull)
        t1.push("!");
      return B.JSArray_methods.join$0(t1);
    },
    visitSelectionSetNode$1(selectionSetNode) {
      var t1 = type$.String,
        t2 = A._setArrayType(["{", "\n", B.JSArray_methods.join$0(A.List_List$filled(++this._tabs, "  ", false, t1))], type$.JSArray_String),
        t3 = selectionSetNode.selections,
        t4 = A._arrayInstanceType(t3),
        t5 = t4._eval$1("ExpandIterable<1,String>");
      B.JSArray_methods.addAll$1(t2, A.SkipIterable_SkipIterable(new A.ExpandIterable(t3, t4._eval$1("Iterable<String>(1)")._as(new A._PrintVisitor_visitSelectionSetNode_closure(this)), t5), 2, t5._eval$1("Iterable.E")));
      t2.push("\n");
      t2.push(B.JSArray_methods.join$0(A.List_List$filled(--this._tabs, "  ", false, t1)));
      t2.push("}");
      return B.JSArray_methods.join$0(t2);
    }
  };
  A._PrintVisitor_visitDocumentNode_closure.prototype = {
    call$1(def) {
      return type$.DefinitionNode._as(def).accept$1$1(0, this.$this, type$.String);
    },
    $signature: 45
  };
  A._PrintVisitor_visitDirectiveSetNode_closure.prototype = {
    call$1(directive) {
      return type$.DirectiveNode._as(directive).accept$1$1(0, this.$this, type$.String);
    },
    $signature: 46
  };
  A._PrintVisitor_visitVariableDefinitionSetNode_closure.prototype = {
    call$1(def) {
      var t1;
      type$.VariableDefinitionNode._as(def);
      t1 = type$.Visitor_String._as(this.$this);
      return B.JSArray_methods.join$0(A._setArrayType(["$" + def.variable.name.value, ": ", t1.visitNamedTypeNode$1(def.type), t1.visitDefaultValueNode$1(def.defaultValue)], type$.JSArray_String));
    },
    $signature: 47
  };
  A._PrintVisitor_visitArgumentSetNode_closure.prototype = {
    call$1(arg) {
      type$.ArgumentNode._as(arg);
      type$.Visitor_String._as(this.$this);
      return B.JSArray_methods.join$0(A._setArrayType([arg.name.value, ": ", "$" + arg.value.name.value], type$.JSArray_String));
    },
    $signature: 48
  };
  A._PrintVisitor_visitSelectionSetNode_closure.prototype = {
    call$1(selection) {
      var t1, t2;
      type$.SelectionNode._as(selection);
      t1 = this.$this;
      t2 = type$.String;
      return A._setArrayType(["\n", B.JSArray_methods.join$0(A.List_List$filled(t1._tabs, "  ", false, t2)), selection.accept$1$1(0, t1, t2)], type$.JSArray_String);
    },
    $signature: 49
  };
  A.ContextEntry.prototype = {
    $eq(_, o) {
      var t1;
      if (o == null)
        return false;
      if (this !== o)
        t1 = J.get$runtimeType$(o) === A.getRuntimeType(this) && B.ListEquality_DeepCollectionEquality.equals$2(type$.ContextEntry._as(o).get$fieldsForEquality(), this.get$fieldsForEquality());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, this.get$fieldsForEquality());
    }
  };
  A.Context.prototype = {
    withEntry$1$1(entry, $T) {
      var t1, t2, t3;
      A.checkTypeBound($T, type$.ContextEntry, "T", "withEntry");
      $T._eval$1("0?")._as(entry);
      t1 = A.createRuntimeType($T);
      t2 = A.getRuntimeType(entry);
      if (t1 !== t2)
        throw A.wrapException(A.ArgumentError$value(entry, "entry", "must be exactly of type '" + A.createRuntimeType($T).toString$0(0) + "'"));
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.nullable_ContextEntry);
      for (t2 = this._context, t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current();
        t1.$indexSet(0, t3.key, t3.value);
      }
      t1.$indexSet(0, A.createRuntimeType($T), entry);
      return new A.Context(t1);
    },
    entry$1$0($T) {
      var t1;
      A.checkTypeBound($T, type$.ContextEntry, "T", "entry");
      t1 = this._context;
      return t1.containsKey$1(0, A.createRuntimeType($T)) ? $T._eval$1("0?")._as(t1.$index(0, A.createRuntimeType($T))) : null;
    },
    $eq(_, o) {
      var t1;
      if (o == null)
        return false;
      if (this !== o)
        if (o instanceof A.Context) {
          t1 = type$.JSArray_Object;
          t1 = B.ListEquality_DeepCollectionEquality.equals$2(A._setArrayType([o._context], t1), A._setArrayType([this._context], t1));
        } else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, A._setArrayType([this._context], type$.JSArray_Object));
    },
    toString$0(_) {
      return "Context(" + this._context.toString$0(0) + ")";
    }
  };
  A.GraphQLError.prototype = {
    _error$_getChildren$0() {
      var _this = this;
      return [_this.message, _this.locations, _this.path, _this.extensions];
    },
    toString$0(_) {
      var _this = this;
      return "GraphQLError(message: " + _this.message + ", locations: " + A.S(_this.locations) + ", path: " + A.S(_this.path) + ", extensions: " + A.S(_this.extensions) + ")";
    },
    $eq(_, o) {
      var t1;
      if (o == null)
        return false;
      if (this !== o)
        t1 = o instanceof A.GraphQLError && B.ListEquality_DeepCollectionEquality.equals$2(o._error$_getChildren$0(), this._error$_getChildren$0());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, this._error$_getChildren$0());
    }
  };
  A.ErrorLocation.prototype = {
    $eq(_, o) {
      var t1;
      if (o == null)
        return false;
      if (this !== o)
        if (o instanceof A.ErrorLocation) {
          t1 = type$.JSArray_Object;
          t1 = B.ListEquality_DeepCollectionEquality.equals$2(A._setArrayType([o.line, o.column], t1), A._setArrayType([this.line, this.column], t1));
        } else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, A._setArrayType([this.line, this.column], type$.JSArray_Object));
    },
    toString$0(_) {
      return "ErrorLocation(line: " + this.line + ", column: " + this.column + ")";
    }
  };
  A.Operation.prototype = {
    $eq(_, o) {
      var t1;
      if (o == null)
        return false;
      if (this !== o)
        t1 = o instanceof A.Operation && B.ListEquality_DeepCollectionEquality.equals$2([o.document, o.operationName], [this.document, this.operationName]);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, [this.document, this.operationName]);
    },
    toString$0(_) {
      return "Operation(document: DocumentNode(" + B.C_JsonCodec.encode$1(type$.Visitor_String._as(new A._PrintVisitor()).visitDocumentNode$1(this.document)) + "), operationName: " + this.operationName + ")";
    }
  };
  A.Request.prototype = {
    $eq(_, o) {
      var t1, _this = this;
      if (o == null)
        return false;
      if (_this !== o)
        if (o instanceof A.Request) {
          t1 = type$.JSArray_Object;
          t1 = B.ListEquality_DeepCollectionEquality.equals$2(A._setArrayType([o.operation, o.variables, o.context], t1), A._setArrayType([_this.operation, _this.variables, _this.context], t1));
        } else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, A._setArrayType([this.operation, this.variables, this.context], type$.JSArray_Object));
    },
    toString$0(_) {
      return "Request(operation: " + this.operation.toString$0(0) + ", variables: " + this.variables.toString$0(0) + ", context: " + this.context.toString$0(0) + ")";
    }
  };
  A.Response.prototype = {
    _getChildren$0() {
      var _this = this;
      return [_this.errors, _this.data, _this.response, _this.context];
    },
    $eq(_, o) {
      var t1;
      if (o == null)
        return false;
      if (this !== o)
        t1 = o instanceof A.Response && B.ListEquality_DeepCollectionEquality.equals$2(o._getChildren$0(), this._getChildren$0());
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.ListEquality_DeepCollectionEquality.hash$1(0, this._getChildren$0());
    },
    toString$0(_) {
      var _this = this;
      return "Response(data: " + A.S(_this.data) + ", errors: " + A.S(_this.errors) + ", context: " + _this.context.toString$0(0) + ", response " + _this.response.toString$0(0) + ")";
    }
  };
  A.ResponseExtensions.prototype = {
    get$fieldsForEquality() {
      return [this.extensions];
    }
  };
  A.LinkException.prototype = {
    toString$0(_) {
      return "LinkException(" + A.S(this.originalException) + ")";
    },
    $isException: 1
  };
  A.ResponseFormatException.prototype = {
    toString$0(_) {
      return "ResponseFormatException(originalException: " + A.S(this.originalException) + ")";
    }
  };
  A.ServerException.prototype = {
    toString$0(_) {
      return "ServerException(originalException: " + A.S(this.originalException) + ", parsedResponse: " + A.S(this.parsedResponse) + ")";
    }
  };
  A.Link.prototype = {};
  A.RequestSerializer.prototype = {
    serializeRequest$1(request) {
      var t1, t2;
      request.context.entry$1$0(type$.RequestExtensionsThunk);
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t2 = request.operation;
      t1.$indexSet(0, "operationName", t2.operationName);
      t1.$indexSet(0, "variables", request.variables);
      t1.$indexSet(0, "query", type$.Visitor_String._as(new A._PrintVisitor()).visitDocumentNode$1(t2.document));
      return t1;
    }
  };
  A.ResponseParser.prototype = {
    parseResponse$1(body) {
      var t1;
      type$.Map_String_dynamic._as(body);
      t1 = type$.nullable_List_dynamic._as(body.$index(0, "errors"));
      t1 = t1 == null ? null : J.map$1$1$ax(t1, new A.ResponseParser_parseResponse_closure(this), type$.GraphQLError).toList$0(0);
      return new A.Response(t1, type$.nullable_Map_String_dynamic._as(body.$index(0, "data")), body, new A.Context(B.Map_empty0).withEntry$1$1(new A.ResponseExtensions(body.$index(0, "extensions")), type$.ResponseExtensions));
    },
    parseError$1(error) {
      var t1, t2, t3, t4;
      type$.Map_String_dynamic._as(error);
      t1 = J.getInterceptor$asx(error);
      t2 = A._asString(t1.$index(error, "message"));
      t3 = type$.nullable_List_dynamic;
      t4 = t3._as(t1.$index(error, "path"));
      t3 = t3._as(t1.$index(error, "locations"));
      t3 = t3 == null ? null : J.map$1$1$ax(t3, new A.ResponseParser_parseError_closure(this), type$.ErrorLocation).toList$0(0);
      return new A.GraphQLError(t2, t3, t4, type$.nullable_Map_String_dynamic._as(t1.$index(error, "extensions")));
    }
  };
  A.ResponseParser_parseResponse_closure.prototype = {
    call$1(error) {
      return this.$this.parseError$1(type$.Map_String_dynamic._as(error));
    },
    $signature: 50
  };
  A.ResponseParser_parseError_closure.prototype = {
    call$1($location) {
      var t1 = type$.Map_String_dynamic;
      $location = t1._as(t1._as($location));
      t1 = J.getInterceptor$asx($location);
      return new A.ErrorLocation(A._asInt(t1.$index($location, "line")), A._asInt(t1.$index($location, "column")));
    },
    $signature: 51
  };
  A.WebSocketLinkParserException.prototype = {};
  A.WebSocketLinkServerException.prototype = {};
  A.RequestId.prototype = {
    get$fieldsForEquality() {
      return A._setArrayType([this.id], type$.JSArray_Object);
    }
  };
  A.ConnectionState.prototype = {
    toString$0(_) {
      return "ConnectionState." + this._name;
    }
  };
  A.WebSocketLink.prototype = {
    get$_channelGenerator() {
      return A._lateReadCheck(this.__WebSocketLink__channelGenerator, "_channelGenerator");
    },
    WebSocketLink$10$autoReconnect$channelGenerator$graphQLSocketMessageDecoder$graphQLSocketMessageEncoder$inactivityTimeout$initialPayload$parser$reconnectInterval$serializer(uri, autoReconnect, channelGenerator, graphQLSocketMessageDecoder, graphQLSocketMessageEncoder, inactivityTimeout, initialPayload, parser, reconnectInterval, serializer) {
      this.set$__WebSocketLink__channelGenerator(type$.FutureOr_WebSocketChannel_Function._as(new A.WebSocketLink_closure(uri)));
    },
    request$1(_, request) {
      return this.request$body$WebSocketLink(0, request);
    },
    request$body$WebSocketLink(_, request) {
      var $async$request$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$currentError = $async$result;
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = $.$get$uuid();
              type$.nullable_Map_String_dynamic._as(null);
              options = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
              t2._initV4$0();
              options.$index(0, "positionalArgs");
              options.$index(0, "namedArgs");
              options.$index(0, "rng");
              t2 = J.$index$asx(t2.get$_uuid$_state(), "globalRNG");
              t2.toString;
              rng = type$.List_int._as(type$.dynamic_Function._as(t2).call$0());
              options.$index(0, "random");
              t2 = J.getInterceptor$asx(rng);
              t3 = t2.$index(rng, 6);
              if (typeof t3 !== "number") {
                t3.$and();
                // goto return
                $async$goto = 1;
                break;
              }
              t2.$indexSet(rng, 6, t3 & 15 | 64);
              t3 = t2.$index(rng, 8);
              if (typeof t3 !== "number") {
                t3.$and();
                // goto return
                $async$goto = 1;
                break;
              }
              t2.$indexSet(rng, 8, t3 & 63 | 128);
              if (t2.get$length(rng) !== 16)
                A.throwExpression(A.Exception_Exception("The provided buffer needs to have a length of 16."));
              t3 = $.$get$Uuid__byteToHex();
              id = B.JSArray_methods.$index(t3, t2.$index(rng, 0)) + B.JSArray_methods.$index(t3, t2.$index(rng, 1)) + B.JSArray_methods.$index(t3, t2.$index(rng, 2)) + B.JSArray_methods.$index(t3, t2.$index(rng, 3)) + "-" + B.JSArray_methods.$index(t3, t2.$index(rng, 4)) + B.JSArray_methods.$index(t3, t2.$index(rng, 5)) + "-" + B.JSArray_methods.$index(t3, t2.$index(rng, 6)) + B.JSArray_methods.$index(t3, t2.$index(rng, 7)) + "-" + B.JSArray_methods.$index(t3, t2.$index(rng, 8)) + B.JSArray_methods.$index(t3, t2.$index(rng, 9)) + "-" + B.JSArray_methods.$index(t3, t2.$index(rng, 10)) + B.JSArray_methods.$index(t3, t2.$index(rng, 11)) + B.JSArray_methods.$index(t3, t2.$index(rng, 12)) + B.JSArray_methods.$index(t3, t2.$index(rng, 13)) + B.JSArray_methods.$index(t3, t2.$index(rng, 14)) + B.JSArray_methods.$index(t3, t2.$index(rng, 15));
              t2 = type$.RequestId;
              A.checkTypeBound(t2, type$.ContextEntry, "T", "withContextEntry");
              requestWithContext = new A.Request(request.operation, request.variables, request.context.withEntry$1$1(new A.RequestId(id), t2));
              B.JSArray_methods.add$1($async$self._requests, requestWithContext);
              $async$goto = J.$eq$(A.ValueStreamExtensions_get_value($async$self._connectionStateController, type$.ConnectionState), B.ConnectionState_0) ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncStarHelper($async$self._connect$0(), $async$request$1, $async$controller);
            case 5:
              // returning from await.
            case 4:
              // join
              response = A.StreamController_StreamController(null, null, null, null, false, type$.Response);
              t1.messagesSubscription = null;
              response.set$onListen(new A.WebSocketLink_request_closure(t1, $async$self, id, response, requestWithContext));
              response.set$onCancel(new A.WebSocketLink_request_closure0(t1, $async$self, id, response));
              $async$goto = 6;
              $async$nextWhenCanceled = [1];
              return A._asyncStarHelper(A._IterationMarker_yieldStar(new A._ControllerStream(response, A._instanceType(response)._eval$1("_ControllerStream<1>"))), $async$request$1, $async$controller);
            case 6:
              // after yield
            case 1:
              // return
              return A._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return A._asyncStarHelper($async$currentError, 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = A._makeAsyncStarStreamController($async$request$1, type$.Response),
        $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, options, rng, t3, id, requestWithContext, response, t1, t2;
      return A._streamOfController($async$controller);
    },
    _connect$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, e, t1, exception, $async$exception;
      var $async$_connect$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              $async$self._connectionStateController.add$1(0, B.ConnectionState_1);
              $async$goto = 6;
              return A._asyncAwait($async$self._channelGenerator$0(), $async$_connect$0);
            case 6:
              // returning from await.
              $async$self.set$_channel($async$result);
              t1 = $async$self._reconnectTimer;
              if (t1 != null)
                t1.cancel$0();
              t1 = $async$self._channel;
              t1.get$stream(t1).listen$3$onDone$onError(new A.WebSocketLink__connect_closure($async$self), new A.WebSocketLink__connect_closure0($async$self), new A.WebSocketLink__connect_closure1($async$self));
              $async$goto = 7;
              return A._asyncAwait($async$self._write$1(new A.InitOperation($async$self.initialPayload, "connection_init")).catchError$1($async$self._messagesController.get$addError()), $async$_connect$0);
            case 7:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              e = A.unwrapException($async$exception);
              if (e instanceof A.LinkException)
                throw $async$exception;
              else
                throw A.wrapException(A.WebSocketLinkServerException$(e, null, null));
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_connect$0, $async$completer);
    },
    _parseMessage$1(message) {
      var e, t1, exception;
      try {
        t1 = B.C_ResponseParser.parseResponse$1(message.toJson$0());
        return t1;
      } catch (exception) {
        e = A.unwrapException(exception);
        throw A.wrapException(new A.WebSocketLinkParserException(e));
      }
    },
    _write$1(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, encodedMessage, t1;
      var $async$_write$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (J.$eq$(A.ValueStreamExtensions_get_value($async$self._connectionStateController, type$.ConnectionState), B.ConnectionState_0))
                throw A.wrapException(A.WebSocketLinkServerException$(null, null, message));
              $async$goto = 2;
              return A._asyncAwait(A.WebSocketLink__defaultGraphQLSocketMessageEncoder(message.toJson$0()), $async$_write$1);
            case 2:
              // returning from await.
              encodedMessage = $async$result;
              t1 = $async$self._channel.get$sink();
              t1._stream_sink$_sink.add$1(0, A._instanceType(t1)._eval$1("DelegatingStreamSink.T")._as(encodedMessage));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_write$1, $async$completer);
    },
    _parseSocketMessage$1(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.GraphQLSocketMessage),
        $async$returnValue, map, t2, type, payload, id, errors, extensions, t3, t1;
      var $async$_parseSocketMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A.WebSocketLink__defaultGraphQLSocketMessageDecoder(message);
                t1.toString;
                $async$goto = 3;
                return A._asyncAwait(t1, $async$_parseSocketMessage$1);
              case 3:
                // returning from await.
                map = $async$result;
                t1 = J.getInterceptor$asx(map);
                t2 = t1.$index(map, "type");
                type = A._asString(t2 == null ? "unknown" : t2);
                payload = t1.$index(map, "payload");
                if (payload == null)
                  payload = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
                t1 = t1.$index(map, "id");
                id = A._asString(t1 == null ? "none" : t1);
                switch (type) {
                  case "connection_ack":
                    $async$returnValue = new A.ConnectionAck("connection_ack");
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "connection_error":
                    $async$returnValue = new A.ConnectionError(payload, "connection_error");
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "ka":
                    $async$returnValue = new A.ConnectionKeepAlive("ka");
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "data":
                    t1 = J.getInterceptor$asx(payload);
                    $async$returnValue = new A.SubscriptionData(id, t1.$index(payload, "data"), t1.$index(payload, "errors"), t1.$index(payload, "extensions"), "data");
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "error":
                    t1 = new A.WebSocketLink__parseSocketMessage__tryCastErrors();
                    t2 = type$.List_dynamic;
                    if (t2._is(payload)) {
                      errors = t1.call$1(payload);
                      extensions = null;
                    } else if (type$.Map_dynamic_dynamic._is(payload)) {
                      t3 = J.getInterceptor$asx(payload);
                      if (t2._is(t3.$index(payload, "errors"))) {
                        extensions = t3.$index(payload, "extensions");
                        errors = t1.call$1(t2._as(t3.$index(payload, "errors")));
                      } else {
                        errors = t1.call$1([payload]);
                        extensions = errors == null ? t3.$index(payload, "extensions") : null;
                      }
                    } else {
                      extensions = null;
                      errors = null;
                    }
                    $async$returnValue = new A.SubscriptionError(id, payload, errors, extensions, "error");
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "complete":
                    $async$returnValue = new A.SubscriptionComplete(id, "complete");
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  default:
                    $async$returnValue = new A.UnknownData(map, "unknown");
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$_parseSocketMessage$1, $async$completer);
    },
    _close$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$_close$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._disposedCompleter;
              if (t1 != null) {
                $async$returnValue = t1.future;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._disposedCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
              t1 = $async$self._reconnectTimer;
              if (t1 != null)
                t1.cancel$0();
              t1 = $async$self._keepAliveSubscription;
              $async$goto = 3;
              return A._asyncAwait(t1 == null ? null : t1.cancel$0(), $async$_close$0);
            case 3:
              // returning from await.
              t1 = $async$self._channel;
              $async$goto = 4;
              return A._asyncAwait(t1 == null ? null : t1.get$sink().close$1(0, 1000), $async$_close$0);
            case 4:
              // returning from await.
              t1 = $async$self._connectionStateController;
              t1.add$1(0, B.ConnectionState_0);
              $async$goto = 5;
              return A._asyncAwait(t1.close$0(0), $async$_close$0);
            case 5:
              // returning from await.
              $async$goto = 6;
              return A._asyncAwait($async$self._messagesController.close$0(0), $async$_close$0);
            case 6:
              // returning from await.
              $async$self._disposedCompleter.complete$0(0);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_close$0, $async$completer);
    },
    dispose$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$dispose$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self._close$0(), $async$dispose$0);
            case 2:
              // returning from await.
              $async$self._channel = null;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$dispose$0, $async$completer);
    },
    set$_channel(_channel) {
      this._channel = type$.nullable_WebSocketChannel._as(_channel);
    },
    set$__WebSocketLink__channelGenerator(__WebSocketLink__channelGenerator) {
      this.__WebSocketLink__channelGenerator = type$.FutureOr_WebSocketChannel_Function._as(__WebSocketLink__channelGenerator);
    },
    _channelGenerator$0() {
      return this.get$_channelGenerator().call$0();
    }
  };
  A.WebSocketLink_closure.prototype = {
    call$0() {
      return A.HtmlWebSocketChannel$connect(A.Uri_parse(this.uri), null);
    },
    $signature: 52
  };
  A.WebSocketLink_request_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      t1._connectionStateController.where$1(0, new A.WebSocketLink_request__closure0()).take$1(0, 1).listen$1(new A.WebSocketLink_request__closure1(_this._box_0, t1, _this.id, _this.response, _this.requestWithContext));
    },
    $signature: 0
  };
  A.WebSocketLink_request__closure0.prototype = {
    call$1(state) {
      return type$.ConnectionState._as(state) === B.ConnectionState_2;
    },
    $signature: 53
  };
  A.WebSocketLink_request__closure1.prototype = {
    call$1(_) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      type$.ConnectionState._as(_);
      t1 = _this.$this;
      t2 = t1._messagesController;
      t3 = A._instanceType(t2)._eval$1("_BroadcastStream<1>");
      t4 = _this.id;
      t5 = t3._eval$1("bool(Stream.T)")._as(new A.WebSocketLink_request___closure(t4));
      t6 = t3._eval$1("_WhereStream<Stream.T>");
      t7 = _this.response;
      t8 = t7.get$addError();
      _this._box_0.messagesSubscription = new A._TakeWhileStream(t6._eval$1("bool(Stream.T)")._as(new A.WebSocketLink_request___closure0(t7)), new A._WhereStream(t5, new A._BroadcastStream(t2, t3), t6), t6._eval$1("_TakeWhileStream<Stream.T>")).listen$3$onDone$onError(new A.WebSocketLink_request___closure1(t1, t7), t7.get$close(t7), t8);
      t1._write$1(new A.StartOperation(t4, B.C_RequestSerializer.serializeRequest$1(_this.requestWithContext), "start")).catchError$1(t8);
    },
    $signature: 54
  };
  A.WebSocketLink_request___closure.prototype = {
    call$1(message) {
      var t1;
      type$.GraphQLSocketMessage._as(message);
      if (!(message instanceof A.SubscriptionData && message.id === this.id))
        if (!(message instanceof A.SubscriptionError && message.id === this.id))
          t1 = message instanceof A.SubscriptionComplete && message.id === this.id;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    $signature: 26
  };
  A.WebSocketLink_request___closure0.prototype = {
    call$1(_) {
      type$.GraphQLSocketMessage._as(_);
      return (this.response._state & 4) === 0;
    },
    $signature: 26
  };
  A.WebSocketLink_request___closure1.prototype = {
    call$1(message) {
      var parsed, e, t1, exception, _this = this;
      type$.GraphQLSocketMessage._as(message);
      if (message instanceof A.SubscriptionData || message instanceof A.SubscriptionError)
        try {
          parsed = _this.$this._parseMessage$1(message);
          if (parsed.data == null && parsed.errors == null) {
            t1 = A.WebSocketLinkServerException$(null, parsed, null);
            throw A.wrapException(t1);
          }
          _this.response.add$1(0, parsed);
        } catch (exception) {
          e = A.unwrapException(exception);
          _this.response.addError$1(e);
        }
      else if (message instanceof A.SubscriptionComplete)
        _this.response.close$0(0);
    },
    $signature: 56
  };
  A.WebSocketLink_request_closure0.prototype = {
    call$0() {
      var t2, _this = this,
        t1 = _this.$this;
      if (t1._disposedCompleter != null)
        return;
      t2 = _this._box_0.messagesSubscription;
      if (t2 != null)
        t2.cancel$0();
      t2 = _this.id;
      t1._write$1(new A.StopOperation(t2, "stop")).catchError$1(_this.response.get$addError());
      t1 = t1._requests;
      t2 = A._arrayInstanceType(t1)._eval$1("bool(1)")._as(new A.WebSocketLink_request__closure(t2));
      if (!!t1.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeWhere"));
      B.JSArray_methods._removeWhere$2(t1, t2, true);
    },
    $signature: 1
  };
  A.WebSocketLink_request__closure.prototype = {
    call$1(e) {
      return type$.Request._as(e).context.entry$1$0(type$.RequestId).id === this.id;
    },
    $signature: 57
  };
  A.WebSocketLink__connect_closure.prototype = {
    call$1(message) {
      return this.$call$body$WebSocketLink__connect_closure(message);
    },
    $call$body$WebSocketLink__connect_closure(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, parsedMessage, t1, t2;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1._connectionStateController;
              if (!J.$eq$(A.ValueStreamExtensions_get_value(t2, type$.ConnectionState), B.ConnectionState_2))
                t2.add$1(0, B.ConnectionState_2);
              $async$goto = 2;
              return A._asyncAwait(t1._parseSocketMessage$1(message), $async$call$1);
            case 2:
              // returning from await.
              parsedMessage = $async$result;
              t1._messagesController.add$1(0, parsedMessage);
              if (parsedMessage instanceof A.ConnectionAck) {
                t2 = t1._reConnectRequests;
                B.JSArray_methods.forEach$1(t2, new A.WebSocketLink__connect__closure0(t1));
                B.JSArray_methods.set$length(t2, 0);
              }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 7
  };
  A.WebSocketLink__connect__closure0.prototype = {
    call$1(request) {
      var t1;
      type$.Request._as(request);
      t1 = this.$this;
      t1._write$1(new A.StartOperation(request.context.entry$1$0(type$.RequestId).id, B.C_RequestSerializer.serializeRequest$1(request), "start")).catchError$1(t1._messagesController.get$addError());
    },
    $signature: 59
  };
  A.WebSocketLink__connect_closure0.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      if (t1._disposedCompleter != null)
        return;
      t1._connectionStateController.add$1(0, B.ConnectionState_0);
      t2 = t1._reConnectRequests;
      B.JSArray_methods.set$length(t2, 0);
      B.JSArray_methods.addAll$1(t2, t1._requests);
      t2 = t1._reconnectTimer;
      if ((t2 == null ? null : t2._handle != null) !== true)
        t1._reconnectTimer = A.Timer_Timer$periodic(t1.reconnectInterval, new A.WebSocketLink__connect__closure(t1));
    },
    $signature: 0
  };
  A.WebSocketLink__connect__closure.prototype = {
    call$1(timer) {
      var t1;
      type$.Timer._as(timer);
      t1 = this.$this;
      if (J.$eq$(A.ValueStreamExtensions_get_value(t1._connectionStateController, type$.ConnectionState), B.ConnectionState_0))
        t1._connect$0();
    },
    $signature: 60
  };
  A.WebSocketLink__connect_closure1.prototype = {
    call$1(error) {
      this.$this._messagesController.addError$1(type$.Object._as(error));
    },
    $signature: 61
  };
  A.WebSocketLink__parseSocketMessage__tryCastErrors.prototype = {
    call$1(list) {
      var t1 = J.getInterceptor$ax(list);
      return t1.every$1(list, new A.WebSocketLink__parseSocketMessage__tryCastErrors_closure()) ? t1.cast$1$0(list, type$.Map_of_String_and_nullable_Object) : null;
    },
    $signature: 94
  };
  A.WebSocketLink__parseSocketMessage__tryCastErrors_closure.prototype = {
    call$1(map) {
      var t1, t2;
      if (type$.Map_of_String_and_nullable_Object._is(map)) {
        t1 = J.getInterceptor$asx(map);
        if (typeof t1.$index(map, "message") == "string") {
          t2 = type$.nullable_List_dynamic;
          t1 = t2._is(t1.$index(map, "path")) && t2._is(t1.$index(map, "locations")) && type$.nullable_Map_of_String_and_nullable_Object._is(t1.$index(map, "extensions"));
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    $signature: 9
  };
  A.JsonSerializable.prototype = {
    toString$0(_) {
      return A.MapBase_mapToString(this.toJson$0());
    }
  };
  A.GraphQLSocketMessage.prototype = {};
  A.InitOperation.prototype = {
    toJson$0() {
      var t1,
        jsonMap = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      jsonMap.$indexSet(0, "type", this.type);
      t1 = this.payload;
      if (t1 != null)
        jsonMap.$indexSet(0, "payload", t1);
      return jsonMap;
    }
  };
  A.StartOperation.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "id", this.id, "payload", this.payload], type$.String, type$.dynamic);
    }
  };
  A.StopOperation.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "id", this.id], type$.String, type$.dynamic);
    }
  };
  A.ConnectionAck.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type], type$.String, type$.dynamic);
    }
  };
  A.ConnectionError.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "payload", this.payload], type$.String, type$.dynamic);
    }
  };
  A.ConnectionKeepAlive.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type], type$.String, type$.dynamic);
    }
  };
  A.SubscriptionData.prototype = {
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", _this.type, "data", _this.data, "errors", _this.errors, "extensions", _this.extensions], type$.String, type$.dynamic);
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.toJson$0());
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.SubscriptionData && B.C_JsonCodec.encode$2$toEncodable(other, null) === B.C_JsonCodec.encode$2$toEncodable(this, null);
    }
  };
  A.SubscriptionError.prototype = {
    toJson$0() {
      var t2, _this = this,
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "type", _this.type);
      t1.$indexSet(0, "id", _this.id);
      t1.$indexSet(0, "payload", _this.payload);
      t2 = _this.errors;
      if (t2 != null)
        t1.$indexSet(0, "errors", t2);
      t2 = _this.extensions;
      if (t2 != null)
        t1.$indexSet(0, "extensions", t2);
      return t1;
    }
  };
  A.SubscriptionComplete.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "id", this.id], type$.String, type$.dynamic);
    }
  };
  A.UnknownData.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "payload", this.payload], type$.String, type$.dynamic);
    }
  };
  A.FieldRename.prototype = {
    toString$0(_) {
      return "FieldRename." + this._name;
    }
  };
  A.JsonSerializable0.prototype = {
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["any_map", _this.anyMap, "checked", _this.checked, "constructor", _this.$constructor, "create_factory", _this.createFactory, "create_field_map", _this.createFieldMap, "create_to_json", _this.createToJson, "disallow_unrecognized_keys", _this.disallowUnrecognizedKeys, "explicit_to_json", _this.explicitToJson, "field_rename", B.Map_RAo53.$index(0, _this.fieldRename), "generic_argument_factories", _this.genericArgumentFactories, "ignore_unannotated", _this.ignoreUnannotated, "include_if_null", _this.includeIfNull], type$.String, type$.dynamic);
    }
  };
  A.RenderElement.prototype = {
    render$1$widget(widget) {
      return null;
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      return null;
    },
    afterWidgetRebind$3$newWidget$oldWidget$updateType(newWidget, oldWidget, updateType) {
    },
    dependOnInheritedWidgetOfExactType$1$0($T) {
      var ancestor, matchType, t1, t2;
      A.checkTypeBound($T, type$.InheritedWidget, "T", "dependOnInheritedWidgetOfExactType");
      ancestor = this._parent;
      matchType = A.createRuntimeType($T).toString$0(0);
      while (true) {
        t1 = ancestor == null;
        t2 = !t1;
        if (!(t2 && ancestor._widgetRuntimeType !== matchType))
          break;
        ancestor = ancestor._parent;
      }
      if (t2 && ancestor instanceof A.InheritedRenderElement) {
        ancestor.dependents.add$1(0, this);
        t1 = ancestor._widget;
        t1.toString;
        return $T._as(t1);
      }
      if (t1)
        t1 = null;
      else {
        t1 = ancestor._widget;
        t1.toString;
      }
      return $T._eval$1("0?")._as(t1);
    },
    findClosestDomNode$0() {
      var t1, _this = this,
        node = _this._domNode;
      if (node == null)
        node = _this.findClosestDomNodeInDescendants$0();
      if (node == null)
        node = _this.findClosestDomNodeInAncestors$0();
      if (node == null) {
        t1 = _this._services.rootElement._domNode;
        t1.toString;
        node = t1;
      }
      return node;
    },
    findClosestDomNodeInAncestors$0() {
      var t1,
        ancestor = this._parent;
      while (true) {
        t1 = ancestor == null;
        if (!(!t1 && !ancestor._hasDomNode))
          break;
        ancestor = ancestor._parent;
      }
      return t1 ? null : ancestor._domNode;
    },
    findClosestDomNodeInDescendants$0() {
      var childs = this._childElements;
      while (true) {
        if (!(childs.length !== 0 && !B.JSArray_methods.get$first(childs)._hasDomNode))
          break;
        childs = B.JSArray_methods.get$first(childs)._childElements;
      }
      if (childs.length === 0)
        return null;
      return B.JSArray_methods.get$first(childs)._domNode;
    },
    frameworkDetach$0() {
      var _this = this,
        t1 = _this._parent;
      if (t1 != null) {
        B.JSArray_methods.remove$1(t1._childElements, _this);
        _this._parent = null;
      }
      _this._parent = null;
    },
    frameworkAppendAllFresh$1(elements) {
      var t1, _i;
      type$.Iterable_RenderElement._as(elements);
      for (t1 = elements.length, _i = 0; _i < t1; ++_i)
        elements[_i]._parent = this;
      B.JSArray_methods.addAll$1(this._childElements, elements);
    },
    frameworkInsertAllFreshAt$2(elements, index) {
      var t1, _i, t2;
      type$.Iterable_RenderElement._as(elements);
      for (t1 = elements.length, _i = 0; _i < t1; ++_i)
        elements[_i]._parent = this;
      t1 = index != null && index > -1 && this._childElements.length > index;
      t2 = this._childElements;
      if (t1)
        B.JSArray_methods.insertAll$2(t2, index, elements);
      else
        B.JSArray_methods.addAll$1(t2, elements);
    },
    frameworkEjectChildRenderElements$0() {
      var t1, t2,
        ejectedRenderElements = A._setArrayType([], type$.JSArray_RenderElement);
      for (t1 = this._childElements; t2 = t1.length, t2 !== 0;) {
        if (0 >= t2)
          return A.ioore(t1, -1);
        t2 = t1.pop();
        t2._parent = null;
        B.JSArray_methods.add$1(ejectedRenderElements, t2);
      }
      return new A.ReversedListIterable(ejectedRenderElements, type$.ReversedListIterable_RenderElement);
    },
    toString$0(_) {
      return A.getRuntimeType(this).toString$0(0) + " of " + this._widgetRuntimeType + "(widget)";
    },
    $isBuildContext: 1
  };
  A.WatchfulRenderElement.prototype = {
    init$0() {
    },
    afterMount$0() {
    },
    afterUnMount$0() {
    },
    frameworkAfterMount$0() {
      this._isMounted = true;
      this.afterMount$0();
    }
  };
  A.Axis.prototype = {
    toString$0(_) {
      return "Axis." + this._name;
    }
  };
  A.LayoutType.prototype = {
    toString$0(_) {
      return "LayoutType." + this._name;
    }
  };
  A.InputType.prototype = {
    toString$0(_) {
      return "InputType." + this._name;
    }
  };
  A.DomEventType.prototype = {
    toString$0(_) {
      return "DomEventType." + this._name;
    }
  };
  A.DomTagType.prototype = {
    toString$0(_) {
      return "DomTagType." + this._name;
    }
  };
  A.UpdateType.prototype = {
    toString$0(_) {
      return "UpdateType." + this._name;
    }
  };
  A.WidgetUpdateType.prototype = {
    toString$0(_) {
      return "WidgetUpdateType." + this._name;
    }
  };
  A.WidgetAction.prototype = {
    toString$0(_) {
      return "WidgetAction." + this._name;
    }
  };
  A.SchedulerTaskType.prototype = {
    toString$0(_) {
      return "SchedulerTaskType." + this._name;
    }
  };
  A.RootRenderElement.prototype = {
    get$widgetChildren() {
      return A.throwExpression(A.Exception_Exception("Access invalid"));
    }
  };
  A.TemporaryElement.prototype = {
    get$widgetChildren() {
      return A.throwExpression(A.Exception_Exception("Access invalid"));
    }
  };
  A.DomNodePatch.prototype = {
    get$attributes(receiver) {
      return this.attributes;
    },
    get$properties() {
      return null;
    }
  };
  A.DomNodePatchFillable.prototype = {$isDomNodePatch: 1,
    get$attributes(receiver) {
      return this.attributes;
    },
    get$properties() {
      return this.properties;
    }
  };
  A.Key.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Key && other._key$_value === this._key$_value;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this._key$_value);
    },
    toString$0(_) {
      return "key(" + this._key$_value + ")";
    }
  };
  A.DebugOptions.prototype = {};
  A.RouterOptions.prototype = {};
  A.Framework.prototype = {
    processTask$1(task) {
      var t1, t2, queue, t3, t4, t5, t6, _this = this;
      type$.SchedulerTask._as(task);
      t1 = task.beforeTaskCallback;
      if (t1 != null)
        t1.call$0();
      switch (task.get$taskType()) {
        case B.SchedulerTaskType_0:
          type$.WidgetsBuildTask._as(task);
          t1 = task.widgets;
          if (t1.length !== 0)
            _this._renderer.render$4$flagCleanParentContents$mountAtIndex$parentRenderElement$widgets(task.flagCleanParentContents, task.mountAtIndex, task.parentRenderElement, t1);
          break;
        case B.SchedulerTaskType_1:
          type$.WidgetsUpdateTask._as(task);
          t1 = type$.List_Widget._as(task.widgets);
          t2 = type$.JSArray_of_void_Function;
          queue = new A.JobQueue(A._setArrayType([], t2), A._setArrayType([], t2));
          _this._renderer.updateWidgetsUnderContext$5$flagAddIfNotFound$jobQueue$parentRenderElement$updateType$widgets(true, queue, task.parentRenderElement, task.updateType, t1);
          queue.dispatchJobs$0();
          break;
        case B.SchedulerTaskType_2:
          type$.WidgetsManageTask._as(task);
          t1 = _this._renderer;
          t2 = task.get$updateType();
          t3 = task.get$parentRenderElement();
          t4 = task.get$widgetActionCallback();
          t5 = task.get$flagIterateInReverseOrder();
          type$.List_WidgetAction_Function_RenderElement._as(t4);
          t6 = type$.JSArray_of_void_Function;
          queue = new A.JobQueue(A._setArrayType([], t6), A._setArrayType([], t6));
          t1.dispatchWidgetActions$4$jobQueue$parentRenderElement$updateType$widgetActions(queue, t3, t2, t1.prepareWidgetActions$3$flagIterateInReverseOrder$parentRenderElement$widgetActionCallback(t5, t3, t4));
          queue.dispatchJobs$0();
          break;
        case B.SchedulerTaskType_3:
          type$.WidgetsDisposeTask._as(task);
          t1 = task.get$renderElement();
          _this._renderer.disposeWidget$2$flagPreserveTarget$renderElement(task.get$flagPreserveTarget(), t1);
          break;
        case B.SchedulerTaskType_4:
          t1 = type$.WidgetsUpdateDependentTask._as(task).dependentRenderElement;
          t2 = type$.JSArray_of_void_Function;
          queue = new A.JobQueue(A._setArrayType([], t2), A._setArrayType([], t2));
          t2 = t1._widget;
          t2.toString;
          t2 = A._setArrayType([t2], type$.JSArray_Widget);
          t1 = t1._parent;
          t1.toString;
          _this._renderer.updateWidgetsUnderContext$5$flagAddIfNotFound$jobQueue$parentRenderElement$updateType$widgets(true, queue, t1, B.UpdateType_1, t2);
          queue.dispatchJobs$0();
          break;
        case B.SchedulerTaskType_5:
          break;
      }
      t1 = task.afterTaskCallback;
      if (t1 != null)
        t1.call$0();
    }
  };
  A.AppComponent.prototype = {
    toString$0(_) {
      return "Rad framework default styles (v0.8.0 by rad-core)";
    }
  };
  A.StyleComponent.prototype = {};
  A.Components.prototype = {
    injectStyleComponent$1(component) {
      var t1, stylesheet, t2,
        componentKey = component.toString$0(0);
      if (this._styleComponents.containsKey$1(0, componentKey))
        return;
      this._styleComponents.$indexSet(0, componentKey, component);
      t1 = document;
      stylesheet = t1.createElement("style");
      stylesheet.innerText = " /**     * RadApp widget     */    .rad-app {      width: 100%;      height: 100%;  }      /**     * widgets that has corresponding node in dom      * but we want to limit their impact/disrupt in layout/markup     */    .rad-route,  .rad-navigator,  .rad-gesture-detector {      display: contents;  }      /**     * ListView widget     */    .rad-list-view {      width: 100%;      height: 100%;  }    .rad-list-view-layout-contain {      max-width: 100vw;      max-height: 100vh;      overflow: auto;  }    .rad-list-view-layout-expand {      overflow: auto;  }    .rad-list-view-vertical {      overflow-x: hidden;      overflow-y: auto;      flex-direction: column;  }    .rad-list-view-horizontal {      overflow-x: auto;      overflow-y: hidden;      flex-direction: row;  }      /**     * Make sure flex do not shrink/grow for ListView's childs     */    .rad-list-view>*,  .rad-list-view-item-container>* {      flex-grow: 0;      flex-shrink: 0;      display: flex;  }      /**     * System classes     */    .rad-hidden {      display: none !important;      visibility: hidden !important;  } ";
      component.toString$0(0);
      t2 = t1.head;
      if (t2 != null)
        t2.appendChild(stylesheet).toString;
      else {
        t1 = t1.body;
        if (t1 != null)
          t1.appendChild(stylesheet).toString;
        else
          A.throwExpression(A.Exception_Exception("For Rad to work, your page must have either a head tag or a body. Creating a body(or head) in your page will fix this problem."));
      }
    }
  };
  A.WindowDelegate.prototype = {};
  A.BrowserWindow.prototype = {
    _psEnsureListening$0() {
      var t1, t2;
      if (this._psIsListening)
        return;
      t1 = window;
      t1.toString;
      t2 = type$.nullable_void_Function_PopStateEvent._as(this.get$_psOnPopState());
      type$.nullable_void_Function._as(null);
      A._EventStreamSubscription$(t1, "popstate", t2, false, type$.PopStateEvent);
      this._psIsListening = true;
    },
    _psOnPopState$1($event) {
      var listener;
      type$.PopStateEvent._as($event);
      if (typeof new A._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true) == "string") {
        listener = this._psListeners.$index(0, new A._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true));
        if (listener != null)
          listener.call$1($event);
      }
    }
  };
  A.Window.prototype = {};
  A.RadStylesComponent.prototype = {};
  A.DumbNodeValidator.prototype = {
    allowsElement$1(_) {
      return true;
    },
    allowsAttribute$3(_, __, ___) {
      return true;
    },
    $isNodeValidator: 1
  };
  A.JobQueue.prototype = {
    dispatchJobs$0() {
      var job, callback, t1, t2, _i, _this = this;
      _this._isLocked = true;
      try {
        for (t1 = _this._jobs, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          job = t1[_i];
          job.call$0();
        }
      } finally {
        B.JSArray_methods.set$length(_this._jobs, 0);
        try {
          for (t1 = _this._postJobCallbacks, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
            callback = t1[_i];
            callback.call$0();
          }
        } finally {
          B.JSArray_methods.set$length(_this._postJobCallbacks, 0);
        }
      }
    }
  };
  A.Reconciler.prototype = {
    prepareUpdates$3$flagAddIfNotFound$parentRenderElement$widgets(flagAddIfNotFound, parentRenderElement, widgets) {
      type$.List_Widget._as(widgets);
      if (widgets.length === 0)
        return this._prepareUpdatesDisposeAll$2$flagAddIfNotFound$parentRenderElement(true, parentRenderElement);
      if (parentRenderElement._childElements.length === 0)
        return this._prepareUpdatesAddAllWithoutClean$2$flagAddIfNotFound$widgets(true, widgets);
      return this._prepareUpdatesUsingRadAlgo$3$flagAddIfNotFound$parentRenderElement$widgets(true, parentRenderElement, widgets);
    },
    _prepareUpdatesAddAllWithoutClean$2$flagAddIfNotFound$widgets(flagAddIfNotFound, widgets) {
      type$.List_Widget._as(widgets);
      if (widgets.length === 0 || false)
        return B.List_empty2;
      return A._setArrayType([new A.WidgetUpdateObjectActionAddAllWithoutClean(widgets, B.WidgetUpdateType_4)], type$.JSArray_WidgetUpdateObject);
    },
    _prepareUpdatesDisposeAll$2$flagAddIfNotFound$parentRenderElement(flagAddIfNotFound, parentRenderElement) {
      if (parentRenderElement._childElements.length === 0)
        return B.List_empty2;
      return A._setArrayType([B.WidgetUpdateObjectActionCleanParent_WidgetUpdateType_5], type$.JSArray_WidgetUpdateObject);
    },
    _prepareUpdatesUsingRadAlgo$3$flagAddIfNotFound$parentRenderElement$widgets(flagAddIfNotFound, parentRenderElement, widgets) {
      var oldNodes, newBottomPoint, oldBottomPoint, t1, preparedUpdates, preparedUpdatesInReverse, newTopPoint, oldTopPoint, t2, newNode, oldNode, oldKey, oldRuntimeType, newKey, rti, hasUnSyncedOldNodes, t3, hasUnSyncedNewNodes, hasherForOldNodes, hasherForNewNodes, newNodeHashToNodeMap, newPositionToNodeHashMap, copyOfNewTopPoint, t4, newNodeHash, oldNodeHashToNodeMap, oldNodeHashToPositionMap, obsoluteNodesCount, oldNodeHash, lastAddedWidgetAction, slippedInNodesCount, newTopPoint0, matchedOldNode, lastWidgetPosIndex, oldPositionY, mountAtIndex, _null = null;
      type$.List_Widget._as(widgets);
      oldNodes = parentRenderElement._childElements;
      newBottomPoint = widgets.length - 1;
      oldBottomPoint = oldNodes.length - 1;
      t1 = type$.JSArray_WidgetUpdateObject;
      preparedUpdates = A._setArrayType([], t1);
      preparedUpdatesInReverse = A._setArrayType([], t1);
      newTopPoint = 0;
      oldTopPoint = 0;
      while (true) {
        t2 = newTopPoint <= newBottomPoint;
        if (!(t2 && oldTopPoint <= oldBottomPoint))
          break;
        if (!(newTopPoint < widgets.length))
          return A.ioore(widgets, newTopPoint);
        newNode = widgets[newTopPoint];
        if (!(oldTopPoint < oldNodes.length))
          return A.ioore(oldNodes, oldTopPoint);
        oldNode = oldNodes[oldTopPoint];
        oldKey = oldNode._key;
        oldRuntimeType = oldNode._widgetRuntimeType;
        newKey = newNode.key;
        rti = newNode instanceof A.Closure ? A.closureFunctionType(newNode) : _null;
        if (A.createRuntimeType(rti == null ? A.instanceType(newNode) : rti).toString$0(0) !== oldRuntimeType || !J.$eq$(newKey, oldKey))
          break;
        B.JSArray_methods.add$1(preparedUpdates, new A.WidgetUpdateObjectActionUpdate(newNode, oldNode, _null, B.WidgetUpdateType_1));
        ++newTopPoint;
        ++oldTopPoint;
      }
      hasUnSyncedOldNodes = oldTopPoint <= oldBottomPoint;
      t3 = !t2;
      if (t3 && !hasUnSyncedOldNodes)
        return preparedUpdates;
      if (t2 && !hasUnSyncedOldNodes) {
        B.JSArray_methods.add$1(preparedUpdates, new A.WidgetUpdateObjectActionAdd(B.JSArray_methods.sublist$1(widgets, newTopPoint), newTopPoint, _null, B.WidgetUpdateType_0));
        return preparedUpdates;
      }
      if (hasUnSyncedOldNodes && t3) {
        B.JSArray_methods.insert$2(preparedUpdates, 0, new A.WidgetUpdateObjectActionDisposeMultiple(B.JSArray_methods.sublist$1(oldNodes, oldTopPoint), B.WidgetUpdateType_3));
        return preparedUpdates;
      }
      while (true) {
        t2 = oldTopPoint <= oldBottomPoint;
        if (!(t2 && newTopPoint <= newBottomPoint))
          break;
        if (!(newBottomPoint >= 0 && newBottomPoint < widgets.length))
          return A.ioore(widgets, newBottomPoint);
        newNode = widgets[newBottomPoint];
        if (!(oldBottomPoint >= 0 && oldBottomPoint < oldNodes.length))
          return A.ioore(oldNodes, oldBottomPoint);
        oldNode = oldNodes[oldBottomPoint];
        oldKey = oldNode._key;
        oldRuntimeType = oldNode._widgetRuntimeType;
        newKey = newNode.key;
        rti = newNode instanceof A.Closure ? A.closureFunctionType(newNode) : _null;
        if (A.createRuntimeType(rti == null ? A.instanceType(newNode) : rti).toString$0(0) !== oldRuntimeType || !J.$eq$(newKey, oldKey))
          break;
        B.JSArray_methods.add$1(preparedUpdatesInReverse, new A.WidgetUpdateObjectActionUpdate(newNode, oldNode, _null, B.WidgetUpdateType_1));
        --newBottomPoint;
        --oldBottomPoint;
      }
      hasUnSyncedNewNodes = newTopPoint <= newBottomPoint;
      if (hasUnSyncedNewNodes && !t2) {
        for (; t1 = preparedUpdatesInReverse.length, t1 !== 0;) {
          if (0 >= t1)
            return A.ioore(preparedUpdatesInReverse, -1);
          B.JSArray_methods.add$1(preparedUpdates, preparedUpdatesInReverse.pop());
        }
        B.JSArray_methods.insert$2(preparedUpdates, newTopPoint, new A.WidgetUpdateObjectActionAdd(B.JSArray_methods.sublist$2(widgets, newTopPoint, newBottomPoint + 1), newTopPoint, newTopPoint, B.WidgetUpdateType_0));
        return preparedUpdates;
      }
      if (t2 && !hasUnSyncedNewNodes) {
        for (; t1 = preparedUpdatesInReverse.length, t1 !== 0;) {
          if (0 >= t1)
            return A.ioore(preparedUpdatesInReverse, -1);
          B.JSArray_methods.add$1(preparedUpdates, preparedUpdatesInReverse.pop());
        }
        B.JSArray_methods.insert$2(preparedUpdates, 0, new A.WidgetUpdateObjectActionDisposeMultiple(B.JSArray_methods.sublist$2(oldNodes, oldTopPoint, oldBottomPoint + 1), B.WidgetUpdateType_3));
        return preparedUpdates;
      }
      hasherForOldNodes = this.createCompatibilityHashGenerator$0();
      hasherForNewNodes = this.createCompatibilityHashGenerator$0();
      t2 = type$.String;
      newNodeHashToNodeMap = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.Widget);
      t3 = type$.int;
      newPositionToNodeHashMap = A.LinkedHashMap_LinkedHashMap$_empty(t3, t2);
      for (copyOfNewTopPoint = newTopPoint; copyOfNewTopPoint <= newBottomPoint;) {
        if (!(copyOfNewTopPoint < widgets.length))
          return A.ioore(widgets, copyOfNewTopPoint);
        newNode = widgets[copyOfNewTopPoint];
        t4 = newNode.key;
        rti = newNode instanceof A.Closure ? A.closureFunctionType(newNode) : _null;
        newNodeHash = hasherForNewNodes.createCompatibilityHash$2$widgetKey$widgetRuntimeType(t4, A.createRuntimeType(rti == null ? A.instanceType(newNode) : rti).toString$0(0));
        newNodeHashToNodeMap.$indexSet(0, newNodeHash, newNode);
        newPositionToNodeHashMap.$indexSet(0, copyOfNewTopPoint, newNodeHash);
        ++copyOfNewTopPoint;
      }
      oldNodeHashToNodeMap = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.RenderElement);
      oldNodeHashToPositionMap = A.LinkedHashMap_LinkedHashMap$_empty(t2, t3);
      for (obsoluteNodesCount = 0; oldTopPoint <= oldBottomPoint;) {
        if (!(oldTopPoint < oldNodes.length))
          return A.ioore(oldNodes, oldTopPoint);
        oldNode = oldNodes[oldTopPoint];
        oldNodeHash = hasherForOldNodes.createCompatibilityHash$2$widgetKey$widgetRuntimeType(oldNode._key, oldNode._widgetRuntimeType);
        oldNodeHashToPositionMap.$indexSet(0, oldNodeHash, oldTopPoint - obsoluteNodesCount);
        oldNodeHashToNodeMap.$indexSet(0, oldNodeHash, oldNode);
        if (newNodeHashToNodeMap.$index(0, oldNodeHash) == null)
          ++obsoluteNodesCount;
        ++oldTopPoint;
      }
      if (obsoluteNodesCount === oldNodeHashToNodeMap.__js_helper$_length)
        if (preparedUpdates.length === 0 && preparedUpdatesInReverse.length === 0) {
          t1 = A._setArrayType([B.WidgetUpdateObjectActionCleanParent_WidgetUpdateType_5, new A.WidgetUpdateObjectActionAdd(widgets, 0, _null, B.WidgetUpdateType_0)], t1);
          return t1;
        }
      for (t1 = type$.JSArray_Widget, lastAddedWidgetAction = _null, slippedInNodesCount = 0; newTopPoint <= newBottomPoint; newTopPoint = newTopPoint0) {
        newTopPoint0 = newTopPoint + 1;
        if (!(newTopPoint < widgets.length))
          return A.ioore(widgets, newTopPoint);
        newNode = widgets[newTopPoint];
        newNodeHash = newPositionToNodeHashMap.$index(0, newTopPoint);
        matchedOldNode = oldNodeHashToNodeMap.remove$1(0, newNodeHash);
        if (matchedOldNode == null) {
          ++slippedInNodesCount;
          if (lastAddedWidgetAction != null) {
            lastWidgetPosIndex = lastAddedWidgetAction.widgetPositionIndex;
            t2 = lastAddedWidgetAction.widgets;
            if (lastWidgetPosIndex + t2.length === newTopPoint) {
              B.JSArray_methods.add$1(t2, newNode);
              continue;
            }
          }
          lastAddedWidgetAction = new A.WidgetUpdateObjectActionAdd(A._setArrayType([newNode], t1), newTopPoint, newTopPoint, B.WidgetUpdateType_0);
          B.JSArray_methods.add$1(preparedUpdates, lastAddedWidgetAction);
          continue;
        }
        oldPositionY = oldNodeHashToPositionMap.$index(0, newNodeHash);
        if (oldPositionY != null)
          if (oldPositionY + slippedInNodesCount !== newTopPoint) {
            ++slippedInNodesCount;
            mountAtIndex = newTopPoint;
          } else
            mountAtIndex = _null;
        else
          mountAtIndex = _null;
        B.JSArray_methods.add$1(preparedUpdates, new A.WidgetUpdateObjectActionUpdate(newNode, matchedOldNode, mountAtIndex, B.WidgetUpdateType_1));
      }
      if (oldNodeHashToNodeMap.__js_helper$_length !== 0)
        B.JSArray_methods.insert$2(preparedUpdates, 0, new A.WidgetUpdateObjectActionDisposeMultiple(oldNodeHashToNodeMap.get$values(oldNodeHashToNodeMap), B.WidgetUpdateType_3));
      for (; t1 = preparedUpdatesInReverse.length, t1 !== 0;) {
        if (0 >= t1)
          return A.ioore(preparedUpdatesInReverse, -1);
        B.JSArray_methods.add$1(preparedUpdates, preparedUpdatesInReverse.pop());
      }
      hasherForOldNodes._counters.clear$0(0);
      t1 = this._availableHashers;
      B.JSArray_methods.add$1(t1, hasherForOldNodes);
      hasherForNewNodes._counters.clear$0(0);
      B.JSArray_methods.add$1(t1, hasherForNewNodes);
      return preparedUpdates;
    },
    createCompatibilityHashGenerator$0() {
      var t1 = this._availableHashers,
        t2 = t1.length;
      if (t2 !== 0) {
        if (0 >= t2)
          return A.ioore(t1, -1);
        return t1.pop();
      }
      return new A._CompatibilityHashGenerator(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.int));
    }
  };
  A._CompatibilityHashGenerator.prototype = {
    createCompatibilityHash$2$widgetKey$widgetRuntimeType(widgetKey, widgetRuntimeType) {
      var t1, count;
      if (widgetKey != null)
        return widgetRuntimeType + ":k:" + widgetKey._key$_value;
      t1 = this._counters;
      count = t1.$index(0, widgetRuntimeType);
      if (count == null)
        count = 0;
      t1.$indexSet(0, widgetRuntimeType, count + 1);
      return widgetRuntimeType + ":n:" + count;
    }
  };
  A.Renderer.prototype = {
    render$5$flagCleanParentContents$jobQueue$mountAtIndex$parentRenderElement$widgets(flagCleanParentContents, jobQueue, mountAtIndex, parentRenderElement, widgets) {
      var t1, t2, queue, t3, t4, temporaryRenderElement, _this = this;
      type$.List_Widget._as(widgets);
      t1 = jobQueue == null;
      if (t1) {
        t2 = type$.JSArray_of_void_Function;
        queue = new A.JobQueue(A._setArrayType([], t2), A._setArrayType([], t2));
      } else
        queue = jobQueue;
      if (flagCleanParentContents)
        _this.cleanRenderElement$2$jobQueue$renderElement(queue, parentRenderElement);
      t2 = _this.resolveServices$1(_this.rootContext);
      t3 = document.createElement("div");
      t4 = A._setArrayType([], type$.JSArray_RenderElement);
      temporaryRenderElement = new A.TemporaryElement(null, B.Text_OPN, A.getRuntimeType(B.Text_OPN).toString$0(0), t3, true, parentRenderElement.appTargetId, t2, parentRenderElement, t4);
      _this.buildWidgetsUnderContext$4$jobQueue$parentDomNode$parentRenderElement$widgets(queue, t3, temporaryRenderElement, widgets);
      _this.mountWidgets$4$jobQueue$mountAtIndex$parentRenderElement$temporaryRenderElement(queue, mountAtIndex, parentRenderElement, temporaryRenderElement);
      if (t1)
        queue.dispatchJobs$0();
    },
    render$4$flagCleanParentContents$mountAtIndex$parentRenderElement$widgets(flagCleanParentContents, mountAtIndex, parentRenderElement, widgets) {
      return this.render$5$flagCleanParentContents$jobQueue$mountAtIndex$parentRenderElement$widgets(flagCleanParentContents, null, mountAtIndex, parentRenderElement, widgets);
    },
    disposeWidget$3$flagPreserveTarget$jobQueue$renderElement(flagPreserveTarget, jobQueue, renderElement) {
      var t2, queue,
        t1 = jobQueue == null;
      if (t1) {
        t2 = type$.JSArray_of_void_Function;
        queue = new A.JobQueue(A._setArrayType([], t2), A._setArrayType([], t2));
      } else
        queue = jobQueue;
      this.disposeRenderElement$2$jobQueue$renderElement(queue, renderElement);
      if (t1)
        queue.dispatchJobs$0();
    },
    disposeWidget$2$flagPreserveTarget$renderElement(flagPreserveTarget, renderElement) {
      return this.disposeWidget$3$flagPreserveTarget$jobQueue$renderElement(flagPreserveTarget, null, renderElement);
    },
    buildWidgetsUnderContext$4$jobQueue$parentDomNode$parentRenderElement$widgets(jobQueue, parentDomNode, parentRenderElement, widgets) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _i, t9, renderElement, t10, tagName, domNode, domNodePatch, bubbleEventListeners, currentDomNode, widgetChildren, _this = this;
      type$.List_Widget._as(widgets);
      for (t1 = widgets.length, t2 = parentRenderElement._childElements, t3 = type$.Widget, t4 = type$.void_Function, t5 = jobQueue._postJobCallbacks, t6 = _this.rootContext.appTargetId, t7 = type$.String, t8 = type$.Services, _i = 0; _i < widgets.length; widgets.length === t1 || (0, A.throwConcurrentModificationError)(widgets), ++_i) {
        t9 = t3._as(widgets[_i]);
        renderElement = t9.createRenderElement$1(parentRenderElement);
        t10 = t9.get$correspondingTag();
        tagName = t10 == null ? null : t10.nativeValue;
        if (tagName != null) {
          domNode = document.createElement(tagName);
          renderElement._domNode = domNode;
          renderElement._hasDomNode = true;
        } else
          domNode = null;
        if (renderElement instanceof A.WatchfulRenderElement) {
          renderElement.init$0();
          B.JSArray_methods.add$1(t5, t4._as(renderElement.get$frameworkAfterMount()));
        }
        domNodePatch = renderElement.render$1$widget(t9);
        if (domNode != null && domNodePatch != null)
          _this.applyDomNodePatch$2$description$domNode(domNodePatch, domNode);
        bubbleEventListeners = t9.get$widgetEventListeners();
        if (B.Map_empty.get$isNotEmpty(B.Map_empty)) {
          t9 = _this.ServicesResolver__services;
          if (t9 == null) {
            t9 = $.ServicesRegistry__instance;
            t9 = (t9 == null ? $.ServicesRegistry__instance = new A.ServicesRegistry(A.LinkedHashMap_LinkedHashMap$_empty(t7, t8)) : t9)._services_registry$_services.$index(0, t6);
            t9.toString;
            t9 = _this.ServicesResolver__services = t9;
          }
          t9._events.setupEventListeners$1(B.Map_empty);
        }
        if (bubbleEventListeners.get$isNotEmpty(bubbleEventListeners)) {
          t9 = _this.ServicesResolver__services;
          if (t9 == null) {
            t9 = $.ServicesRegistry__instance;
            t9 = (t9 == null ? $.ServicesRegistry__instance = new A.ServicesRegistry(A.LinkedHashMap_LinkedHashMap$_empty(t7, t8)) : t9)._services_registry$_services.$index(0, t6);
            t9.toString;
            t9 = _this.ServicesResolver__services = t9;
          }
          t9._events.setupEventListeners$1(bubbleEventListeners);
        }
        if (_this.ServicesResolver__services == null) {
          t9 = $.ServicesRegistry__instance;
          t9 = (t9 == null ? $.ServicesRegistry__instance = new A.ServicesRegistry(A.LinkedHashMap_LinkedHashMap$_empty(t7, t8)) : t9)._services_registry$_services.$index(0, t6);
          t9.toString;
          _this.ServicesResolver__services = t9;
        }
        renderElement._parent = parentRenderElement;
        B.JSArray_methods.add$1(t2, renderElement);
        currentDomNode = renderElement._domNode;
        t9 = currentDomNode == null;
        if (!t9)
          parentDomNode.appendChild(currentDomNode).toString;
        widgetChildren = renderElement.get$widgetChildren();
        if (widgetChildren.length !== 0)
          _this.buildWidgetsUnderContext$4$jobQueue$parentDomNode$parentRenderElement$widgets(jobQueue, t9 ? parentDomNode : currentDomNode, renderElement, widgetChildren);
      }
    },
    updateWidgetsUnderContext$5$flagAddIfNotFound$jobQueue$parentRenderElement$updateType$widgets(flagAddIfNotFound, jobQueue, parentRenderElement, updateType, widgets) {
      this.publishUpdates$5$flagAddIfNotFound$jobQueue$parentRenderElement$updateType$updates(true, jobQueue, parentRenderElement, updateType, this.reconciler.prepareUpdates$3$flagAddIfNotFound$parentRenderElement$widgets(true, parentRenderElement, type$.List_Widget._as(widgets)));
    },
    publishUpdates$5$flagAddIfNotFound$jobQueue$parentRenderElement$updateType$updates(flagAddIfNotFound, jobQueue, parentRenderElement, updateType, updates) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, _i, updateObject, t11, _this = this;
      type$.Iterable_WidgetUpdateObject._as(updates);
      for (t1 = updates.length, t2 = type$.WidgetUpdateObjectActionUpdate, t3 = type$.WidgetUpdateObjectActionAddAllWithoutClean, t4 = type$.WidgetUpdateObjectActionAdd, t5 = _this.rootContext.appTargetId, t6 = type$.String, t7 = type$.Services, t8 = type$.WidgetUpdateObjectActionCleanParent, t9 = type$.WidgetUpdateObjectActionDisposeMultiple, t10 = type$.WidgetUpdateObjectActionDispose, _i = 0; _i < updates.length; updates.length === t1 || (0, A.throwConcurrentModificationError)(updates), ++_i) {
        updateObject = updates[_i];
        switch (updateObject.widgetUpdateType) {
          case B.WidgetUpdateType_2:
            _this.disposeWidget$3$flagPreserveTarget$jobQueue$renderElement(false, jobQueue, t10._as(updateObject).get$existingElement());
            break;
          case B.WidgetUpdateType_3:
            for (t11 = J.get$iterator$ax(t9._as(updateObject).elementsToDispose); t11.moveNext$0();)
              _this.disposeWidget$3$flagPreserveTarget$jobQueue$renderElement(false, jobQueue, t11.get$current());
            break;
          case B.WidgetUpdateType_5:
            t8._as(updateObject);
            _this.cleanRenderElement$2$jobQueue$renderElement(jobQueue, parentRenderElement);
            break;
          case B.WidgetUpdateType_0:
            t4._as(updateObject);
            if (_this.ServicesResolver__services == null) {
              t11 = $.ServicesRegistry__instance;
              t11 = (t11 == null ? $.ServicesRegistry__instance = new A.ServicesRegistry(A.LinkedHashMap_LinkedHashMap$_empty(t6, t7)) : t11)._services_registry$_services.$index(0, t5);
              t11.toString;
              _this.ServicesResolver__services = t11;
            }
            _this.render$5$flagCleanParentContents$jobQueue$mountAtIndex$parentRenderElement$widgets(false, jobQueue, updateObject.mountAtIndex, parentRenderElement, updateObject.widgets);
            break;
          case B.WidgetUpdateType_4:
            _this.render$5$flagCleanParentContents$jobQueue$mountAtIndex$parentRenderElement$widgets(false, jobQueue, null, parentRenderElement, t3._as(updateObject).widgets);
            break;
          case B.WidgetUpdateType_1:
            _this.processWidgetUpdateObjectActionUpdate$4$flagAddIfNotFound$jobQueue$updateObject$updateType(true, jobQueue, t2._as(updateObject), updateType);
            break;
        }
      }
    },
    processWidgetUpdateObjectActionUpdate$4$flagAddIfNotFound$jobQueue$updateObject$updateType(flagAddIfNotFound, jobQueue, updateObject, updateType) {
      var domNode, parentRenderElement, t3, t4, updateTypeForChildWidgets, shouldUpdateWidget, domNodePatch, _this = this, t1 = {},
        newMountAtIndex = updateObject.newMountAtIndex,
        matchedRenderElement = updateObject.existingRenderElement,
        newWidget = updateObject.widget,
        t2 = matchedRenderElement._widget;
      t2.toString;
      if (newMountAtIndex != null) {
        domNode = matchedRenderElement._domNode;
        t1.domNode = domNode;
        if (domNode == null)
          t1.domNode = matchedRenderElement.findClosestDomNodeInDescendants$0();
        parentRenderElement = matchedRenderElement._parent;
        if (parentRenderElement != null) {
          matchedRenderElement.frameworkDetach$0();
          t3 = parentRenderElement._childElements.length > newMountAtIndex;
          t4 = parentRenderElement._childElements;
          if (t3)
            B.JSArray_methods.insert$2(t4, newMountAtIndex, matchedRenderElement);
          else
            B.JSArray_methods.add$1(t4, matchedRenderElement);
          matchedRenderElement._parent = parentRenderElement;
          B.JSArray_methods.add$1(jobQueue._jobs, type$.void_Function._as(new A.Renderer_processWidgetUpdateObjectActionUpdate_closure(t1, newMountAtIndex)));
        }
      }
      if (B.UpdateType_1 === updateType)
        updateTypeForChildWidgets = B.UpdateType_3;
      else if (B.UpdateType_2 === updateType)
        updateTypeForChildWidgets = B.UpdateType_3;
      else {
        if (t2 === newWidget) {
          _this.resolveServices$1(_this.rootContext);
          return;
        }
        updateTypeForChildWidgets = updateType;
      }
      matchedRenderElement._widget = newWidget;
      matchedRenderElement.afterWidgetRebind$3$newWidget$oldWidget$updateType(newWidget, t2, updateType);
      shouldUpdateWidget = newWidget.shouldUpdateWidget$1(t2);
      if (shouldUpdateWidget) {
        _this.resolveServices$1(_this.rootContext);
        domNodePatch = matchedRenderElement.update$3$newWidget$oldWidget$updateType(0, newWidget, t2, updateType);
        if (domNodePatch != null && matchedRenderElement._hasDomNode) {
          t1 = matchedRenderElement._domNode;
          t1.toString;
          _this.applyDomNodePatch$3$description$domNode$jobQueue(domNodePatch, t1, jobQueue);
        }
      } else
        _this.resolveServices$1(_this.rootContext);
      if (newWidget.shouldUpdateWidgetChildren$2(t2, shouldUpdateWidget))
        _this.updateWidgetsUnderContext$5$flagAddIfNotFound$jobQueue$parentRenderElement$updateType$widgets(true, jobQueue, matchedRenderElement, updateTypeForChildWidgets, matchedRenderElement.get$widgetChildren());
    },
    mountWidgets$4$jobQueue$mountAtIndex$parentRenderElement$temporaryRenderElement(jobQueue, mountAtIndex, parentRenderElement, temporaryRenderElement) {
      var renderElements, firstRenderElementInNewWidgets, t1, immediateRenderElement, currentParentRenderElement, $parent, mountTargetDomNode, t2, t3, t4, _box_0 = {};
      _box_0.mountAtIndex = mountAtIndex;
      renderElements = temporaryRenderElement._childElements;
      firstRenderElementInNewWidgets = B.JSArray_methods.get$first(renderElements);
      t1 = mountAtIndex == null;
      if (t1)
        parentRenderElement.frameworkAppendAllFresh$1(renderElements);
      else
        parentRenderElement.frameworkInsertAllFreshAt$2(renderElements, mountAtIndex);
      if (!parentRenderElement._hasDomNode) {
        for (immediateRenderElement = firstRenderElementInNewWidgets, currentParentRenderElement = parentRenderElement; true; immediateRenderElement = currentParentRenderElement, currentParentRenderElement = $parent) {
          if (currentParentRenderElement._hasDomNode)
            break;
          $parent = currentParentRenderElement._parent;
          if ($parent == null) {
            immediateRenderElement = currentParentRenderElement;
            break;
          }
        }
        if (t1)
          _box_0.mountAtIndex = B.JSArray_methods.indexOf$1(currentParentRenderElement._childElements, immediateRenderElement);
      } else
        currentParentRenderElement = parentRenderElement;
      mountTargetDomNode = currentParentRenderElement._domNode;
      if (mountTargetDomNode == null) {
        this.resolveServices$1(this.rootContext)._debug.onException$1(new A._Exception("Unable to locate target dom node #" + currentParentRenderElement.toString$0(0) + " in HTML document"));
        return;
      }
      t1 = document.createDocumentFragment();
      t1.toString;
      t2 = temporaryRenderElement._domNode;
      t2.toString;
      t2 = J.get$children$x(t2);
      t2 = t2.get$iterator(t2);
      t3 = t2.$ti._precomputed1;
      for (; t2.moveNext$0();) {
        t4 = t2._current;
        t1.appendChild(t4 == null ? t3._as(t4) : t4).toString;
      }
      B.JSArray_methods.add$1(jobQueue._jobs, type$.void_Function._as(new A.Renderer_mountWidgets_closure(_box_0, mountTargetDomNode, t1)));
    },
    prepareWidgetActions$3$flagIterateInReverseOrder$parentRenderElement$widgetActionCallback(flagIterateInReverseOrder, parentRenderElement, widgetActionCallback) {
      var widgetActionObjects, children, t1, t2, widgetActions, t3;
      type$.List_WidgetAction_Function_RenderElement._as(widgetActionCallback);
      widgetActionObjects = A._setArrayType([], type$.JSArray_WidgetActionObject);
      children = parentRenderElement._childElements;
      $label0$0:
        for (t1 = J.get$iterator$ax(flagIterateInReverseOrder ? new A.ReversedListIterable(children, A._arrayInstanceType(children)._eval$1("ReversedListIterable<1>")) : children); t1.moveNext$0();) {
          t2 = t1.get$current();
          widgetActions = widgetActionCallback.call$1(t2);
          for (t3 = widgetActions.get$iterator(widgetActions); t3.moveNext$0();)
            B.JSArray_methods.add$1(widgetActionObjects, new A.WidgetActionObject(t2, t3.get$current()));
        }
      return widgetActionObjects;
    },
    dispatchWidgetActions$4$jobQueue$parentRenderElement$updateType$widgetActions(jobQueue, parentRenderElement, updateType, widgetActions) {
      var t1, t2, t3, t4, t5, _i, widgetActionObject, renderElement, t6, domPatch, t7, _this = this;
      type$.List_WidgetActionObject._as(widgetActions);
      for (t1 = widgetActions.length, t2 = type$.List_Widget, t3 = _this.reconciler, t4 = type$.void_Function, t5 = jobQueue._jobs, _i = 0; _i < widgetActions.length; widgetActions.length === t1 || (0, A.throwConcurrentModificationError)(widgetActions), ++_i) {
        widgetActionObject = widgetActions[_i];
        switch (widgetActionObject.widgetAction) {
          case B.WidgetAction_4:
            break;
          case B.WidgetAction_2:
            B.JSArray_methods.add$1(t5, t4._as(new A.Renderer_dispatchWidgetActions_closure(widgetActionObject.element.findClosestDomNode$0())));
            break;
          case B.WidgetAction_1:
            B.JSArray_methods.add$1(t5, t4._as(new A.Renderer_dispatchWidgetActions_closure0(widgetActionObject.element.findClosestDomNode$0())));
            break;
          case B.WidgetAction_0:
            _this.disposeWidget$2$flagPreserveTarget$renderElement(false, widgetActionObject.element);
            break;
          case B.WidgetAction_3:
            renderElement = widgetActionObject.element;
            t6 = renderElement._widget;
            t6.toString;
            domPatch = renderElement.update$3$newWidget$oldWidget$updateType(0, t6, t6, updateType);
            if (domPatch != null && renderElement._hasDomNode) {
              t7 = renderElement._domNode;
              t7.toString;
              _this.applyDomNodePatch$3$description$domNode$jobQueue(domPatch, t7, jobQueue);
            }
            if (t6.shouldUpdateWidgetChildren$2(t6, true)) {
              _this.publishUpdates$5$flagAddIfNotFound$jobQueue$parentRenderElement$updateType$updates(true, jobQueue, renderElement, updateType, t3.prepareUpdates$3$flagAddIfNotFound$parentRenderElement$widgets(true, renderElement, t2._as(renderElement.get$widgetChildren())));
              break;
            }
            break;
        }
      }
    },
    cleanRenderElement$2$jobQueue$renderElement(jobQueue, renderElement) {
      var domNode, childElements, t1, t2, t3;
      if (renderElement._hasDomNode)
        B.JSArray_methods.add$1(jobQueue._jobs, type$.void_Function._as(new A.Renderer_cleanRenderElement_closure(renderElement)));
      else {
        domNode = renderElement.findClosestDomNodeInDescendants$0();
        if (domNode != null)
          B.JSArray_methods.add$1(jobQueue._jobs, type$.void_Function._as(new A.Renderer_cleanRenderElement_closure0(domNode)));
      }
      if (renderElement._childElements.length !== 0) {
        childElements = renderElement.frameworkEjectChildRenderElements$0();
        for (t1 = childElements.$ti, t2 = new A.ListIterator(childElements, childElements.get$length(childElements), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
          t3 = t2.__internal$_current;
          this.disposeDetachedRenderElement$1(t3 == null ? t1._as(t3) : t3);
        }
      }
    },
    disposeRenderElement$2$jobQueue$renderElement(jobQueue, renderElement) {
      var childElements, t1, t2, t3, _box_0 = {},
        domNode = renderElement._domNode;
      _box_0.domNode = domNode;
      if (domNode == null)
        _box_0.domNode = renderElement.findClosestDomNodeInDescendants$0();
      B.JSArray_methods.add$1(jobQueue._jobs, type$.void_Function._as(new A.Renderer_disposeRenderElement_closure(_box_0)));
      if (renderElement._childElements.length !== 0) {
        childElements = renderElement.frameworkEjectChildRenderElements$0();
        for (t1 = childElements.$ti, t2 = new A.ListIterator(childElements, childElements.get$length(childElements), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
          t3 = t2.__internal$_current;
          this.disposeDetachedRenderElement$1(t3 == null ? t1._as(t3) : t3);
        }
      }
      renderElement.frameworkDetach$0();
      if (renderElement instanceof A.WatchfulRenderElement) {
        renderElement._isMounted = false;
        renderElement.afterUnMount$0();
      }
      this.resolveServices$1(this.rootContext);
    },
    disposeDetachedRenderElement$1(renderElement) {
      var t1, t2, _i;
      for (t1 = renderElement._childElements, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        this.disposeDetachedRenderElement$1(t1[_i]);
      if (renderElement instanceof A.WatchfulRenderElement) {
        renderElement._isMounted = false;
        renderElement.afterUnMount$0();
      }
      this.resolveServices$1(this.rootContext);
    },
    applyDomNodePatch$3$description$domNode$jobQueue(description, domNode, jobQueue) {
      var t1 = new A.Renderer_applyDomNodePatch_job(description, domNode);
      if (jobQueue != null) {
        type$.void_Function._as(t1);
        B.JSArray_methods.add$1(jobQueue._jobs, t1);
      } else
        t1.call$0();
    },
    applyDomNodePatch$2$description$domNode(description, domNode) {
      return this.applyDomNodePatch$3$description$domNode$jobQueue(description, domNode, null);
    }
  };
  A.Renderer_processWidgetUpdateObjectActionUpdate_closure.prototype = {
    call$0() {
      var parentDomNode, t2,
        t1 = this._box_0.domNode;
      if (t1 == null)
        return;
      parentDomNode = t1.parentElement;
      if (parentDomNode != null) {
        t2 = J.getInterceptor$x(parentDomNode);
        t2.insertBefore$2(parentDomNode, t1, t2.get$children(parentDomNode).$index(0, this.newMountAtIndex));
      }
    },
    $signature: 0
  };
  A.Renderer_mountWidgets_closure.prototype = {
    call$0() {
      var t3, t4, t5, _this = this,
        t1 = _this._box_0,
        t2 = t1.mountAtIndex;
      if (t2 != null && t2 >= 0) {
        t2 = _this.mountTargetDomNode;
        t3 = J.getInterceptor$x(t2);
        t4 = t3.get$children(t2);
        t4 = t4.get$length(t4);
        t5 = t1.mountAtIndex;
        if (typeof t5 !== "number")
          return A.iae(t5);
        if (t4 > t5) {
          t3.insertBefore$2(t2, _this.documentFragment, t3.get$children(t2).$index(0, t1.mountAtIndex));
          return;
        }
      }
      _this.mountTargetDomNode.appendChild(_this.documentFragment).toString;
    },
    $signature: 0
  };
  A.Renderer_dispatchWidgetActions_closure.prototype = {
    call$0() {
      J.get$classes$x(this.domNode).remove$1(0, "rad-hidden");
    },
    $signature: 0
  };
  A.Renderer_dispatchWidgetActions_closure0.prototype = {
    call$0() {
      J.get$classes$x(this.domNode).add$1(0, "rad-hidden");
    },
    $signature: 0
  };
  A.Renderer_cleanRenderElement_closure.prototype = {
    call$0() {
      var t1 = this.renderElement._domNode;
      if (t1 != null)
        J.set$innerHtml$x(t1, "");
    },
    $signature: 0
  };
  A.Renderer_cleanRenderElement_closure0.prototype = {
    call$0() {
      J.remove$0$ax(this.domNode);
    },
    $signature: 0
  };
  A.Renderer_disposeRenderElement_closure.prototype = {
    call$0() {
      var t1 = this._box_0.domNode;
      if (t1 != null)
        J.remove$0$ax(t1);
    },
    $signature: 0
  };
  A.Renderer_applyDomNodePatch_job.prototype = {
    call$0() {
      var t1 = this.description,
        attributes = t1.get$attributes(t1),
        properties = t1.get$properties();
      if (attributes.__js_helper$_length !== 0)
        attributes.forEach$1(0, new A.Renderer_applyDomNodePatch_job_closure(this.domNode));
      if (properties != null && properties.__js_helper$_length !== 0)
        properties.forEach$1(0, new A.Renderer_applyDomNodePatch_job_closure0(this.domNode));
    },
    $signature: 0
  };
  A.Renderer_applyDomNodePatch_job_closure.prototype = {
    call$2(key, value) {
      var t1;
      A._asString(key);
      A._asStringQ(value);
      t1 = this.domNode;
      if (value != null)
        t1.setAttribute(key, value);
      else
        t1.removeAttribute(key);
    },
    $signature: 28
  };
  A.Renderer_applyDomNodePatch_job_closure0.prototype = {
    call$2(key, value) {
      var t1;
      A._asString(key);
      A._asStringQ(value);
      switch (key) {
        case "value":
          t1 = this.domNode;
          if (type$.InputElement._is(t1)) {
            B.InputElement_methods.set$value(t1, value == null ? "" : value);
            break;
          }
          if (type$.TextAreaElement._is(t1))
            B.TextAreaElement_methods.set$value(t1, value == null ? "" : value);
          break;
        case "innerText":
          t1 = value == null ? "" : value;
          this.domNode.innerText = t1;
          break;
        case "innerHtml":
          J.setInnerHtml$2$validator$x(this.domNode, value, B.C_DumbNodeValidator);
          break;
      }
    },
    $signature: 28
  };
  A._Renderer_Object_ServicesResolver.prototype = {};
  A.WidgetActionObject.prototype = {};
  A.WidgetUpdateObject.prototype = {};
  A.WidgetUpdateObjectActionAdd.prototype = {};
  A.WidgetUpdateObjectActionAddAllWithoutClean.prototype = {};
  A.WidgetUpdateObjectActionUpdate.prototype = {};
  A.WidgetUpdateObjectActionDisposeMultiple.prototype = {};
  A.WidgetUpdateObjectActionCleanParent.prototype = {};
  A.Service.prototype = {};
  A._Service_Object_ServicesResolver.prototype = {};
  A.DebugService.prototype = {
    get$onException() {
      var t1 = this._onException;
      t1.toString;
      return t1;
    },
    presentException$1(exception) {
      throw A.wrapException(exception);
    },
    set$_onException(_onException) {
      this._onException = type$.nullable_void_Function_Exception._as(_onException);
    },
    onException$1(arg0) {
      return this.get$onException().call$1(arg0);
    }
  };
  A.EmittedEvent.prototype = {
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this._rawEvent) + "'";
    }
  };
  A.EventsService.prototype = {
    setupEventListeners$1(eventListeners) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      type$.Map_of_DomEventType_and_nullable_void_Function_EmittedEvent._as(eventListeners);
      for (t1 = eventListeners.get$keys(eventListeners), t1 = t1.get$iterator(t1), t2 = this.rootElement, t3 = this._eventSubscriptions, t4 = this.get$_events_service$_handle(), t5 = type$.void_Function_MouseEvent, t6 = type$.MouseEvent, t7 = type$.void_Function_KeyboardEvent, t8 = type$.KeyboardEvent, t9 = type$.void_Function_Event, t10 = type$.Event; t1.moveNext$0();) {
        t11 = t1.get$current();
        if (eventListeners.$index(0, t11) == null)
          continue;
        if (t3.containsKey$1(0, t11))
          continue;
        t12 = t2._domNode;
        t12.toString;
        switch (t11) {
          case B.DomEventType_click_click:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "click", t5._as(t4), true, t6));
            break;
          case B.DomEventType_dblclick_doubleClick:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "dblclick", t9._as(t4), true, t10));
            break;
          case B.DomEventType_change_change:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "change", t9._as(t4), true, t10));
            break;
          case B.DomEventType_input_input:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "input", t9._as(t4), true, t10));
            break;
          case B.DomEventType_submit_submit:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "submit", t9._as(t4), true, t10));
            break;
          case B.DomEventType_keyup_keyUp:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "keyup", t7._as(t4), true, t8));
            break;
          case B.DomEventType_keydown_keyDown:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "keydown", t7._as(t4), true, t8));
            break;
          case B.DomEventType_keypress_keyPress:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "keypress", t7._as(t4), true, t8));
            break;
          case B.DomEventType_drag_drag:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "drag", t5._as(t4), true, t6));
            break;
          case B.DomEventType_dragend_dragEnd:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "dragend", t5._as(t4), true, t6));
            break;
          case B.DomEventType_dragenter_dragEnter:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "dragenter", t5._as(t4), true, t6));
            break;
          case B.DomEventType_dragleave_dragLeave:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "dragleave", t5._as(t4), true, t6));
            break;
          case B.DomEventType_dragover_dragOver:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "dragover", t5._as(t4), true, t6));
            break;
          case B.DomEventType_dragstart_dragStart:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "dragstart", t5._as(t4), true, t6));
            break;
          case B.DomEventType_drop_drop:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "drop", t5._as(t4), true, t6));
            break;
          case B.DomEventType_mousedown_mouseDown:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "mousedown", t5._as(t4), true, t6));
            break;
          case B.DomEventType_mouseenter_mouseEnter:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "mouseenter", t5._as(t4), true, t6));
            break;
          case B.DomEventType_mouseleave_mouseLeave:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "mouseleave", t5._as(t4), true, t6));
            break;
          case B.DomEventType_mousemove_mouseMove:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "mousemove", t5._as(t4), true, t6));
            break;
          case B.DomEventType_mouseover_mouseOver:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "mouseover", t5._as(t4), true, t6));
            break;
          case B.DomEventType_mouseout_mouseOut:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "mouseout", t5._as(t4), true, t6));
            break;
          case B.DomEventType_mouseup_mouseUp:
            t3.$indexSet(0, t11, A._EventStreamSubscription$(t12, "mouseup", t5._as(t4), true, t6));
            break;
        }
      }
    },
    _events_service$_handle$1($event) {
      this._dispatch$1(new A.EmittedEvent($event));
    },
    _dispatch$1($event) {
      var eventType,
        t1 = $event._rawEvent,
        targetDomNode = J.get$target$x(t1);
      if (targetDomNode != null && type$.Element._is(targetDomNode)) {
        t1 = t1.type;
        t1.toString;
        eventType = A.fnMapEventTypeToDomEventType(t1);
        if (eventType == null)
          return;
        this._dispatchEventToListeners$3$event$eventType$listeners($event, eventType, this._collectListeners$2$eventType$targetDomNodePath(eventType, this._getDomNodePath$1(targetDomNode)));
      }
    },
    _dispatchEventToListeners$3$event$eventType$listeners($event, eventType, listeners) {
      var isEventAbsorbable, t1, t2, _i, listener;
      type$.List_of_void_Function_EmittedEvent._as(listeners);
      switch (eventType) {
        case B.DomEventType_click_click:
        case B.DomEventType_dblclick_doubleClick:
          isEventAbsorbable = false;
          break;
        case B.DomEventType_change_change:
        case B.DomEventType_input_input:
        case B.DomEventType_submit_submit:
        case B.DomEventType_keyup_keyUp:
        case B.DomEventType_keydown_keyDown:
        case B.DomEventType_keypress_keyPress:
        case B.DomEventType_drag_drag:
        case B.DomEventType_dragend_dragEnd:
        case B.DomEventType_dragenter_dragEnter:
        case B.DomEventType_dragleave_dragLeave:
        case B.DomEventType_dragover_dragOver:
        case B.DomEventType_dragstart_dragStart:
        case B.DomEventType_drop_drop:
        case B.DomEventType_mousedown_mouseDown:
        case B.DomEventType_mouseenter_mouseEnter:
        case B.DomEventType_mouseleave_mouseLeave:
        case B.DomEventType_mousemove_mouseMove:
        case B.DomEventType_mouseover_mouseOver:
        case B.DomEventType_mouseout_mouseOut:
        case B.DomEventType_mouseup_mouseUp:
          isEventAbsorbable = true;
          break;
        default:
          isEventAbsorbable = false;
      }
      for (t1 = listeners.length, t2 = $event._rawEvent, _i = 0; _i < listeners.length; listeners.length === t1 || (0, A.throwConcurrentModificationError)(listeners), ++_i) {
        listener = listeners[_i];
        if (isEventAbsorbable) {
          $event._isPropagationStopped = true;
          t2.stopImmediatePropagation();
        }
        listener.call$1($event);
        if ($event._isPropagationStopped)
          break;
      }
    },
    _collectListeners$2$eventType$targetDomNodePath(eventType, targetDomNodePath) {
      var t1, capturingCallbacks, bubblingCallbacks, collectEventListeners, currentElement, index, t2;
      type$.List_int._as(targetDomNodePath);
      t1 = type$.JSArray_of_void_Function_EmittedEvent;
      capturingCallbacks = A._setArrayType([], t1);
      bubblingCallbacks = A._setArrayType([], t1);
      collectEventListeners = new A.EventsService__collectListeners_collectEventListeners(eventType, capturingCallbacks, bubblingCallbacks);
      currentElement = this.rootElement;
      for (; t1 = targetDomNodePath.length, t1 !== 0;) {
        if (0 >= t1)
          return A.ioore(targetDomNodePath, -1);
        index = targetDomNodePath.pop();
        t1 = currentElement._childElements;
        t2 = t1.length;
        if (index >= t2)
          break;
        if (!(index >= 0))
          return A.ioore(t1, index);
        currentElement = t1[index];
        collectEventListeners.call$1(currentElement);
        for (; !currentElement._hasDomNode;) {
          t1 = currentElement._childElements;
          if (t1.length === 0)
            break;
          currentElement = B.JSArray_methods.get$first(t1);
          collectEventListeners.call$1(currentElement);
        }
      }
      for (; t1 = bubblingCallbacks.length, t1 !== 0;) {
        if (0 >= t1)
          return A.ioore(bubblingCallbacks, -1);
        B.JSArray_methods.add$1(capturingCallbacks, bubblingCallbacks.pop());
      }
      return capturingCallbacks;
    },
    _getDomNodePath$1(domNode) {
      var t2, ancestor0,
        path = A._setArrayType([], type$.JSArray_int),
        ancestor = domNode.parentElement,
        t1 = this.rootElement.appTargetId,
        previousAncestor = domNode;
      while (true) {
        if (ancestor != null) {
          t2 = previousAncestor.id;
          t2.toString;
          t2 = t2 !== t1;
        } else
          t2 = false;
        if (!t2)
          break;
        t2 = ancestor.childNodes;
        t2.toString;
        B.JSArray_methods.add$1(path, B.NodeList_methods.indexOf$1(t2, previousAncestor));
        ancestor0 = ancestor.parentElement;
        previousAncestor = ancestor;
        ancestor = ancestor0;
      }
      return path;
    }
  };
  A.EventsService__collectListeners_collectEventListeners.prototype = {
    call$1(fromElement) {
      var matchedBubblingListener,
        bubblingListeners = fromElement._widget.get$widgetEventListeners(),
        t1 = this.eventType;
      B.Map_empty.$index(0, t1);
      matchedBubblingListener = bubblingListeners.$index(0, t1);
      if (matchedBubblingListener != null)
        B.JSArray_methods.add$1(this.bubblingCallbacks, matchedBubblingListener);
    },
    $signature: 67
  };
  A.RouterService.prototype = {
    getNavigatorLink$1($navigator) {
      var t1 = type$.NavigatorLink._as(this._navigatorLinks.$index(0, $navigator));
      return t1;
    },
    protectedSegments$1($navigator) {
      $navigator.get$state($navigator);
      this.getNavigatorLink$1($navigator);
    },
    _onPopState$1($event) {
      var $location, entry, navigatorState, navigatorLink, t1, t2, exception, _this = this;
      type$.PopStateEvent._as($event);
      try {
        t1 = $.Window__instance;
        (t1 == null ? $.Window__instance = new A.Window() : t1)._delegate.toString;
        t1 = type$.Location;
        t2 = t1._as(window.location).href;
        t2.toString;
        $location = t2;
        _this.resolveServices$1(_this.rootElement);
        entry = _this._routerStack.entries.$index(0, A._asString($location));
        if (entry == null) {
          _this.resolveServices$1(_this.rootElement);
          t2 = $.Window__instance;
          (t2 == null ? $.Window__instance = new A.Window() : t2)._delegate.toString;
          t1._as(window.location).reload();
        } else {
          t1 = entry.navigator;
          navigatorState = t1.get$state(t1);
          navigatorLink = _this.getNavigatorLink$1(entry.navigator);
        }
      } catch (exception) {
        t1 = $.Window__instance;
        (t1 == null ? $.Window__instance = new A.Window() : t1)._delegate.toString;
        type$.Location._as(window.location).reload();
      }
    },
    _getCurrentPath$0() {
      var t2, currentPath, hashPart,
        t1 = $.Window__instance;
      if (t1 == null) {
        t1 = $.Window__instance = new A.Window();
        t2 = t1;
      } else
        t2 = t1;
      t1._delegate.toString;
      t1 = type$.Location;
      currentPath = t1._as(window.location).pathname;
      if (currentPath == null)
        currentPath = "";
      t2._delegate.toString;
      t1 = t1._as(window.location).hash;
      t1.toString;
      if (B.JSString_methods.startsWith$1(t1, "#"))
        hashPart = B.JSString_methods.substring$1(t1, 1);
      else
        hashPart = t1;
      currentPath += hashPart;
      return currentPath;
    },
    _prepareSegments$1(segments) {
      var preparedSegs, t1, _i, segment;
      type$.List_String._as(segments);
      preparedSegs = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.insert$2(segments, 0, "#");
      for (t1 = segments.length, _i = 0; _i < segments.length; segments.length === t1 || (0, A.throwConcurrentModificationError)(segments), ++_i) {
        segment = segments[_i];
        if (J.get$length$asx(segment) !== 0)
          B.JSArray_methods.add$1(preparedSegs, segment);
      }
      return preparedSegs;
    },
    _proccessRouterRequest$1(request) {
      var $name, values, $navigator, updateHistory, t1, t2, t3, preparedSegs, encodedValues, historyEntry, _this = this;
      type$.RouterRequest._as(request);
      $name = request.get$name(request);
      values = request.get$values(request);
      $navigator = request.get$navigator(request);
      updateHistory = request.get$updateHistory();
      if (request.get$isReplacement()) {
        t1 = $.Window__instance;
        (t1 == null ? $.Window__instance = new A.Window() : t1)._delegate.toString;
        t1 = type$.Location;
        t2 = t1._as(window.location).href;
        t2.toString;
        t3 = _this._routerStack;
        t3.entries.remove$1(0, t2);
        preparedSegs = _this._prepareSegments$1(_this.protectedSegments$1($navigator));
        encodedValues = A.fnEncodeKeyValueMap(values);
        if (encodedValues.length !== 0)
          encodedValues = "/" + encodedValues;
        historyEntry = B.JSArray_methods.join$1(preparedSegs, "/") + "/" + A.S($name) + encodedValues;
        if (_this._getCurrentPath$0().length !== 0)
          historyEntry = !B.JSString_methods.startsWith$1(historyEntry, "/") ? "/" + historyEntry : historyEntry;
        t2 = $.Window__instance;
        (t2 == null ? $.Window__instance = new A.Window() : t2)._delegate.toString;
        t2 = window.history;
        t2.toString;
        t2.replaceState(new A._StructuredCloneDart2Js([], []).walk$1(_this.rootElement.appTargetId), "", historyEntry);
        t2 = $.Window__instance;
        (t2 == null ? $.Window__instance = new A.Window() : t2)._delegate.toString;
        t1 = t1._as(window.location).href;
        t1.toString;
        t3.push$1(new A.RouterStackEntry($name, values, t1, $navigator));
      } else {
        if (updateHistory) {
          preparedSegs = _this._prepareSegments$1(_this.protectedSegments$1($navigator));
          encodedValues = A.fnEncodeKeyValueMap(values);
          if (encodedValues.length !== 0)
            encodedValues = "/" + encodedValues;
          historyEntry = B.JSArray_methods.join$1(preparedSegs, "/") + "/" + A.S($name) + encodedValues;
          if (_this._getCurrentPath$0().length !== 0)
            historyEntry = !B.JSString_methods.startsWith$1(historyEntry, "/") ? "/" + historyEntry : historyEntry;
          t1 = $.Window__instance;
          (t1 == null ? $.Window__instance = new A.Window() : t1)._delegate.toString;
          t1 = window.history;
          t1.toString;
          t1.pushState(new A._StructuredCloneDart2Js([], []).walk$1(_this.rootElement.appTargetId), "", historyEntry);
          $navigator.get$state($navigator);
          _this.getNavigatorLink$1($navigator);
        }
        t1 = $.Window__instance;
        (t1 == null ? $.Window__instance = new A.Window() : t1)._delegate.toString;
        t1 = type$.Location._as(window.location).href;
        t1.toString;
        _this._routerStack.push$1(new A.RouterStackEntry($name, values, t1, $navigator));
      }
    },
    set$_routerRequestsStream(_routerRequestsStream) {
      this._routerRequestsStream = type$.nullable_StreamController_RouterRequest._as(_routerRequestsStream);
    }
  };
  A.RouterStack.prototype = {
    push$1(entry) {
      this.entries.$indexSet(0, entry.location, entry);
      return entry;
    }
  };
  A.RouterStackEntry.prototype = {};
  A.SchedulerTask.prototype = {};
  A.SchedulerService.prototype = {
    addTask$1(task) {
      var t1 = this._tasksStream;
      if (t1 != null)
        t1.add$1(0, task);
    },
    set$_tasksStream(_tasksStream) {
      this._tasksStream = type$.nullable_StreamController_SchedulerTask._as(_tasksStream);
    }
  };
  A.StimulateListenerTask.prototype = {
    get$taskType() {
      return B.SchedulerTaskType_5;
    }
  };
  A.WidgetsBuildTask.prototype = {
    get$taskType() {
      return B.SchedulerTaskType_0;
    }
  };
  A.WidgetsUpdateTask.prototype = {
    get$taskType() {
      return B.SchedulerTaskType_1;
    }
  };
  A.Services.prototype = {};
  A.ServicesRegistry.prototype = {};
  A.ServicesResolver.prototype = {
    resolveServices$1(context) {
      var t1 = this.ServicesResolver__services;
      if (t1 == null) {
        t1 = $.ServicesRegistry__instance;
        t1 = (t1 == null ? $.ServicesRegistry__instance = new A.ServicesRegistry(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Services)) : t1)._services_registry$_services.$index(0, context.appTargetId);
        t1.toString;
        t1 = this.ServicesResolver__services = t1;
      }
      return t1;
    }
  };
  A.ChangeNotifier.prototype = {
    addListener$1(listener) {
      var t1, t2, t3, newListeners, i, _this = this;
      type$.void_Function._as(listener);
      t1 = _this._count;
      t2 = _this._change_notifier$_listeners.length;
      if (t1 === t2) {
        t3 = type$.nullable_void_Function;
        if (t1 === 0)
          _this.set$_change_notifier$_listeners(A.List_List$filled(1, null, false, t3));
        else {
          newListeners = A.List_List$filled(t2 * 2, null, false, t3);
          for (i = 0; i < _this._count; ++i) {
            t1 = _this._change_notifier$_listeners;
            if (!(i < t1.length))
              return A.ioore(t1, i);
            B.JSArray_methods.$indexSet(newListeners, i, t1[i]);
          }
          _this.set$_change_notifier$_listeners(newListeners);
        }
      }
      t1 = _this._change_notifier$_listeners;
      (t1 && B.JSArray_methods).$indexSet(t1, _this._count++, listener);
    },
    notifyListeners$0() {
      var i, t2, exception, newLength, newListeners, newIndex, listener, newIndex0, swapIndex, t3, _this = this,
        t1 = _this._count;
      if (t1 === 0)
        return;
      ++_this._notificationCallStackDepth;
      i = 0;
      while (true) {
        t2 = i;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (!(t2 < t1))
          break;
        try {
          t2 = _this._change_notifier$_listeners;
          t2 = (t2 && B.JSArray_methods).$index(t2, i);
          if (t2 != null)
            t2.call$0();
        } catch (exception) {
          A.getTraceFromException(exception);
          t1 = A.Exception_Exception("Error occurred while dispatching notificaitons");
          throw A.wrapException(t1);
        }
        t2 = i;
        if (typeof t2 !== "number")
          return t2.$add();
        i = t2 + 1;
      }
      if (--_this._notificationCallStackDepth === 0 && _this._reentrantlyRemovedListeners > 0) {
        newLength = _this._count - _this._reentrantlyRemovedListeners;
        if (newLength * 2 <= _this._change_notifier$_listeners.length) {
          newListeners = A.List_List$filled(newLength, null, false, type$.nullable_void_Function);
          for (newIndex = 0, i = 0; i < _this._count; ++i) {
            t1 = _this._change_notifier$_listeners;
            if (!(i < t1.length))
              return A.ioore(t1, i);
            listener = t1[i];
            if (listener != null) {
              newIndex0 = newIndex + 1;
              B.JSArray_methods.$indexSet(newListeners, newIndex, listener);
              newIndex = newIndex0;
            }
          }
          _this.set$_change_notifier$_listeners(newListeners);
        } else
          for (i = 0; i < newLength; ++i) {
            t1 = _this._change_notifier$_listeners;
            t2 = t1.length;
            if (!(i < t2))
              return A.ioore(t1, i);
            if (t1[i] == null) {
              swapIndex = i + 1;
              while (true) {
                if (!(swapIndex < t2))
                  return A.ioore(t1, swapIndex);
                t3 = t1[swapIndex];
                if (!(t3 == null))
                  break;
                ++swapIndex;
              }
              t1[i] = t3;
              B.JSArray_methods.$indexSet(t1, swapIndex, null);
            }
          }
        _this._reentrantlyRemovedListeners = 0;
        _this._count = newLength;
      }
    },
    set$_change_notifier$_listeners(_listeners) {
      this._change_notifier$_listeners = type$.List_of_nullable_void_Function._as(_listeners);
    }
  };
  A.ValueNotifier.prototype = {
    set$value(_, newValue) {
      var _this = this;
      _this.$ti._precomputed1._as(newValue);
      if (_this._value === newValue)
        return;
      _this.set$_value(newValue);
      _this.notifyListeners$0();
    },
    toString$0(_) {
      return A.getRuntimeType(this).toString$0(0) + "}#" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(A.Primitives_objectHashCode(this) & 1048575, 16), 5, "0") + "(" + this._value + ")";
    },
    set$_value(_value) {
      this._value = this.$ti._precomputed1._as(_value);
    }
  };
  A.HTMLInputBase.prototype = {
    get$widgetEventListeners() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal([B.DomEventType_click_click, _this.onClick, B.DomEventType_input_input, _this.onInput, B.DomEventType_change_change, _this.onChange, B.DomEventType_keyup_keyUp, _this.onKeyUp, B.DomEventType_keydown_keyDown, _this.onKeyDown, B.DomEventType_keypress_keyPress, _this.onKeyPress], type$.DomEventType, type$.nullable_void_Function_EmittedEvent);
    },
    get$correspondingTag() {
      return B.DomTagType_input_input;
    },
    shouldUpdateWidget$1(oldWidget) {
      var t1;
      type$.HTMLInputBase._as(oldWidget);
      if (this.type === oldWidget.type)
        t1 = this.valueProperty !== oldWidget.valueProperty || this.super$HTMLWidgetBase$shouldUpdateWidget(oldWidget);
      else
        t1 = true;
      return t1;
    },
    createRenderElement$1($parent) {
      var t2, t3, t4, _this = this,
        t1 = _this.child;
      if (t1 == null) {
        t1 = _this.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      t2 = A._setArrayType([], type$.JSArray_RenderElement);
      t3 = A.getRuntimeType(_this).toString$0(0);
      t4 = $parent._services;
      t4.toString;
      return new A.HTMLInputBaseRenderElement(t1, _this.key, _this, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    }
  };
  A.HTMLInputBaseRenderElement.prototype = {
    render$1$widget(widget) {
      var domNodePatch;
      type$.HTMLInputBase._as(widget);
      domNodePatch = this.super$HTMLRenderElementBase$render(widget);
      A._extendAttributes0(domNodePatch.attributes, null, widget);
      A._extendProperties(null, domNodePatch.properties, widget);
      return domNodePatch;
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var domNodePatch,
        t1 = type$.HTMLInputBase;
      t1._as(oldWidget);
      t1._as(newWidget);
      domNodePatch = this.super$HTMLRenderElementBase$update(0, newWidget, oldWidget, updateType);
      A._extendAttributes0(domNodePatch.attributes, oldWidget, newWidget);
      A._extendProperties(oldWidget, domNodePatch.properties, newWidget);
      return domNodePatch;
    }
  };
  A.HTMLWidgetBase.prototype = {
    get$widgetEventListeners() {
      var t1 = this.onClick;
      if (t1 == null)
        return B.Map_empty;
      return A.LinkedHashMap_LinkedHashMap$_literal([B.DomEventType_click_click, t1], type$.DomEventType, type$.nullable_void_Function_EmittedEvent);
    },
    shouldUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.HTMLWidgetBase._as(oldWidget);
      if (_this.id == oldWidget.id)
        if (_this.style == oldWidget.style)
          if (_this.className == oldWidget.className)
            t1 = _this.innerText != oldWidget.innerText || !A.fnIsKeyValueMapEqual(_this.additionalAttributes, oldWidget.additionalAttributes);
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    createRenderElement$1($parent) {
      return A.HTMLRenderElementBase$(this, $parent);
    }
  };
  A.HTMLRenderElementBase.prototype = {
    get$widgetChildren() {
      return this._widgetChildren;
    },
    render$1$widget(widget) {
      type$.HTMLWidgetBase._as(widget);
      return new A.DomNodePatchFillable(A._prepareAttributes(null, widget), A._prepareProperties(null, widget));
    },
    afterWidgetRebind$3$newWidget$oldWidget$updateType(newWidget, oldWidget, updateType) {
      var t1;
      type$.HTMLWidgetBase._as(newWidget);
      t1 = newWidget.child;
      if (t1 == null) {
        t1 = newWidget.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      this.set$_widgetChildren(t1);
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var t1 = type$.HTMLWidgetBase;
      t1._as(oldWidget);
      t1._as(newWidget);
      return new A.DomNodePatchFillable(A._prepareAttributes(oldWidget, newWidget), A._prepareProperties(oldWidget, newWidget));
    },
    set$_widgetChildren(_widgetChildren) {
      this._widgetChildren = type$.List_Widget._as(_widgetChildren);
    }
  };
  A.Widget.prototype = {
    get$widgetEventListeners() {
      return B.Map_empty;
    },
    shouldUpdateWidgetChildren$2(oldWidget, shouldUpdateWidget) {
      return true;
    }
  };
  A.InputText.prototype = {};
  A.Anchor.prototype = {
    get$correspondingTag() {
      return B.DomTagType_a_anchor;
    },
    shouldUpdateWidget$1(oldWidget) {
      var t1;
      type$.Anchor._as(oldWidget);
      if (this.href === oldWidget.href)
        if (this.target == oldWidget.target)
          t1 = this.super$HTMLWidgetBase$shouldUpdateWidget(oldWidget);
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    createRenderElement$1($parent) {
      var t2, t3, t4, _this = this,
        t1 = _this.child;
      if (t1 == null) {
        t1 = _this.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      t2 = A._setArrayType([], type$.JSArray_RenderElement);
      t3 = A.getRuntimeType(_this).toString$0(0);
      t4 = $parent._services;
      t4.toString;
      return new A.AnchorRenderElement(t1, _this.key, _this, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    }
  };
  A.AnchorRenderElement.prototype = {
    render$1$widget(widget) {
      var domNodePatch;
      type$.Anchor._as(widget);
      domNodePatch = this.super$HTMLRenderElementBase$render(widget);
      A._extendAttributes4(domNodePatch.attributes, null, widget);
      return domNodePatch;
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var domNodePatch,
        t1 = type$.Anchor;
      t1._as(oldWidget);
      t1._as(newWidget);
      domNodePatch = this.super$HTMLRenderElementBase$update(0, newWidget, oldWidget, updateType);
      A._extendAttributes4(domNodePatch.attributes, oldWidget, newWidget);
      return domNodePatch;
    }
  };
  A.Button.prototype = {
    get$correspondingTag() {
      return B.DomTagType_button_button;
    },
    shouldUpdateWidget$1(oldWidget) {
      var t1;
      type$.Button._as(oldWidget);
      t1 = this.super$HTMLWidgetBase$shouldUpdateWidget(oldWidget);
      return t1;
    },
    createRenderElement$1($parent) {
      var t2, t3, t4, _this = this,
        t1 = _this.child;
      if (t1 == null) {
        t1 = _this.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      t2 = A._setArrayType([], type$.JSArray_RenderElement);
      t3 = A.getRuntimeType(_this).toString$0(0);
      t4 = $parent._services;
      t4.toString;
      return new A.ButtonRenderElement(t1, _this.key, _this, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    }
  };
  A.ButtonRenderElement.prototype = {
    render$1$widget(widget) {
      var domNodePatch;
      type$.Button._as(widget);
      domNodePatch = this.super$HTMLRenderElementBase$render(widget);
      A._extendAttributes(domNodePatch.attributes, null, widget);
      return domNodePatch;
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var domNodePatch,
        t1 = type$.Button;
      t1._as(oldWidget);
      t1._as(newWidget);
      domNodePatch = this.super$HTMLRenderElementBase$update(0, newWidget, oldWidget, updateType);
      A._extendAttributes(domNodePatch.attributes, oldWidget, newWidget);
      return domNodePatch;
    }
  };
  A.Division.prototype = {
    get$correspondingTag() {
      return B.DomTagType_div_division;
    }
  };
  A.Heading1.prototype = {
    get$correspondingTag() {
      return B.DomTagType_h1_heading1;
    }
  };
  A.Heading3.prototype = {
    get$correspondingTag() {
      return B.DomTagType_h3_heading3;
    }
  };
  A.Image.prototype = {
    get$correspondingTag() {
      return B.DomTagType_img_image;
    },
    shouldUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.Image._as(oldWidget);
      if (_this.src === oldWidget.src)
        t1 = _this.width !== oldWidget.width || _this.height !== oldWidget.height || _this.super$HTMLWidgetBase$shouldUpdateWidget(oldWidget);
      else
        t1 = true;
      return t1;
    },
    createRenderElement$1($parent) {
      var t2, t3, t4, _this = this,
        t1 = _this.child;
      if (t1 == null) {
        t1 = _this.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      t2 = A._setArrayType([], type$.JSArray_RenderElement);
      t3 = A.getRuntimeType(_this).toString$0(0);
      t4 = $parent._services;
      t4.toString;
      return new A.ImageRenderElement(t1, _this.key, _this, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    }
  };
  A.ImageRenderElement.prototype = {
    render$1$widget(widget) {
      var domNodePatch;
      type$.Image._as(widget);
      domNodePatch = this.super$HTMLRenderElementBase$render(widget);
      A._extendAttributes3(domNodePatch.attributes, null, widget);
      return domNodePatch;
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var domNodePatch,
        t1 = type$.Image;
      t1._as(oldWidget);
      t1._as(newWidget);
      domNodePatch = this.super$HTMLRenderElementBase$update(0, newWidget, oldWidget, updateType);
      A._extendAttributes3(domNodePatch.attributes, oldWidget, newWidget);
      return domNodePatch;
    }
  };
  A.Label.prototype = {
    get$correspondingTag() {
      return B.DomTagType_label_label;
    },
    shouldUpdateWidget$1(oldWidget) {
      type$.Label._as(oldWidget);
      return this.forAttribute !== oldWidget.forAttribute || this.super$HTMLWidgetBase$shouldUpdateWidget(oldWidget);
    },
    createRenderElement$1($parent) {
      var t2, t3, t4, _this = this,
        t1 = _this.child;
      if (t1 == null) {
        t1 = _this.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      t2 = A._setArrayType([], type$.JSArray_RenderElement);
      t3 = A.getRuntimeType(_this).toString$0(0);
      t4 = $parent._services;
      t4.toString;
      return new A.LabelRenderElement(t1, _this.key, _this, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    }
  };
  A.LabelRenderElement.prototype = {
    render$1$widget(widget) {
      var domNodePatch;
      type$.Label._as(widget);
      domNodePatch = this.super$HTMLRenderElementBase$render(widget);
      A._extendAttributes1(domNodePatch.attributes, null, widget);
      return domNodePatch;
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var domNodePatch,
        t1 = type$.Label;
      t1._as(oldWidget);
      t1._as(newWidget);
      domNodePatch = this.super$HTMLRenderElementBase$update(0, newWidget, oldWidget, updateType);
      A._extendAttributes1(domNodePatch.attributes, oldWidget, newWidget);
      return domNodePatch;
    }
  };
  A.ListItem.prototype = {
    get$correspondingTag() {
      return B.DomTagType_li_listItem;
    },
    shouldUpdateWidget$1(oldWidget) {
      var t1 = this.super$HTMLWidgetBase$shouldUpdateWidget(type$.ListItem._as(oldWidget));
      return t1;
    },
    createRenderElement$1($parent) {
      var t2, t3, t4, _this = this,
        t1 = _this.child;
      if (t1 == null) {
        t1 = _this.children;
        if (t1 == null)
          t1 = B.List_empty0;
      } else
        t1 = A._setArrayType([t1], type$.JSArray_Widget);
      t2 = A._setArrayType([], type$.JSArray_RenderElement);
      t3 = A.getRuntimeType(_this).toString$0(0);
      t4 = $parent._services;
      t4.toString;
      return new A.ListItemRenderElement(t1, _this.key, _this, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    }
  };
  A.ListItemRenderElement.prototype = {
    render$1$widget(widget) {
      var domNodePatch;
      type$.ListItem._as(widget);
      domNodePatch = this.super$HTMLRenderElementBase$render(widget);
      A._extendAttributes2(domNodePatch.attributes, null, widget);
      return domNodePatch;
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var domNodePatch,
        t1 = type$.ListItem;
      t1._as(oldWidget);
      t1._as(newWidget);
      domNodePatch = this.super$HTMLRenderElementBase$update(0, newWidget, oldWidget, updateType);
      A._extendAttributes2(domNodePatch.attributes, oldWidget, newWidget);
      return domNodePatch;
    }
  };
  A.Paragraph.prototype = {
    get$correspondingTag() {
      return B.DomTagType_p_paragraph;
    }
  };
  A.Span.prototype = {
    get$correspondingTag() {
      return B.DomTagType_span_span;
    }
  };
  A.UnOrderedList.prototype = {
    get$correspondingTag() {
      return B.DomTagType_ul_unOrderedList;
    }
  };
  A.InheritedWidget.prototype = {
    get$correspondingTag() {
      return null;
    },
    shouldUpdateWidget$1(oldWidget) {
      return true;
    },
    createRenderElement$1($parent) {
      var t1 = A.HashSet_HashSet(type$.RenderElement),
        t2 = A._setArrayType([], type$.JSArray_RenderElement),
        t3 = A.getRuntimeType(this).toString$0(0),
        t4 = $parent._services;
      t4.toString;
      return new A.InheritedRenderElement(t1, this.key, this, t3, null, false, $parent.appTargetId, t4, $parent, t2);
    }
  };
  A.InheritedRenderElement.prototype = {
    get$widgetChildren() {
      var t1 = this._widget;
      t1.toString;
      type$.InheritedWidget._as(t1);
      return A._setArrayType([B.Landing_null], type$.JSArray_Widget);
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var t1 = type$.InheritedWidget;
      t1._as(oldWidget);
      t1._as(newWidget).$ti._as(oldWidget);
      return null;
    }
  };
  A.ListView.prototype = {
    get$correspondingTag() {
      return B.DomTagType_div_division;
    },
    shouldUpdateWidget$1(oldWidget) {
      var t1;
      type$.ListView._as(oldWidget);
      if (this.style === oldWidget.style)
        t1 = false;
      else
        t1 = true;
      return t1;
    },
    shouldUpdateWidgetChildren$2(oldWidget, shouldUpdateWidget) {
      return true;
    },
    createRenderElement$1($parent) {
      var t1 = A._setArrayType([], type$.JSArray_RenderElement),
        t2 = A.getRuntimeType(this).toString$0(0),
        t3 = $parent._services;
      t3.toString;
      return new A.ListViewRenderElement(this.key, this, t2, null, false, $parent.appTargetId, t3, $parent, t1);
    }
  };
  A.ListViewRenderElement.prototype = {
    get$widgetChildren() {
      var t1 = this._widget;
      t1.toString;
      return type$.ListView._as(t1).children;
    },
    render$1$widget(widget) {
      return new A.DomNodePatch(A._prepareAttributes0(null, type$.ListView._as(widget)));
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      var t1 = type$.ListView;
      return new A.DomNodePatch(A._prepareAttributes0(t1._as(oldWidget), t1._as(newWidget)));
    }
  };
  A.StatefulWidget.prototype = {
    get$correspondingTag() {
      return null;
    },
    shouldUpdateWidget$1(oldWidget) {
      return true;
    },
    createRenderElement$1($parent) {
      var t1 = $.$get$ChangeNotifier__emptyListeners(),
        t2 = type$.ValueNotifier_String,
        t3 = A._setArrayType([], type$.JSArray_RenderElement),
        t4 = A.getRuntimeType(this).toString$0(0),
        t5 = $parent._services;
      t5.toString;
      return new A.StatefulRenderElement(new A._RoomSignalsClientViewState(new A.ValueNotifier("", t1, t2), new A.ValueNotifier("", t1, t2), new A.ValueNotifier("", t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_$RoomMessageMixin)), this.key, this, t4, null, false, $parent.appTargetId, t5, $parent, t3);
    }
  };
  A.StatefulRenderElement.prototype = {
    get$widgetChildren() {
      return A._setArrayType([this.state.build$1(this)], type$.JSArray_Widget);
    },
    init$0() {
      var t1 = this.state,
        t2 = this._widget;
      t2.toString;
      t1.set$_stateful_widget$_widget(A._instanceType(t1)._eval$1("State.T")._as(t2));
      t1._stateful_widget$_element = this;
      t1.initState$0();
    },
    afterWidgetRebind$3$newWidget$oldWidget$updateType(newWidget, oldWidget, updateType) {
      var t2,
        t1 = type$.StatefulWidget;
      t1._as(newWidget);
      t1._as(oldWidget);
      t1 = this.state;
      t2 = A._instanceType(t1)._eval$1("State.T");
      t1.set$_stateful_widget$_widget(t2._as(newWidget));
      t2._as(t2._as(oldWidget));
    },
    update$3$newWidget$oldWidget$updateType(_, newWidget, oldWidget, updateType) {
      return null;
    },
    afterMount$0() {
      return null;
    },
    afterUnMount$0() {
      var t1 = this.state;
      A._lateReadCheck(t1.___RoomSignalsClientViewState_client, "client").dispose$0();
      t1.super$State$dispose();
      return null;
    }
  };
  A.State.prototype = {
    initState$0() {
    },
    dispose$0() {
    },
    setState$1(callable) {
      var element, scheduler;
      type$.void_Function._as(callable);
      element = this._stateful_widget$_element;
      scheduler = element._services._scheduler;
      scheduler.addTask$1(new A.StimulateListenerTask(new A.State_setState_closure(callable), new A.State_setState_closure0(this, scheduler, element)));
    },
    set$_stateful_widget$_widget(_widget) {
      this._stateful_widget$_widget = A._instanceType(this)._eval$1("State.T?")._as(_widget);
    }
  };
  A.State_setState_closure.prototype = {
    call$0() {
      this.callable.call$0();
    },
    $signature: 0
  };
  A.State_setState_closure0.prototype = {
    call$0() {
      var t1 = this.element;
      this.scheduler.addTask$1(new A.WidgetsUpdateTask(t1, A._setArrayType([this.$this.build$1(t1)], type$.JSArray_Widget), B.UpdateType_0, null, null));
    },
    $signature: 0
  };
  A.StatelessWidget.prototype = {
    get$correspondingTag() {
      return null;
    },
    shouldUpdateWidget$1(oldWidget) {
      return true;
    },
    createRenderElement$1($parent) {
      var t1 = A._setArrayType([], type$.JSArray_RenderElement),
        t2 = A.getRuntimeType(this).toString$0(0),
        t3 = $parent._services;
      t3.toString;
      return new A.StatelessRenderElement(this.key, this, t2, null, false, $parent.appTargetId, t3, $parent, t1);
    }
  };
  A.StatelessRenderElement.prototype = {
    get$widgetChildren() {
      var t1 = this._widget;
      t1.toString;
      return A._setArrayType([type$.StatelessWidget._as(t1).build$1(this)], type$.JSArray_Widget);
    }
  };
  A.Text.prototype = {
    get$correspondingTag() {
      return B.DomTagType_span_span;
    }
  };
  A.$UserMixin.prototype = {};
  A.$RoomMixin.prototype = {
    set$__$RoomMixin_users(__$RoomMixin_users) {
      this.$$RoomMixin___$RoomMixin_users = type$.List_$RoomMixin$User._as(__$RoomMixin_users);
    },
    get$$$$typename() {
      return this.$$RoomMixin_$$typename;
    }
  };
  A.$RoomMessageMixin.prototype = {
    get$$$$typename() {
      return this.$$RoomMessageMixin_$$typename;
    }
  };
  A.CreateUser$Mutation$UserCreated$User.prototype = {
    get$props() {
      return [this.$$UserMixin_$$typename, A._lateReadCheck(this.$$UserMixin___$UserMixin_userId, "userId"), this.$$UserMixin_name];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", this.$$UserMixin_$$typename, "userId", A._lateReadCheck(this.$$UserMixin___$UserMixin_userId, "userId"), "name", this.$$UserMixin_name], type$.String, type$.dynamic);
    }
  };
  A.CreateUser$Mutation$UserCreated.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__CreateUser$Mutation$UserCreated_token, "token"), A._lateReadCheck(this.__CreateUser$Mutation$UserCreated_user, "user")];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["token", A._lateReadCheck(this.__CreateUser$Mutation$UserCreated_token, "token"), "user", A._$CreateUser$Mutation$UserCreated$UserToJson(A._lateReadCheck(this.__CreateUser$Mutation$UserCreated_user, "user"))], type$.String, type$.dynamic);
    }
  };
  A.CreateUser$Mutation.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__CreateUser$Mutation_createUser, "createUser")];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["createUser", A._$CreateUser$Mutation$UserCreatedToJson(A._lateReadCheck(this.__CreateUser$Mutation_createUser, "createUser"))], type$.String, type$.dynamic);
    }
  };
  A.$RoomMixin$User.prototype = {
    get$props() {
      return [this.$$UserMixin_$$typename, A._lateReadCheck(this.$$UserMixin___$UserMixin_userId, "userId"), this.$$UserMixin_name];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", this.$$UserMixin_$$typename, "userId", A._lateReadCheck(this.$$UserMixin___$UserMixin_userId, "userId"), "name", this.$$UserMixin_name], type$.String, type$.dynamic);
    }
  };
  A.CreateRoom$Mutation$RoomCreated$Room.prototype = {
    get$props() {
      var _this = this;
      return [_this.$$RoomMixin_$$typename, A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_roomId, "roomId"), _this.$$RoomMixin_lastMessageDate, A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_lastUpdateDate, "lastUpdateDate"), A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_createdDate, "createdDate"), A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_users, "users")];
    },
    toJson$0() {
      return A._$CreateRoom$Mutation$RoomCreated$RoomToJson(this);
    }
  };
  A.CreateRoom$Mutation$RoomCreated.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__CreateRoom$Mutation$RoomCreated_token, "token"), A._lateReadCheck(this.__CreateRoom$Mutation$RoomCreated_room, "room")];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["token", A._lateReadCheck(this.__CreateRoom$Mutation$RoomCreated_token, "token"), "room", A._$CreateRoom$Mutation$RoomCreated$RoomToJson(A._lateReadCheck(this.__CreateRoom$Mutation$RoomCreated_room, "room"))], type$.String, type$.dynamic);
    }
  };
  A.CreateRoom$Mutation.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__CreateRoom$Mutation_createRoom, "createRoom")];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["createRoom", A._$CreateRoom$Mutation$RoomCreatedToJson(A._lateReadCheck(this.__CreateRoom$Mutation_createRoom, "createRoom"))], type$.String, type$.dynamic);
    }
  };
  A.SendMessageRoom$Mutation$RoomMessage.prototype = {
    get$props() {
      var _this = this;
      return [_this.$$RoomMessageMixin_$$typename, A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_messageId, "messageId"), A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_roomId, "roomId"), A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_content, "content"), A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_createdDate, "createdDate"), _this.$$RoomMessageMixin_recipientUserId, A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_user, "user")];
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", _this.$$RoomMessageMixin_$$typename, "messageId", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_messageId, "messageId"), "roomId", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_roomId, "roomId"), "content", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_content, "content"), "createdDate", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_createdDate, "createdDate").toIso8601String$0(), "recipientUserId", _this.$$RoomMessageMixin_recipientUserId, "user", A._$$RoomMessageMixin$UserToJson(A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_user, "user"))], type$.String, type$.dynamic);
    }
  };
  A.SendMessageRoom$Mutation.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__SendMessageRoom$Mutation_sendMessageRoom, "sendMessageRoom")];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["sendMessageRoom", A._$SendMessageRoom$Mutation$RoomMessageToJson(A._lateReadCheck(this.__SendMessageRoom$Mutation_sendMessageRoom, "sendMessageRoom"))], type$.String, type$.dynamic);
    }
  };
  A.$RoomMessageMixin$User.prototype = {
    get$props() {
      return [this.$$UserMixin_$$typename, A._lateReadCheck(this.$$UserMixin___$UserMixin_userId, "userId"), this.$$UserMixin_name];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", this.$$UserMixin_$$typename, "userId", A._lateReadCheck(this.$$UserMixin___$UserMixin_userId, "userId"), "name", this.$$UserMixin_name], type$.String, type$.dynamic);
    }
  };
  A.EventsRoom$Subscription$RoomEvent$Room.prototype = {
    get$props() {
      var _this = this;
      return [_this.$$RoomMixin_$$typename, A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_roomId, "roomId"), _this.$$RoomMixin_lastMessageDate, A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_lastUpdateDate, "lastUpdateDate"), A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_createdDate, "createdDate"), A._lateReadCheck(_this.$$RoomMixin___$RoomMixin_users, "users")];
    },
    toJson$0() {
      return A._$EventsRoom$Subscription$RoomEvent$RoomToJson(this);
    }
  };
  A.EventsRoom$Subscription$RoomEvent$RoomMessage.prototype = {
    get$props() {
      var _this = this;
      return [_this.$$RoomMessageMixin_$$typename, A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_messageId, "messageId"), A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_roomId, "roomId"), A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_content, "content"), A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_createdDate, "createdDate"), _this.$$RoomMessageMixin_recipientUserId, A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_user, "user")];
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", _this.$$RoomMessageMixin_$$typename, "messageId", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_messageId, "messageId"), "roomId", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_roomId, "roomId"), "content", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_content, "content"), "createdDate", A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_createdDate, "createdDate").toIso8601String$0(), "recipientUserId", _this.$$RoomMessageMixin_recipientUserId, "user", A._$$RoomMessageMixin$UserToJson(A._lateReadCheck(_this.$$RoomMessageMixin___$RoomMessageMixin_user, "user"))], type$.String, type$.dynamic);
    }
  };
  A.EventsRoom$Subscription$RoomEvent.prototype = {
    get$props() {
      return [this.get$$$$typename()];
    },
    toJson$0() {
      var _this = this;
      switch (_this.get$$$$typename()) {
        case "Room":
          return A._$EventsRoom$Subscription$RoomEvent$RoomToJson(type$.EventsRoom$Subscription$RoomEvent$Room._as(_this));
        case "RoomMessage":
          return A._$EventsRoom$Subscription$RoomEvent$RoomMessageToJson(type$.EventsRoom$Subscription$RoomEvent$RoomMessage._as(_this));
      }
      return A.LinkedHashMap_LinkedHashMap$_literal(["__typename", _this.get$$$$typename()], type$.String, type$.dynamic);
    },
    get$$$$typename() {
      return this.$$$typename;
    }
  };
  A.EventsRoom$Subscription.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__EventsRoom$Subscription_eventsRoom, "eventsRoom")];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["eventsRoom", A._lateReadCheck(this.__EventsRoom$Subscription_eventsRoom, "eventsRoom").toJson$0()], type$.String, type$.dynamic);
    }
  };
  A.CreateUserArguments.prototype = {
    get$props() {
      return [this.name];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["name", this.name], type$.String, type$.dynamic);
    }
  };
  A.CreateUserMutation.prototype = {
    get$props() {
      return [this.document, this.CreateUserMutation_operationName, this.CreateUserMutation_variables];
    },
    parse$1(json) {
      var _null = null,
        t1 = type$.Map_String_dynamic,
        t2 = new A.CreateUser$Mutation(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t3 = t1._as(J.$index$asx(t1._as(json), "createUser")),
        t4 = new A.CreateUser$Mutation$UserCreated(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t5 = J.getInterceptor$asx(t3);
      t4.__CreateUser$Mutation$UserCreated_token = A._asString(t5.$index(t3, "token"));
      t3 = t1._as(t5.$index(t3, "user"));
      t5 = new A.CreateUser$Mutation$UserCreated$User(_null, $, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t1 = J.getInterceptor$asx(t3);
      t5.$$UserMixin_$$typename = A._asStringQ(t1.$index(t3, "__typename"));
      t5.$$UserMixin___$UserMixin_userId = A._asString(t1.$index(t3, "userId"));
      t5.$$UserMixin_name = A._asStringQ(t1.$index(t3, "name"));
      t4.__CreateUser$Mutation$UserCreated_user = t5;
      t2.__CreateUser$Mutation_createUser = t4;
      return t2;
    },
    get$document(receiver) {
      return this.document;
    },
    get$operationName() {
      return this.CreateUserMutation_operationName;
    },
    get$variables() {
      return this.CreateUserMutation_variables;
    }
  };
  A.CreateRoomMutation.prototype = {
    get$props() {
      return [this.document, this.CreateRoomMutation_operationName];
    },
    parse$1(json) {
      var _null = null,
        t1 = type$.Map_String_dynamic,
        t2 = new A.CreateRoom$Mutation(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t3 = t1._as(J.$index$asx(t1._as(json), "createRoom")),
        t4 = new A.CreateRoom$Mutation$RoomCreated(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t5 = J.getInterceptor$asx(t3);
      t4.__CreateRoom$Mutation$RoomCreated_token = A._asString(t5.$index(t3, "token"));
      t4.__CreateRoom$Mutation$RoomCreated_room = A._$CreateRoom$Mutation$RoomCreated$RoomFromJson(t1._as(t5.$index(t3, "room")));
      t2.__CreateRoom$Mutation_createRoom = t4;
      return t2;
    },
    get$document(receiver) {
      return this.document;
    },
    get$operationName() {
      return this.CreateRoomMutation_operationName;
    }
  };
  A.SendMessageRoomArguments.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__SendMessageRoomArguments_roomId, "roomId"), A._lateReadCheck(this.__SendMessageRoomArguments_content, "content"), this.recipientUserId];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["roomId", A._lateReadCheck(this.__SendMessageRoomArguments_roomId, "roomId"), "content", A._lateReadCheck(this.__SendMessageRoomArguments_content, "content"), "recipientUserId", this.recipientUserId], type$.String, type$.dynamic);
    }
  };
  A.SendMessageRoomMutation.prototype = {
    get$props() {
      return [this.document, this.SendMessageRoomMutation_operationName, this.SendMessageRoomMutation_variables];
    },
    parse$1(json) {
      var _null = null,
        t1 = type$.Map_String_dynamic,
        t2 = new A.SendMessageRoom$Mutation(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t3 = t1._as(J.$index$asx(t1._as(json), "sendMessageRoom")),
        t4 = new A.SendMessageRoom$Mutation$RoomMessage(_null, $, $, $, $, _null, $, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t5 = J.getInterceptor$asx(t3);
      t4.$$RoomMessageMixin_$$typename = A._asStringQ(t5.$index(t3, "__typename"));
      t4.$$RoomMessageMixin___$RoomMessageMixin_messageId = A._asString(t5.$index(t3, "messageId"));
      t4.$$RoomMessageMixin___$RoomMessageMixin_roomId = A._asString(t5.$index(t3, "roomId"));
      t4.$$RoomMessageMixin___$RoomMessageMixin_content = A._asString(t5.$index(t3, "content"));
      t4.$$RoomMessageMixin___$RoomMessageMixin_createdDate = A.DateTime_parse(A._asString(t5.$index(t3, "createdDate")));
      t4.$$RoomMessageMixin_recipientUserId = A._asStringQ(t5.$index(t3, "recipientUserId"));
      t4.$$RoomMessageMixin___$RoomMessageMixin_user = A._$$RoomMessageMixin$UserFromJson(t1._as(t5.$index(t3, "user")));
      t2.__SendMessageRoom$Mutation_sendMessageRoom = t4;
      return t2;
    },
    get$document(receiver) {
      return this.document;
    },
    get$operationName() {
      return this.SendMessageRoomMutation_operationName;
    },
    get$variables() {
      return this.SendMessageRoomMutation_variables;
    }
  };
  A.EventsRoomArguments.prototype = {
    get$props() {
      return [A._lateReadCheck(this.__EventsRoomArguments_token, "token")];
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["token", A._lateReadCheck(this.__EventsRoomArguments_token, "token")], type$.String, type$.dynamic);
    }
  };
  A.EventsRoomSubscription.prototype = {
    get$props() {
      return [this.document, this.EventsRoomSubscription_operationName, this.EventsRoomSubscription_variables];
    },
    get$variables() {
      return this.EventsRoomSubscription_variables;
    }
  };
  A._$CreateRoom$Mutation$RoomCreated$RoomFromJson_closure.prototype = {
    call$1(e) {
      return A._$$RoomMixin$UserFromJson(type$.Map_String_dynamic._as(e));
    },
    $signature: 29
  };
  A._$CreateRoom$Mutation$RoomCreated$RoomToJson_closure.prototype = {
    call$1(e) {
      return A._$$RoomMixin$UserToJson(type$.$RoomMixin$User._as(e));
    },
    $signature: 30
  };
  A._$EventsRoom$Subscription$RoomEvent$RoomFromJson_closure.prototype = {
    call$1(e) {
      return A._$$RoomMixin$UserFromJson(type$.Map_String_dynamic._as(e));
    },
    $signature: 29
  };
  A._$EventsRoom$Subscription$RoomEvent$RoomToJson_closure.prototype = {
    call$1(e) {
      return A._$$RoomMixin$UserToJson(type$.$RoomMixin$User._as(e));
    },
    $signature: 30
  };
  A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin.prototype = {};
  A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin_$UserMixin.prototype = {};
  A._$RoomMixin$User_JsonSerializable_EquatableMixin.prototype = {};
  A._$RoomMixin$User_JsonSerializable_EquatableMixin_$UserMixin.prototype = {};
  A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin.prototype = {};
  A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin_$RoomMixin.prototype = {
    set$__$RoomMixin_users(__$RoomMixin_users) {
      this.$$RoomMixin___$RoomMixin_users = type$.List_$RoomMixin$User._as(__$RoomMixin_users);
    },
    get$$$$typename() {
      return this.$$RoomMixin_$$typename;
    }
  };
  A._CreateRoom$Mutation$RoomCreated_JsonSerializable_EquatableMixin.prototype = {};
  A._CreateRoom$Mutation_JsonSerializable_EquatableMixin.prototype = {};
  A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin.prototype = {};
  A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin_$UserMixin.prototype = {};
  A._CreateUser$Mutation$UserCreated_JsonSerializable_EquatableMixin.prototype = {};
  A._CreateUser$Mutation_JsonSerializable_EquatableMixin.prototype = {};
  A._CreateUserArguments_JsonSerializable_EquatableMixin.prototype = {};
  A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin.prototype = {};
  A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMixin.prototype = {
    set$__$RoomMixin_users(__$RoomMixin_users) {
      this.$$RoomMixin___$RoomMixin_users = type$.List_$RoomMixin$User._as(__$RoomMixin_users);
    },
    get$$$$typename() {
      return this.$$RoomMixin_$$typename;
    }
  };
  A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin.prototype = {};
  A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMessageMixin.prototype = {
    get$$$$typename() {
      return this.$$RoomMessageMixin_$$typename;
    }
  };
  A._EventsRoom$Subscription$RoomEvent_JsonSerializable_EquatableMixin.prototype = {};
  A._EventsRoom$Subscription_JsonSerializable_EquatableMixin.prototype = {};
  A._EventsRoomArguments_JsonSerializable_EquatableMixin.prototype = {};
  A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin.prototype = {};
  A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin_$RoomMessageMixin.prototype = {
    get$$$$typename() {
      return this.$$RoomMessageMixin_$$typename;
    }
  };
  A._SendMessageRoom$Mutation_JsonSerializable_EquatableMixin.prototype = {};
  A._SendMessageRoomArguments_JsonSerializable_EquatableMixin.prototype = {};
  A.ClientPersistence.prototype = {};
  A.ClientPersistencePrefixed.prototype = {};
  A.RoomSignalsClient.prototype = {
    dispose$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$dispose$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self._messageController.close$0(0), $async$dispose$0);
            case 2:
              // returning from await.
              $async$goto = 3;
              return A._asyncAwait($async$self._roomChangeController.close$0(0), $async$dispose$0);
            case 3:
              // returning from await.
              $async$self.client.dispose$0();
              $async$goto = 4;
              return A._asyncAwait($async$self._link.dispose$0(), $async$dispose$0);
            case 4:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$dispose$0, $async$completer);
    },
    _syncPersistence$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2;
      var $async$_syncPersistence$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self.persistence != null ? 2 : 3;
              break;
            case 2:
              // then
              t1 = $async$self.rooms;
              t1 = t1.get$values(t1);
              t2 = A._instanceType(t1);
              t2 = A.MappedIterable_MappedIterable(t1, t2._eval$1("String(Iterable.E)")._as(new A.RoomSignalsClient__syncPersistence_closure()), t2._eval$1("Iterable.E"), type$.String);
              t2 = B.C_JsonCodec.encode$2$toEncodable(A.List_List$of(t2, true, A._instanceType(t2)._eval$1("Iterable.E")), null);
              window.localStorage.setItem("rs_client-room-signals-tokens", t2);
              $async$goto = 4;
              return A._asyncAwait(null, $async$_syncPersistence$0);
            case 4:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_syncPersistence$0, $async$completer);
    },
    _removeRoom$1(roomId) {
      var room = this.rooms.remove$1(0, roomId);
      if (room != null) {
        room.cancelSubscription.call$0();
        this._roomChangeController.add$1(0, room);
        this._syncPersistence$0();
      }
    },
    subscribeToRoom$1(token) {
      var t2, subs, t3, _this = this, _null = null, t1 = {};
      A._asString(token);
      t2 = new A._Future($.Zone__current, type$._Future_Room);
      subs = A._Cell$named("subs");
      t1.roomId = null;
      t3 = new A.RoomSignalsClient_subscribeToRoom_complete(t1, _this, new A._AsyncCompleter(t2, type$._AsyncCompleter_Room));
      t3 = _this.client.stream$2$1(0, new A.EventsRoomSubscription($.$get$EVENTS_ROOM_SUBSCRIPTION_DOCUMENT(), "eventsRoom", new A.EventsRoomArguments(token, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null)), type$.EventsRoom$Subscription, type$.EventsRoomArguments).listen$4$cancelOnError$onDone$onError(new A.RoomSignalsClient_subscribeToRoom_closure(t1, _this, subs, token, t3), true, new A.RoomSignalsClient_subscribeToRoom_closure0(t1, _this), t3);
      if (subs.__late_helper$_value !== subs)
        A.throwExpression(new A.LateError("Local '" + subs.__late_helper$_name + "' has already been initialized."));
      subs.__late_helper$_value = t3;
      return t2;
    }
  };
  A.RoomSignalsClient__syncPersistence_closure.prototype = {
    call$1(value) {
      return type$.Room._as(value).token;
    },
    $signature: 72
  };
  A.RoomSignalsClient_subscribeToRoom_complete.prototype = {
    call$2(error, stackTrace) {
      var t1, t2, t3, t4, _this = this;
      type$.nullable_StackTrace._as(stackTrace);
      t1 = _this.comp;
      if ((t1.future._state & 30) !== 0)
        return;
      if (error != null) {
        t2 = _this._box_0.roomId;
        if (t2 != null)
          _this.$this._removeRoom$1(t2);
        t1.completeError$2(error, stackTrace);
      } else {
        t2 = _this.$this;
        t3 = t2.rooms;
        t4 = _this._box_0;
        if (t3.containsKey$1(0, t4.roomId)) {
          t1.complete$1(0, t3.$index(0, t4.roomId));
          t2._syncPersistence$0();
        }
      }
    },
    $signature: 73
  };
  A.RoomSignalsClient_subscribeToRoom_closure.prototype = {
    call$1($event) {
      var t1, data, t2, _this = this;
      type$.GraphQLResponse_EventsRoom$Subscription._as($event);
      t1 = $event.data;
      data = t1 == null ? null : A._lateReadCheck(t1.__EventsRoom$Subscription_eventsRoom, "eventsRoom");
      if (data instanceof A.EventsRoom$Subscription$RoomEvent$Room) {
        t1 = _this._box_0;
        if (t1.roomId == null)
          t1.roomId = A._lateReadCheck(data.$$RoomMixin___$RoomMixin_roomId, "roomId");
        t1 = _this.$this;
        t2 = t1.rooms;
        t1._roomChangeController.add$1(0, t2.update$3$ifAbsent(t2, A._lateReadCheck(data.$$RoomMixin___$RoomMixin_roomId, "roomId"), new A.RoomSignalsClient_subscribeToRoom__closure(data), new A.RoomSignalsClient_subscribeToRoom__closure0(t1, data, _this.subs, _this.token)));
      } else if (data instanceof A.EventsRoom$Subscription$RoomEvent$RoomMessage)
        _this.$this._messageController.add$1(0, data);
      _this.complete.call$2($event.errors, null);
    },
    $signature: 74
  };
  A.RoomSignalsClient_subscribeToRoom__closure.prototype = {
    call$1(value) {
      type$.Room._as(value);
      value.data = this.data;
      return value;
    },
    $signature: 75
  };
  A.RoomSignalsClient_subscribeToRoom__closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.data;
      return new A.Room(_this.token, new A.RoomSignalsClient_subscribeToRoom___closure(_this.$this, _this.subs, t1), t1);
    },
    $signature: 76
  };
  A.RoomSignalsClient_subscribeToRoom___closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.subs._readLocal$0().cancel$0(), $async$call$0);
            case 2:
              // returning from await.
              $async$self.$this._removeRoom$1(A._lateReadCheck($async$self.data.$$RoomMixin___$RoomMixin_roomId, "roomId"));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 12
  };
  A.RoomSignalsClient_subscribeToRoom_closure0.prototype = {
    call$0() {
      var t1 = this._box_0.roomId;
      if (t1 != null)
        this.$this._removeRoom$1(t1);
    },
    $signature: 0
  };
  A.Room.prototype = {};
  A._ClientPersistencePrefixed_Object_ClientPersistence.prototype = {};
  A.DeferStream.prototype = {
    get$isBroadcast() {
      return true;
    },
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var stream, e, s, exception, t2, t3, t4, _null = null,
        t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      stream = null;
      try {
        stream = this._factory.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t2 = e;
        t3 = s;
        A.checkNotNullable(t2, "error", type$.Object);
        t1 = t1._eval$1("_AsyncStreamController<1>");
        t4 = new A._AsyncStreamController(_null, _null, _null, _null, t1);
        t4._addError$2(t2, t3 == null ? A.AsyncError_defaultStackTrace(t2) : t3);
        t4._closeUnchecked$0();
        return new A._ControllerStream(t4, t1._eval$1("_ControllerStream<1>")).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
      }
      return stream.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A.BehaviorSubject.prototype = {
    get$stream(_) {
      return this;
    },
    createForwardingSubject$1$3$onCancel$onListen$sync(onCancel, onListen, sync, $R) {
      var t1 = type$.nullable_void_Function,
        controller = new A._SyncBroadcastStreamController(t1._as(onListen), t1._as(onCancel), $R._eval$1("_SyncBroadcastStreamController<0>")),
        wrapper = new A._Wrapper(null, $R._eval$1("_Wrapper<0>"));
      t1 = A.DeferStream$(A.BehaviorSubject__deferStream(wrapper, controller, true, $R), true, $R);
      return new A.BehaviorSubject(wrapper, t1, controller, t1, $R._eval$1("BehaviorSubject<0>"));
    },
    where$1(_, test) {
      var t1 = this.$ti;
      return this._forwardBehaviorSubject$1$1(new A.BehaviorSubject_where_closure(this, t1._eval$1("bool(1)")._as(test)), t1._precomputed1);
    },
    transform$1$1(_, streamTransformer, $S) {
      return this._forwardBehaviorSubject$1$1(new A.BehaviorSubject_transform_closure(this, this.$ti._bind$1($S)._eval$1("StreamTransformer<2,1>")._as(streamTransformer), $S), $S);
    },
    take$1(_, count) {
      return this._forwardBehaviorSubject$1$1(new A.BehaviorSubject_take_closure(this, count), this.$ti._precomputed1);
    },
    _forwardBehaviorSubject$1$1(transformerStream, $R) {
      var subject, subscription;
      this.$ti._bind$1($R)._eval$1("Stream<1>(Stream<2>)")._as(transformerStream);
      subject = A._Cell$named("subject");
      subscription = A._Cell$named("subscription");
      return subject.__late_helper$_value = this.createForwardingSubject$1$3$onCancel$onListen$sync(new A.BehaviorSubject__forwardBehaviorSubject_closure(subscription), new A.BehaviorSubject__forwardBehaviorSubject_closure0(this, subscription, transformerStream, subject, $R), true, $R);
    }
  };
  A.BehaviorSubject__deferStream_closure.prototype = {
    call$0() {
      var t3, t4, _this = this,
        t1 = _this.wrapper,
        t2 = t1.latestErrorAndStackTrace;
      if (t2 != null) {
        t1 = _this.controller;
        t3 = A._instanceType(t1)._eval$1("_BroadcastStream<1>");
        t4 = _this.T;
        return t3._bind$1(t4)._eval$1("StreamTransformer<Stream.T,1>")._as(new A.StartWithErrorStreamTransformer(t2.error, t2.stackTrace, t4._eval$1("StartWithErrorStreamTransformer<0>"))).bind$1(new A._BroadcastStream(t1, t3));
      }
      t1 = t1.latestValue;
      if (t1 != null) {
        t2 = _this.controller;
        t3 = A._instanceType(t2)._eval$1("_BroadcastStream<1>");
        t4 = _this.T;
        return t3._bind$1(t4)._eval$1("StreamTransformer<Stream.T,1>")._as(new A.StartWithStreamTransformer(t1.value, t4._eval$1("StartWithStreamTransformer<0>"))).bind$1(new A._BroadcastStream(t2, t3));
      }
      t1 = _this.controller;
      return new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    $signature() {
      return this.T._eval$1("Stream<0>()");
    }
  };
  A.BehaviorSubject_where_closure.prototype = {
    call$1(s) {
      var t1;
      this.$this.$ti._eval$1("Stream<1>")._as(s);
      t1 = s.$ti;
      return new A._WhereStream(t1._eval$1("bool(Stream.T)")._as(this.test), s, t1._eval$1("_WhereStream<Stream.T>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("Stream<1>(Stream<1>)");
    }
  };
  A.BehaviorSubject_transform_closure.prototype = {
    call$1(s) {
      this.$this.$ti._eval$1("Stream<1>")._as(s);
      return s.$ti._bind$1(this.S)._eval$1("StreamTransformer<Stream.T,1>")._as(this.streamTransformer).bind$1(s);
    },
    $signature() {
      return this.$this.$ti._bind$1(this.S)._eval$1("Stream<1>(Stream<2>)");
    }
  };
  A.BehaviorSubject_take_closure.prototype = {
    call$1(s) {
      this.$this.$ti._eval$1("Stream<1>")._as(s);
      return new A._TakeStream(this.count, s, s.$ti._eval$1("_TakeStream<Stream.T>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("Stream<1>(Stream<1>)");
    }
  };
  A.BehaviorSubject__forwardBehaviorSubject_closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.transformerStream.call$1(_this.$this._behavior_subject$_stream),
        t2 = _this.subject,
        t3 = _this.R._eval$1("~(0)")._as(J.get$add$ax(t2._readLocal$0())),
        t4 = t2._readLocal$0().get$addError();
      return _this.subscription.__late_helper$_value = t1.listen$3$onDone$onError(t3, J.get$close$x(t2._readLocal$0()), t4);
    },
    $signature() {
      return this.R._eval$1("StreamSubscription<0>()");
    }
  };
  A.BehaviorSubject__forwardBehaviorSubject_closure.prototype = {
    call$0() {
      return this.subscription._readLocal$0().cancel$0();
    },
    $signature: 12
  };
  A._Wrapper.prototype = {
    set$latestValue(latestValue) {
      this.latestValue = this.$ti._eval$1("ValueWrapper<1>?")._as(latestValue);
    }
  };
  A.Subject.prototype = {
    get$stream(_) {
      return this;
    },
    addError$2(error, stackTrace) {
      type$.Object._as(error);
      type$.nullable_StackTrace._as(stackTrace);
      if (this._isAddingStreamItems)
        throw A.wrapException(A.StateError$("You cannot add an error while items are being added from addStream"));
      this._subject$_addError$2(error, stackTrace);
    },
    addError$1(error) {
      return this.addError$2(error, null);
    },
    _subject$_addError$2(error, stackTrace) {
      var t1 = this._wrapper;
      t1.set$latestValue(null);
      t1.latestErrorAndStackTrace = new A.ErrorAndStackTrace(error, stackTrace);
      this._subject$_controller.addError$2(error, stackTrace);
    },
    add$1(_, $event) {
      var t2, t3, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as($event);
      if (_this._isAddingStreamItems)
        throw A.wrapException(A.StateError$("You cannot add items while items are being added from addStream"));
      t2 = _this._wrapper;
      t3 = t2.$ti;
      t2.set$latestValue(new A.ValueWrapper(t3._precomputed1._as(t1._precomputed1._as($event)), t3._eval$1("ValueWrapper<1>")));
      t2.latestErrorAndStackTrace = null;
      _this._subject$_controller.add$1(0, $event);
    },
    close$0(_) {
      if (this._isAddingStreamItems)
        throw A.wrapException(A.StateError$("You cannot close the subject while items are being added from addStream"));
      return this._subject$_controller.close$0(0);
    },
    $isEventSink: 1,
    $isStreamSink: 1,
    $isStreamController: 1
  };
  A._StartWithStreamSink.prototype = {
    add$2(_, sink, data) {
      var t1 = this.$ti;
      t1._eval$1("EventSink<1>")._as(sink);
      t1._precomputed1._as(data);
      this._safeAddFirstEvent$1(sink);
      sink.add$1(0, data);
    },
    addError$3(sink, e, st) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
      type$.nullable_StackTrace._as(st);
      this._safeAddFirstEvent$1(sink);
      sink.addError$2(e, st);
    },
    close$1(_, sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
      this._safeAddFirstEvent$1(sink);
      sink.close$0(0);
    },
    onCancel$1(sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
    },
    onListen$1(sink) {
      A.scheduleMicrotask(new A._StartWithStreamSink_onListen_closure(this, this.$ti._eval$1("EventSink<1>")._as(sink)));
    },
    onPause$1(_, sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
    },
    onResume$1(sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
    },
    _safeAddFirstEvent$1(sink) {
      var _this = this;
      _this.$ti._eval$1("EventSink<1>")._as(sink);
      if (!_this._isFirstEventAdded) {
        sink.add$1(0, _this._startValue);
        _this._isFirstEventAdded = true;
      }
    }
  };
  A._StartWithStreamSink_onListen_closure.prototype = {
    call$0() {
      return this.$this._safeAddFirstEvent$1(this.sink);
    },
    $signature: 0
  };
  A.StartWithStreamTransformer.prototype = {
    bind$1(stream) {
      var t1 = this.$ti,
        t2 = t1._precomputed1;
      return A.forwardStream(t1._eval$1("Stream<1>")._as(stream), new A._StartWithStreamSink(this.startValue, t1._eval$1("_StartWithStreamSink<1>")), t2, t2);
    }
  };
  A._StartWithErrorStreamSink.prototype = {
    add$2(_, sink, data) {
      var t1 = this.$ti;
      t1._eval$1("EventSink<1>")._as(sink);
      t1._precomputed1._as(data);
      this._start_with_error$_safeAddFirstEvent$1(sink);
      sink.add$1(0, data);
    },
    addError$3(sink, e, st) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
      type$.nullable_StackTrace._as(st);
      this._start_with_error$_safeAddFirstEvent$1(sink);
      sink.addError$2(e, st);
    },
    close$1(_, sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
      this._start_with_error$_safeAddFirstEvent$1(sink);
      sink.close$0(0);
    },
    onCancel$1(sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
    },
    onListen$1(sink) {
      A.scheduleMicrotask(new A._StartWithErrorStreamSink_onListen_closure(this, this.$ti._eval$1("EventSink<1>")._as(sink)));
    },
    onPause$1(_, sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
    },
    onResume$1(sink) {
      this.$ti._eval$1("EventSink<1>")._as(sink);
    },
    _start_with_error$_safeAddFirstEvent$1(sink) {
      var _this = this;
      _this.$ti._eval$1("EventSink<1>")._as(sink);
      if (_this._start_with_error$_isFirstEventAdded)
        return;
      sink.addError$2(_this._e, _this._st);
      _this._start_with_error$_isFirstEventAdded = true;
    }
  };
  A._StartWithErrorStreamSink_onListen_closure.prototype = {
    call$0() {
      return this.$this._start_with_error$_safeAddFirstEvent$1(this.sink);
    },
    $signature: 0
  };
  A.StartWithErrorStreamTransformer.prototype = {
    bind$1(stream) {
      var t1 = this.$ti,
        t2 = t1._precomputed1;
      return A.forwardStream(t1._eval$1("Stream<1>")._as(stream), new A._StartWithErrorStreamSink(this.error, this.stackTrace, t1._eval$1("_StartWithErrorStreamSink<1>")), t2, t2);
    }
  };
  A.ErrorAndStackTrace.prototype = {
    toString$0(_) {
      return "ErrorAndStackTrace{error: " + A.S(this.error) + ", stacktrace: " + A.S(this.stackTrace) + "}";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ErrorAndStackTrace && A.getRuntimeType(_this) === A.getRuntimeType(other) && J.$eq$(_this.error, other.error) && _this.stackTrace == other.stackTrace;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (J.get$hashCode$(this.error) ^ J.get$hashCode$(this.stackTrace)) >>> 0;
    }
  };
  A.forwardStream_runCatching.prototype = {
    call$1(block) {
      var e, s, exception;
      type$.void_Function._as(block);
      try {
        block.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        this.connectedSink.addError$3(this.controller._readLocal$0(), e, s);
      }
    },
    $signature: 8
  };
  A.forwardStream_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.runCatching,
        t2 = _this.connectedSink,
        t3 = _this.controller;
      t1.call$1(new A.forwardStream__closure1(t2, t3));
      _this.subscription.__late_helper$_value = _this.stream.listen$3$onDone$onError(new A.forwardStream__closure2(t1, t2, t3, _this.T), new A.forwardStream__closure3(t1, t2, t3), new A.forwardStream__closure4(t1, t2, t3));
    },
    $signature: 1
  };
  A.forwardStream__closure1.prototype = {
    call$0() {
      return this.connectedSink.onListen$1(this.controller._readLocal$0());
    },
    $signature: 0
  };
  A.forwardStream__closure2.prototype = {
    call$1(data) {
      var _this = this;
      return _this.runCatching.call$1(new A.forwardStream___closure1(_this.connectedSink, _this.controller, _this.T._as(data)));
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.forwardStream___closure1.prototype = {
    call$0() {
      return this.connectedSink.add$2(0, this.controller._readLocal$0(), this.data);
    },
    $signature: 0
  };
  A.forwardStream__closure4.prototype = {
    call$2(e, st) {
      return this.runCatching.call$1(new A.forwardStream___closure(this.connectedSink, this.controller, type$.Object._as(e), type$.nullable_StackTrace._as(st)));
    },
    $signature: 78
  };
  A.forwardStream___closure.prototype = {
    call$0() {
      var _this = this;
      return _this.connectedSink.addError$3(_this.controller._readLocal$0(), _this.e, _this.st);
    },
    $signature: 0
  };
  A.forwardStream__closure3.prototype = {
    call$0() {
      return this.runCatching.call$1(new A.forwardStream___closure0(this.connectedSink, this.controller));
    },
    $signature: 0
  };
  A.forwardStream___closure0.prototype = {
    call$0() {
      return this.connectedSink.close$1(0, this.controller._readLocal$0());
    },
    $signature: 0
  };
  A.forwardStream_closure0.prototype = {
    call$0() {
      var t1,
        onCancelSelfFuture = this.subscription._readLocal$0().cancel$0();
      this.connectedSink.onCancel$1(this.controller._readLocal$0());
      t1 = A._setArrayType([], type$.JSArray_Future_dynamic);
      t1.push(onCancelSelfFuture);
      return A.Future_wait(t1, type$.dynamic);
    },
    $signature: 79
  };
  A.forwardStream_closure1.prototype = {
    call$0() {
      var _this = this;
      J.pause$0$z(_this.subscription._readLocal$0());
      _this.runCatching.call$1(new A.forwardStream__closure0(_this.connectedSink, _this.controller));
    },
    $signature: 1
  };
  A.forwardStream__closure0.prototype = {
    call$0() {
      return this.connectedSink.onPause$1(0, this.controller._readLocal$0());
    },
    $signature: 0
  };
  A.forwardStream_closure2.prototype = {
    call$0() {
      var _this = this;
      _this.subscription._readLocal$0().resume$0();
      _this.runCatching.call$1(new A.forwardStream__closure(_this.connectedSink, _this.controller));
    },
    $signature: 1
  };
  A.forwardStream__closure.prototype = {
    call$0() {
      return this.connectedSink.onResume$1(this.controller._readLocal$0());
    },
    $signature: 0
  };
  A.ValueWrapper.prototype = {
    toString$0(_) {
      return "ValueWrapper{value: " + A.S(this.value) + "}";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.ValueWrapper && A.getRuntimeType(this) === A.getRuntimeType(other) && J.$eq$(this.value, other.value);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.value);
    }
  };
  A.GuaranteeChannel.prototype = {
    GuaranteeChannel$3$allowSinkErrors(innerSink, allowSinkErrors, _box_0, $T) {
      var _this = this,
        t1 = _this.$ti,
        t2 = t1._eval$1("_GuaranteeSink<1>")._as(new A._GuaranteeSink(innerSink, _this, new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_dynamic), type$._AsyncCompleter_dynamic), allowSinkErrors, $T._eval$1("_GuaranteeSink<0>")));
      A._lateWriteOnceCheck(_this.__GuaranteeChannel__sink, "_sink");
      _this.set$__GuaranteeChannel__sink(t2);
      if (_box_0.innerStream.get$isBroadcast())
        _box_0.innerStream = _box_0.innerStream.transform$1$1(0, new A.SingleSubscriptionTransformer($T._eval$1("@<0>")._bind$1($T)._eval$1("SingleSubscriptionTransformer<1,2>")), $T);
      t1 = t1._eval$1("StreamController<1>")._as(A.StreamController_StreamController(null, new A.GuaranteeChannel_closure(_box_0, _this, $T), null, null, true, $T));
      A._lateWriteOnceCheck(_this.__GuaranteeChannel__streamController, "_streamController");
      _this.set$__GuaranteeChannel__streamController(t1);
    },
    _onSinkDisconnected$0() {
      this._disconnected = true;
      var subscription = this._guarantee_channel$_subscription;
      if (subscription != null)
        subscription.cancel$0();
      A._lateReadCheck(this.__GuaranteeChannel__streamController, "_streamController").close$0(0);
    },
    set$__GuaranteeChannel__sink(__GuaranteeChannel__sink) {
      this.__GuaranteeChannel__sink = this.$ti._eval$1("_GuaranteeSink<1>")._as(__GuaranteeChannel__sink);
    },
    set$__GuaranteeChannel__streamController(__GuaranteeChannel__streamController) {
      this.__GuaranteeChannel__streamController = this.$ti._eval$1("StreamController<1>")._as(__GuaranteeChannel__streamController);
    },
    set$_guarantee_channel$_subscription(_subscription) {
      this._guarantee_channel$_subscription = this.$ti._eval$1("StreamSubscription<1>?")._as(_subscription);
    }
  };
  A.GuaranteeChannel_closure.prototype = {
    call$0() {
      var t2, t3,
        _s17_ = "_streamController",
        t1 = this.$this;
      if (t1._disconnected)
        return;
      t2 = this._box_0.innerStream;
      t3 = A._lateReadCheck(t1.__GuaranteeChannel__streamController, _s17_);
      t1.set$_guarantee_channel$_subscription(t2.listen$3$onDone$onError(this.T._eval$1("~(0)")._as(t3.get$add(t3)), new A.GuaranteeChannel__closure(t1), A._lateReadCheck(t1.__GuaranteeChannel__streamController, _s17_).get$addError()));
    },
    $signature: 0
  };
  A.GuaranteeChannel__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      A._lateReadCheck(t1.__GuaranteeChannel__sink, "_sink")._onStreamDisconnected$0();
      A._lateReadCheck(t1.__GuaranteeChannel__streamController, "_streamController").close$0(0);
    },
    $signature: 0
  };
  A._GuaranteeSink.prototype = {
    add$1(_, data) {
      var t1, _this = this;
      _this.$ti._precomputed1._as(data);
      if (_this._closed)
        throw A.wrapException(A.StateError$("Cannot add event after closing."));
      if (_this._disconnected)
        return;
      t1 = _this._inner;
      t1._target.add$1(0, t1.$ti._precomputed1._as(data));
    },
    addError$2(error, stackTrace) {
      if (this._closed)
        throw A.wrapException(A.StateError$("Cannot add event after closing."));
      if (this._disconnected)
        return;
      this._guarantee_channel$_addError$2(error, stackTrace);
    },
    addError$1(error) {
      return this.addError$2(error, null);
    },
    _guarantee_channel$_addError$2(error, stackTrace) {
      var _this = this;
      if (_this._allowErrors) {
        _this._inner._target.addError$2(error, stackTrace);
        return;
      }
      _this._doneCompleter.completeError$2(error, stackTrace);
      _this._onStreamDisconnected$0();
      _this._guarantee_channel$_channel._onSinkDisconnected$0();
      _this._inner._target.close$0(0).catchError$1(new A._GuaranteeSink__addError_closure());
    },
    close$0(_) {
      var _this = this;
      if (_this._closed)
        return _this._doneCompleter.future;
      _this._closed = true;
      if (!_this._disconnected) {
        _this._guarantee_channel$_channel._onSinkDisconnected$0();
        _this._doneCompleter.complete$1(0, _this._inner._target.close$0(0));
      }
      return _this._doneCompleter.future;
    },
    _onStreamDisconnected$0() {
      this._disconnected = true;
      var t1 = this._doneCompleter;
      if ((t1.future._state & 30) === 0)
        t1.complete$0(0);
      return;
    },
    $isEventSink: 1,
    $isStreamSink: 1
  };
  A._GuaranteeSink__addError_closure.prototype = {
    call$1(_) {
    },
    $signature: 3
  };
  A.StreamChannelController.prototype = {
    set$__StreamChannelController__local(__StreamChannelController__local) {
      this.__StreamChannelController__local = this.$ti._eval$1("StreamChannel<1>")._as(__StreamChannelController__local);
    },
    set$__StreamChannelController__foreign(__StreamChannelController__foreign) {
      this.__StreamChannelController__foreign = this.$ti._eval$1("StreamChannel<1>")._as(__StreamChannelController__foreign);
    }
  };
  A.StreamChannelMixin.prototype = {$isStreamChannel: 1};
  A.Uuid.prototype = {
    get$_uuid$_state() {
      var t2, t3,
        t1 = $.$get$Uuid__stateExpando();
      A.Expando__checkType(this);
      t2 = t1._jsWeakMap;
      t3 = t2.get(this);
      if (t3 == null) {
        t3 = A.LinkedHashMap_LinkedHashMap$_literal(["seedBytes", null, "node", null, "clockSeq", null, "mSecs", 0, "nSecs", 0, "hasInitV1", false, "hasInitV4", false], type$.String, type$.dynamic);
        t2.set(this, A._instanceType(t1)._eval$1("1?")._as(t3));
        t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    _initV4$0() {
      var _s9_ = "hasInitV4",
        t1 = J.$index$asx(this.get$_uuid$_state(), _s9_);
      t1.toString;
      if (!A._asBool(t1)) {
        t1 = this.get$_uuid$_state();
        J.$indexSet$ax(t1, "globalRNG", A.uuid_util_UuidUtil_mathRNG$closure());
        J.$indexSet$ax(this.get$_uuid$_state(), _s9_, true);
      }
    }
  };
  A.HtmlWebSocketChannel.prototype = {
    get$stream(_) {
      var t1 = A._lateReadCheck(A._lateReadCheck(this._html0$_controller.__StreamChannelController__foreign, "_foreign").__GuaranteeChannel__streamController, "_streamController");
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    get$sink() {
      var t1, _this = this,
        value = _this.__HtmlWebSocketChannel_sink;
      if (value === $) {
        t1 = A._lateReadCheck(A._lateReadCheck(_this._html0$_controller.__StreamChannelController__foreign, "_foreign").__GuaranteeChannel__sink, "_sink");
        A._lateInitializeOnceCheck(_this.__HtmlWebSocketChannel_sink, "sink");
        value = _this.__HtmlWebSocketChannel_sink = new A._HtmlWebSocketSink(_this, t1);
      }
      return value;
    },
    HtmlWebSocketChannel$1(innerWebSocket) {
      var t3, _this = this,
        t1 = _this.innerWebSocket,
        t2 = t1.readyState;
      t2.toString;
      if (t2 === 1)
        _this._listen$0();
      else {
        t2 = new A._EventStream(t1, "open", false, type$._EventStream_Event);
        t2.get$first(t2).then$1$1(new A.HtmlWebSocketChannel_closure(_this), type$.Null);
      }
      t2 = new A._EventStream(t1, "error", false, type$._EventStream_Event);
      t3 = type$.Null;
      t2.get$first(t2).then$1$1(new A.HtmlWebSocketChannel_closure0(_this), t3);
      t2 = type$.nullable_void_Function_MessageEvent._as(new A.HtmlWebSocketChannel_closure1(_this));
      type$.nullable_void_Function._as(null);
      A._EventStreamSubscription$(t1, "message", t2, false, type$.MessageEvent);
      t1 = new A._EventStream(t1, "close", false, type$._EventStream_CloseEvent);
      t1.get$first(t1).then$1$1(new A.HtmlWebSocketChannel_closure2(_this), t3);
    },
    _listen$0() {
      var t1 = A._lateReadCheck(A._lateReadCheck(this._html0$_controller.__StreamChannelController__local, "_local").__GuaranteeChannel__streamController, "_streamController");
      new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>")).listen$2$onDone(B.WebSocket_methods.get$send(this.innerWebSocket), new A.HtmlWebSocketChannel__listen_closure(this));
    },
    $isWebSocketChannel: 1
  };
  A.HtmlWebSocketChannel_closure.prototype = {
    call$1(_) {
      type$.Event._as(_);
      this.$this._listen$0();
    },
    $signature: 31
  };
  A.HtmlWebSocketChannel_closure0.prototype = {
    call$1(_) {
      var t1;
      type$.Event._as(_);
      t1 = this.$this._html0$_controller;
      A._lateReadCheck(A._lateReadCheck(t1.__StreamChannelController__local, "_local").__GuaranteeChannel__sink, "_sink").addError$1(new A.WebSocketChannelException("WebSocket connection failed."));
      A._lateReadCheck(A._lateReadCheck(t1.__StreamChannelController__local, "_local").__GuaranteeChannel__sink, "_sink").close$0(0);
    },
    $signature: 31
  };
  A.HtmlWebSocketChannel_closure1.prototype = {
    call$1($event) {
      var data = new A._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(type$.MessageEvent._as($event).data, true);
      if (type$.ByteBuffer._is(data))
        data = A.NativeUint8List_NativeUint8List$view(data, 0, null);
      A._lateReadCheck(A._lateReadCheck(this.$this._html0$_controller.__StreamChannelController__local, "_local").__GuaranteeChannel__sink, "_sink").add$1(0, data);
    },
    $signature: 81
  };
  A.HtmlWebSocketChannel_closure2.prototype = {
    call$1($event) {
      type$.CloseEvent._as($event);
      $event.code;
      $event.reason;
      A._lateReadCheck(A._lateReadCheck(this.$this._html0$_controller.__StreamChannelController__local, "_local").__GuaranteeChannel__sink, "_sink").close$0(0);
    },
    $signature: 82
  };
  A.HtmlWebSocketChannel__listen_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._localCloseCode;
      t1 = t1.innerWebSocket;
      if (t2 != null)
        B.WebSocket_methods.close$1(t1, t2);
      else
        t1.close();
    },
    $signature: 0
  };
  A._HtmlWebSocketSink.prototype = {
    close$1(_, closeCode) {
      var t1 = this._html0$_channel;
      t1._localCloseCode = closeCode;
      t1._localCloseReason = null;
      return this.super$DelegatingStreamSink$close(0);
    },
    $isWebSocketSink: 1
  };
  A.WebSocketChannel.prototype = {
    get$stream(_) {
      return new A.StreamView(this._webSocket, type$.StreamView_dynamic);
    },
    get$sink() {
      var t1 = this._webSocket;
      return new A.WebSocketSink(t1, t1);
    }
  };
  A.WebSocketSink.prototype = {
    close$1(_, closeCode) {
      return this._webSocket.close$2(0, closeCode, null);
    }
  };
  A.WebSocketChannelException.prototype = {
    toString$0(_) {
      return "WebSocketChannelException: " + this.message;
    },
    $isException: 1
  };
  A.Column.prototype = {
    build$1(context) {
      var _null = null;
      return A.Division$(_null, this.children, _null, _null, A.flexStyle(true, this.cross, true, this.main, _null));
    }
  };
  A.Row.prototype = {
    build$1(context) {
      var _this = this;
      return A.Division$(null, _this.children, null, null, A.flexStyle(false, _this.cross, _this.expand, _this.main, _this.wrap));
    }
  };
  A.AxisAlign.prototype = {
    toString$0(_) {
      return "AxisAlign." + this._name;
    }
  };
  A.FlexWrap.prototype = {
    toString$0(_) {
      return "FlexWrap." + this._name;
    }
  };
  A.Flexible.prototype = {
    build$1(context) {
      return A.Division$(this.child, null, null, null, "flex:1;" + B.JSArray_methods.join$0([]) + ";");
    }
  };
  A.onInput_closure.prototype = {
    call$1(e) {
      var t1 = J.get$target$x(type$.EmittedEvent._as(e)._rawEvent);
      t1.toString;
      t1 = type$.InputElement._as(t1).value;
      if (t1 == null)
        t1 = "";
      this.notifier.set$value(0, t1);
    },
    $signature: 14
  };
  A.ClientPersistenceLocalStorage.prototype = {};
  A._ClientPersistenceLocalStorage_Object_ClientPersistence.prototype = {};
  A.Landing.prototype = {
    build$1(context) {
      return B.Column_FmY;
    }
  };
  A.Provider.prototype = {};
  A.RoomSignalsClientView.prototype = {};
  A._RoomSignalsClientViewState.prototype = {
    _rebuild$0() {
      this.setState$1(new A._RoomSignalsClientViewState__rebuild_closure());
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this.get$_rebuild();
      _this.userName.addListener$1(t1);
      _this.messageText.addListener$1(t1);
      _this.roomToken.addListener$1(t1);
      A.RoomSignalsClient_create("https://juancastillo.xyz/graphql-subscription", B.C_ClientPersistencePrefixed).then$1$1(new A._RoomSignalsClientViewState_initState_closure(_this), type$.Null);
    },
    _leaveRoom$1(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$_leaveRoom$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.room.cancelSubscription.call$0(), $async$_leaveRoom$1);
            case 2:
              // returning from await.
              $async$self.setState$1(new A._RoomSignalsClientViewState__leaveRoom_closure($async$self));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_leaveRoom$1, $async$completer);
    },
    _createRoom$1(_) {
      return this._createRoom$body$_RoomSignalsClientViewState(_);
    },
    _createRoom$body$_RoomSignalsClientViewState(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, result, room, e, t2, exception, t1, $async$exception;
      var $async$_createRoom$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              if ($async$self.creatingRoom) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.creatingRoom = true;
              $async$self.setState$1(new A._RoomSignalsClientViewState__createRoom_closure());
              t1.error = null;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A._lateReadCheck($async$self.___RoomSignalsClientViewState_client, "client").client.execute$2$1(new A.CreateRoomMutation($.$get$CREATE_ROOM_MUTATION_DOCUMENT(), "createRoom"), type$.CreateRoom$Mutation, type$.JsonSerializable), $async$_createRoom$1);
            case 7:
              // returning from await.
              result = $async$result;
              t2 = result.data;
              room = t2 == null ? null : A._lateReadCheck(t2.__CreateRoom$Mutation_createRoom, "createRoom");
              $async$goto = room != null ? 8 : 10;
              break;
            case 8:
              // then
              $async$goto = 11;
              return A._asyncAwait($async$self._subscribeToRoom$1(A._lateReadCheck(room.__CreateRoom$Mutation$RoomCreated_token, "token")), $async$_createRoom$1);
            case 11:
              // returning from await.
              // goto join
              $async$goto = 9;
              break;
            case 10:
              // else
              t1.error = result.errors;
            case 9:
              // join
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = A.unwrapException($async$exception);
              t1.error = e;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              if ($async$self._stateful_widget$_element != null)
                $async$self.setState$1(new A._RoomSignalsClientViewState__createRoom_closure0(t1, $async$self));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_createRoom$1, $async$completer);
    },
    _subscribeToRoom$1(token) {
      return this._subscribeToRoom$body$_RoomSignalsClientViewState(token);
    },
    _subscribeToRoom$body$_RoomSignalsClientViewState(token) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Room),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, exception, $async$exception;
      var $async$_subscribeToRoom$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A._lateReadCheck($async$self.___RoomSignalsClientViewState_client, "client").subscribeToRoom$1(token), $async$_subscribeToRoom$1);
            case 7:
              // returning from await.
              $async$self.set$room($async$result);
              $async$self.roomToken.set$value(0, token);
              t1 = $async$self.room;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_subscribeToRoom$1, $async$completer);
    },
    _sendMessage$1(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t3, t4, t1, t2;
      var $async$_sendMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.messageText;
              t2 = t1._value;
              if (B.JSString_methods.trim$0(t2).length === 0) {
                // goto return
                $async$goto = 1;
                break;
              }
              if ($async$self.sendingMessage) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1.set$value(0, "");
              $async$self.sendingMessage = true;
              t3 = A._lateReadCheck($async$self.___RoomSignalsClientViewState_client, "client");
              t4 = A._lateReadCheck($async$self.room.data.$$RoomMixin___$RoomMixin_roomId, "roomId");
              if (!t3.rooms.containsKey$1(0, A._lateReadCheck(t4, "roomId")))
                A.throwExpression(A.Exception_Exception("sendMessage should be called only for subscribed rooms."));
              $async$goto = 3;
              return A._asyncAwait(t3.client.execute$2$1(new A.SendMessageRoomMutation($.$get$SEND_MESSAGE_ROOM_MUTATION_DOCUMENT(), "sendMessageRoom", new A.SendMessageRoomArguments(t4, t2, null, null, null, null, null, null, null, null, null, null, null, null, null)), type$.SendMessageRoom$Mutation, type$.SendMessageRoomArguments), $async$_sendMessage$1);
            case 3:
              // returning from await.
              t3 = $async$result.errors;
              if (t3 != null && t3.length !== 0)
                t1.set$value(0, t2);
              $async$self.sendingMessage = false;
              if ($async$self._stateful_widget$_element != null)
                $async$self.setState$1(new A._RoomSignalsClientViewState__sendMessage_closure());
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_sendMessage$1, $async$completer);
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this, _null = null,
        _s13_ = "userNameInput",
        _s14_ = "roomTokenInput";
      if (_this.loading)
        return A.Text$("Loading...", _null);
      t1 = A.Label$(_s13_, "Username");
      t2 = _this.userName;
      t3 = t2._value;
      t4 = type$.JSArray_Widget;
      t3 = A._setArrayType([t1, B.Span_UW6, A.InputText$(_s13_, A.onInput(t2), _null, t3), A.Button$(A.Text$("Update Name", _null), new A._RoomSignalsClientViewState_build_closure(), _null)], t4);
      if (_this.room != null)
        t3.push(A.Button$(A.Text$("Leave Room", _null), _this.get$_leaveRoom(), "margin-left:20px;"));
      t1 = A.Row$(t3, B.AxisAlign_2, false, B.AxisAlign_2);
      t2 = A.CssStyleDeclaration___new_tearOff();
      t3 = J.getInterceptor$x(t2);
      t3._setPropertyHelper$3(t2, t3._browserPropertyName$1(t2, "border-radius"), "6px", "");
      t2.background = "#f0f3f5";
      t2.padding = "5px";
      t2 = t2.cssText;
      t3 = A._setArrayType([], t4);
      if (_this.room != null) {
        t5 = _this._roomMessages$0();
        t6 = A.Text$("RoomId: " + A._lateReadCheck(_this.room.data.$$RoomMixin___$RoomMixin_roomId, "roomId"), _null);
        t7 = _this.room;
        t8 = A.Text$("Token: " + t7.token, _null);
        t7 = A.Text$("LastUpdate: " + A._lateReadCheck(t7.data.$$RoomMixin___$RoomMixin_lastUpdateDate, "lastUpdateDate").toString$0(0), _null);
        t9 = A.Text$("Created: " + A._lateReadCheck(_this.room.data.$$RoomMixin___$RoomMixin_createdDate, "createdDate").toString$0(0), _null);
        t10 = A.Text$("Users", _null);
        t11 = A._lateReadCheck(_this.room.data.$$RoomMixin___$RoomMixin_users, "users");
        t12 = A.instanceType(t11);
        t3.push(A.Row$(A._setArrayType([new A.Flexible(t5, _null), A.Division$(A.Column$(A._setArrayType([t6, t8, t7, t9, t10, new A.UnOrderedList(_null, _null, "margin:0;padding-left:25px;", _null, _null, _null, _null, A.List_List$of(new A.MappedListIterable(t11, t12._eval$1("Widget(1)")._as(new A._RoomSignalsClientViewState_build_closure0()), t12._eval$1("MappedListIterable<1,Widget>")), true, type$.Widget), _null, _null, _null)], t4), B.AxisAlign_0, B.AxisAlign_0), _null, _null, _null, "text-align:start;font-size:0.8em;width:170px;overflow-wrap:anywhere;padding-left:12px;")], t4), B.AxisAlign_1, true, B.AxisAlign_0));
      } else {
        t5 = A.flexStyle(true, B.AxisAlign_2, false, B.AxisAlign_2, _null);
        t6 = A.Button$(A.Text$("Create Room", _null), _this.get$_createRoom(), _null);
        t7 = A.Text$("Or use a room token", "padding:12px 18px;font-size:1.2em;");
        t8 = A.Label$(_s14_, "Token");
        t9 = _this.roomToken;
        t10 = t9._value;
        t3.push(A.Division$(_null, A._setArrayType([t6, t7, A.Row$(A._setArrayType([t8, B.Span_UW6, A.InputText$(_s14_, A.onInput(t9), _null, t10), A.Button$(A.Text$("Enter Room", _null), new A._RoomSignalsClientViewState_build_closure1(_this), _null)], t4), B.AxisAlign_2, true, B.AxisAlign_0)], t4), _null, _null, t5 + ";padding:32px;"));
      }
      return A.Division$(A.Column$(A._setArrayType([t1, B.Span_lMQ, A.Division$(_null, t3, _null, _null, t2)], t4), B.AxisAlign_3, B.AxisAlign_0), _null, _null, _null, "height:350px;max-width:600px;");
    },
    _roomMessages$0() {
      var t2, t3, t4, _this = this, _null = null,
        t1 = _this.room;
      t1 = t1 == null ? _null : A._lateReadCheck(t1.data.$$RoomMixin___$RoomMixin_roomId, "roomId");
      t1 = _this.messages.$index(0, t1);
      if (t1 == null)
        t1 = B.List_empty1;
      t2 = type$.Widget;
      t2 = A.List_List$of(J.map$1$1$ax(t1, new A._RoomSignalsClientViewState__roomMessages_closure(_this), t2), true, t2);
      t1 = _this.messageText;
      t3 = t1._value;
      t4 = type$.JSArray_Widget;
      return A.Column$(A._setArrayType([new A.ListView("overflow-y:auto;", t2, new A.Key("messageList")), B.Span_zbf, A.Row$(A._setArrayType([new A.Flexible(A.InputText$("message-input", A.onInput(t1), "width:100%;", t3), _null), A.Button$(A.Text$("Send", _null), _this.get$_sendMessage(), _null)], t4), B.AxisAlign_2, true, B.AxisAlign_0)], t4), B.AxisAlign_2, B.AxisAlign_1);
    },
    set$room(room) {
      this.room = type$.nullable_Room._as(room);
    }
  };
  A._RoomSignalsClientViewState__rebuild_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState_initState_closure.prototype = {
    call$1(value) {
      var t1;
      type$.RoomSignalsClient._as(value);
      t1 = this.$this;
      if (t1._stateful_widget$_element == null)
        return;
      t1.setState$1(new A._RoomSignalsClientViewState_initState__closure(t1, value));
    },
    $signature: 84
  };
  A._RoomSignalsClientViewState_initState__closure.prototype = {
    call$0() {
      var t2, t3, _s6_ = "client",
        t1 = this.$this;
      A._lateWriteOnceCheck(t1.___RoomSignalsClientViewState_client, _s6_);
      t2 = t1.___RoomSignalsClientViewState_client = this.value;
      t3 = A._lateReadCheck(t2.userCreated.__CreateUser$Mutation$UserCreated_user, "user").$$UserMixin_name;
      if (t3 == null)
        t3 = "";
      t1.userName.set$value(0, t3);
      t1.loading = false;
      t2 = t2.rooms;
      if (t2.__js_helper$_length !== 0) {
        t2 = t2.get$values(t2);
        t1.set$room(t2._f.call$1(J.get$first$ax(t2.__internal$_iterable)));
        t1.roomToken.set$value(0, t1.room.token);
      }
      t2 = A._lateReadCheck(t1.___RoomSignalsClientViewState_client, _s6_)._messageController;
      new A._BroadcastStream(t2, A._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(new A._RoomSignalsClientViewState_initState___closure(t1));
      t2 = A._lateReadCheck(t1.___RoomSignalsClientViewState_client, _s6_)._roomChangeController;
      new A._BroadcastStream(t2, A._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(new A._RoomSignalsClientViewState_initState___closure0(t1));
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState_initState___closure.prototype = {
    call$1($event) {
      var t1 = this.$this;
      t1.setState$1(new A._RoomSignalsClientViewState_initState____closure0(t1, type$.$RoomMessageMixin._as($event)));
    },
    $signature: 85
  };
  A._RoomSignalsClientViewState_initState____closure0.prototype = {
    call$0() {
      var t1 = this.event;
      J.add$1$ax(this.$this.messages.putIfAbsent$2(0, A._lateReadCheck(t1.$$RoomMessageMixin___$RoomMessageMixin_roomId, "roomId"), new A._RoomSignalsClientViewState_initState_____closure()), t1);
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState_initState_____closure.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_$RoomMessageMixin);
    },
    $signature: 86
  };
  A._RoomSignalsClientViewState_initState___closure0.prototype = {
    call$1($event) {
      type$.Room._as($event);
      this.$this.setState$1(new A._RoomSignalsClientViewState_initState____closure());
    },
    $signature: 87
  };
  A._RoomSignalsClientViewState_initState____closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState__leaveRoom_closure.prototype = {
    call$0() {
      this.$this.room = null;
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState__createRoom_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState__createRoom_closure0.prototype = {
    call$0() {
      this.$this.creatingRoom = false;
      var t1 = this._box_0.error;
      if (t1 != null)
        J.toString$0$(t1);
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState__sendMessage_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RoomSignalsClientViewState_build_closure.prototype = {
    call$1($event) {
      type$.EmittedEvent._as($event);
    },
    $signature: 14
  };
  A._RoomSignalsClientViewState_build_closure0.prototype = {
    call$1(e) {
      var t1, t2, _null = null, _s6_ = "userId";
      type$.$RoomMixin$User._as(e);
      t1 = A._lateReadCheck(e.$$UserMixin___$UserMixin_userId, _s6_);
      t2 = e.$$UserMixin_name;
      if (t2 == null)
        t2 = A._lateReadCheck(e.$$UserMixin___$UserMixin_userId, _s6_);
      return new A.ListItem(_null, _null, _null, _null, _null, _null, A.Text$(t2 + (e.$$UserMixin_name == null ? "" : "(" + A._lateReadCheck(e.$$UserMixin___$UserMixin_userId, _s6_) + ")"), _null), _null, _null, _null, new A.Key(t1));
    },
    $signature: 88
  };
  A._RoomSignalsClientViewState_build_closure1.prototype = {
    call$1($event) {
      var t1;
      type$.EmittedEvent._as($event);
      t1 = this.$this;
      t1._subscribeToRoom$1(t1.roomToken._value);
    },
    $signature: 14
  };
  A._RoomSignalsClientViewState__roomMessages_closure.prototype = {
    call$1(e) {
      var t1;
      type$.$RoomMessageMixin._as(e);
      t1 = A._lateReadCheck(A._lateReadCheck(e.$$RoomMessageMixin___$RoomMessageMixin_user, "user").$$UserMixin___$UserMixin_userId, "userId") === A._lateReadCheck(A._lateReadCheck(A._lateReadCheck(this.$this.___RoomSignalsClientViewState_client, "client").userCreated.__CreateUser$Mutation$UserCreated_user, "user").$$UserMixin___$UserMixin_userId, "userId") ? B.AxisAlign_1 : B.AxisAlign_0;
      return A.Column$(A._setArrayType([A.Text$(A._lateReadCheck(e.$$RoomMessageMixin___$RoomMessageMixin_content, "content"), null), A.Text$(A._lateReadCheck(e.$$RoomMessageMixin___$RoomMessageMixin_createdDate, "createdDate").toString$0(0), "font-size:0.7em;")], type$.JSArray_Widget), t1, B.AxisAlign_0);
    },
    $signature: 89
  };
  A.Theme.prototype = {};
  A.CardTheme.prototype = {};
  A.Card.prototype = {
    build$1(context) {
      var _null = null,
        t1 = A.Provider_maybeOf(context, type$.CardTheme);
      if (t1 == null)
        t1 = A.Provider_maybeOf(context, type$.Theme) == null ? _null : B.C_CardTheme;
      t1 = t1 == null ? _null : "width:170px;";
      if (t1 == null)
        t1 = "";
      return A.Division$(this.child, _null, _null, _null, "box-shadow:1px 2px 4px rgba(0, 0, 0, 0.4); padding:14px;border-radius:6px;margin:6px;" + t1);
    }
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.JsLinkedHashMap.prototype;
    _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;
    _.super$JsLinkedHashMap$internalGet = _.internalGet$1;
    _.super$JsLinkedHashMap$internalSet = _.internalSet$2;
    _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;
    _ = A._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = A._BufferingStreamSubscription.prototype;
    _.super$_BufferingStreamSubscription$_add = _._async$_add$1;
    _.super$_BufferingStreamSubscription$_addError = _._addError$2;
    _ = A._HashMap.prototype;
    _.super$_HashMap$_containsKey = _._containsKey$1;
    _.super$_HashMap$_get = _._get$1;
    _.super$_HashMap$_set = _._set$2;
    _ = A.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _ = A.Element.prototype;
    _.super$Element$createFragment = _.createFragment$3$treeSanitizer$validator;
    _ = A._SimpleNodeValidator.prototype;
    _.super$_SimpleNodeValidator$allowsAttribute = _.allowsAttribute$3;
    _ = A.DelegatingStreamSink.prototype;
    _.super$DelegatingStreamSink$close = _.close$0;
    _ = A.HTMLWidgetBase.prototype;
    _.super$HTMLWidgetBase$shouldUpdateWidget = _.shouldUpdateWidget$1;
    _ = A.HTMLRenderElementBase.prototype;
    _.super$HTMLRenderElementBase$render = _.render$1$widget;
    _.super$HTMLRenderElementBase$update = _.update$3$newWidget$oldWidget$updateType;
    _ = A.State.prototype;
    _.super$State$initState = _.initState$0;
    _.super$State$dispose = _.dispose$0;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_1_u = hunkHelpers._instance_1u,
      _static = hunkHelpers.installStaticTearOff;
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 25);
    _static_1(A, "_js_helper_GeneralConstantMap__constantMapHashCode$closure", "GeneralConstantMap__constantMapHashCode", 6);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 8);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 8);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 8);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 2);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 4);
    _static_0(A, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    var _;
    _instance_0_u(_ = A._BroadcastSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance(A._BroadcastStreamController.prototype, "get$addError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["addError$2", "addError$1"], 10, 0, 0);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 4);
    _instance_1_i(_ = A._StreamController.prototype, "get$add", "add$1", 5);
    _instance(_, "get$addError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["addError$2", "addError$1"], 10, 0, 0);
    _instance_0_i(_, "get$close", "close$0", 18);
    _instance_1_u(_, "get$_async$_add", "_async$_add$1", 5);
    _instance_2_u(_, "get$_addError", "_addError$2", 4);
    _instance_0_u(_, "get$_async$_close", "_async$_close$0", 0);
    _instance_0_u(_ = A._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_0_u(_ = A._BufferingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_0_u(A._DoneStreamSubscription.prototype, "get$_sendDone", "_sendDone$0", 0);
    _instance_0_u(_ = A._ForwardingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_u(_, "get$_handleData", "_handleData$1", 5);
    _instance_2_u(_, "get$_handleError", "_handleError$2", 40);
    _instance_0_u(_, "get$_handleDone", "_handleDone$0", 0);
    _static_2(A, "collection___defaultEquals$closure", "_defaultEquals", 13);
    _static_1(A, "collection___defaultHashCode$closure", "_defaultHashCode", 6);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 16);
    _static_1(A, "core__identityHashCode$closure", "identityHashCode", 6);
    _static_2(A, "core__identical$closure", "identical", 13);
    _static(A, "html__Html5NodeValidator__standardAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__standardAttributeValidator"], 15, 0);
    _static(A, "html__Html5NodeValidator__uriAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__uriAttributeValidator"], 15, 0);
    _instance_1_i(A.WebSocket.prototype, "get$send", "send$1", 2);
    _instance_2_u(_ = A.DeepCollectionEquality.prototype, "get$equals", "equals$2", 13);
    _instance_1_i(_, "get$hash", "hash$1", 6);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 9);
    _static_2(A, "equatable_utils___combine$closure", "_combine", 91);
    _static_1(A, "link_WebSocketLink__defaultGraphQLSocketMessageEncoder$closure", "WebSocketLink__defaultGraphQLSocketMessageEncoder", 92);
    _static_1(A, "link_WebSocketLink__defaultGraphQLSocketMessageDecoder$closure", "WebSocketLink__defaultGraphQLSocketMessageDecoder", 93);
    _instance_0_u(A.WatchfulRenderElement.prototype, "get$frameworkAfterMount", "frameworkAfterMount$0", 0);
    _instance_1_u(A.Framework.prototype, "get$processTask", "processTask$1", 63);
    _instance_1_u(A.BrowserWindow.prototype, "get$_psOnPopState", "_psOnPopState$1", 27);
    _instance_1_u(A.DebugService.prototype, "get$presentException", "presentException$1", 66);
    _instance_1_u(A.EventsService.prototype, "get$_events_service$_handle", "_events_service$_handle$1", 11);
    _instance_1_u(_ = A.RouterService.prototype, "get$_onPopState", "_onPopState$1", 27);
    _instance_1_u(_, "get$_proccessRouterRequest", "_proccessRouterRequest$1", 68);
    _instance_1_u(A.RoomSignalsClient.prototype, "get$subscribeToRoom", "subscribeToRoom$1", 71);
    _instance(_ = A.Subject.prototype, "get$addError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["addError$2", "addError$1"], 10, 0, 0);
    _instance_1_i(_, "get$add", "add$1", 5);
    _instance_0_i(_, "get$close", "close$0", 18);
    _instance_0_u(_ = A._RoomSignalsClientViewState.prototype, "get$_rebuild", "_rebuild$0", 0);
    _instance_1_u(_, "get$_leaveRoom", "_leaveRoom$1", 7);
    _instance_1_u(_, "get$_createRoom", "_createRoom$1", 7);
    _instance_1_u(_, "get$_sendMessage", "_sendMessage$1", 7);
    _static(A, "uuid_util_UuidUtil_mathRNG$closure", 0, function() {
      return {seed: -1};
    }, ["call$1$seed", "call$0"], ["UuidUtil_mathRNG", function() {
      return A.UuidUtil_mathRNG(-1);
    }], 62, 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.Iterable, A.CastIterator, A.Error, A.Closure, A.ListIterator, A.Iterator, A.ExpandIterator, A.EmptyIterator, A.FixedLengthListMixin, A.ConstantMap, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.MapMixin, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._MatchImplementation, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A._AsyncStarStreamController, A._IterationMarker, A._SyncStarIterator, A.AsyncError, A.Stream, A._BufferingStreamSubscription, A._BroadcastStreamController, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.StreamSubscription, A.StreamTransformerBase, A._StreamController, A._SyncStreamControllerDispatch, A._AsyncStreamControllerDispatch, A._StreamSinkWrapper, A._AddStreamState, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A.__SetBase_Object_SetMixin, A._HashSetIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._ListBase_Object_ListMixin, A.ListMixin, A.SetMixin, A._SetBase_Object_SetMixin, A.Codec, A._JsonStringifier, A._Utf8Encoder, A.DateTime, A.Duration, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Expando, A.CssStyleDeclarationBase, A.EventStreamProvider, A._Html5NodeValidator, A.ImmutableListMixin, A.NodeValidatorBuilder, A._SimpleNodeValidator, A._SvgNodeValidator, A.FixedSizeListIterator, A._DOMWindowCrossFrame, A._SameOriginUriPolicy, A._ValidatingTreeSanitizer, A._StructuredClone, A._AcceptStructuredClone, A.NullRejectionException, A._JSRandom, A._Random, A.ArtemisClient, A.Equatable, A.GraphQLResponse, A.DelegatingStreamSink, A.DefaultEquality, A.IterableEquality, A.ListEquality, A._UnorderedEquality, A._MapEntry, A.MapEquality, A.DeepCollectionEquality, A.EquatableMixin, A.Node0, A.Visitor, A.ContextEntry, A.Context, A.GraphQLError, A.ErrorLocation, A.Operation, A.Request, A.Response, A.LinkException, A.Link, A.RequestSerializer, A.ResponseParser, A.JsonSerializable, A.JsonSerializable0, A.RenderElement, A.DomNodePatch, A.DomNodePatchFillable, A.Key, A.DebugOptions, A.RouterOptions, A.Framework, A.AppComponent, A.Components, A.WindowDelegate, A.Window, A.DumbNodeValidator, A.JobQueue, A.Reconciler, A._CompatibilityHashGenerator, A._Renderer_Object_ServicesResolver, A.WidgetActionObject, A.WidgetUpdateObject, A._Service_Object_ServicesResolver, A.EmittedEvent, A.RouterStack, A.RouterStackEntry, A.SchedulerTask, A.Services, A.ServicesRegistry, A.ServicesResolver, A.ChangeNotifier, A.Widget, A.State, A.$UserMixin, A.$RoomMixin, A.$RoomMessageMixin, A.ClientPersistence, A._ClientPersistencePrefixed_Object_ClientPersistence, A.RoomSignalsClient, A.Room, A._Wrapper, A._StartWithStreamSink, A._StartWithErrorStreamSink, A.ErrorAndStackTrace, A.ValueWrapper, A.StreamChannelMixin, A._GuaranteeSink, A.StreamChannelController, A.Uuid, A.WebSocketChannelException, A._ClientPersistenceLocalStorage_Object_ClientPersistence, A.Theme, A.CardTheme]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, A.NativeByteBuffer, A.NativeTypedData]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, A.EventTarget, A.Blob, A.Event, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.DomException, A.DomImplementation, A.DomTokenList, A.History, A._HtmlCollection_JavaScriptObject_ListMixin, A.Location, A._NodeList_JavaScriptObject_ListMixin, A._Storage_JavaScriptObject_MapMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Iterable, [A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.ExpandIterable, A.TakeIterable, A.SkipIterable, A._ConstantMapKeyIterable, A.IterableBase]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A.AssertionError, A._Error, A.JsonUnsupportedObjectError, A.NullThrownError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A.CyclicInitializationError]);
    _inheritMany(A.Closure, [A.Closure0Args, A.GeneralConstantMap__typeTest_closure, A.Closure2Args, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._asyncStarHelper_closure0, A._SyncBroadcastStreamController__sendData_closure, A._SyncBroadcastStreamController__sendError_closure, A._SyncBroadcastStreamController__sendDone_closure, A.Future_wait_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A.Stream_first_closure0, A._RootZone_bindUnaryCallbackGuarded_closure, A._CustomHashMap_closure, A._LinkedCustomHashMap_closure, A.MapMixin_entries_closure, A.DateTime_parse_parseIntOrZero, A.DateTime_parse_parseMilliAndMicroseconds, A._createTables_setChars, A._createTables_setRange, A.Element_Element$html_closure, A._EventStreamSubscription_closure, A._EventStreamSubscription_onData_closure, A.NodeValidatorBuilder_allowsElement_closure, A.NodeValidatorBuilder_allowsAttribute_closure, A._SimpleNodeValidator_closure, A._SimpleNodeValidator_closure0, A._TemplatingNodeValidator_closure, A.CssClassSetImpl_add_closure, A.FilteredElementList__iterable_closure, A.FilteredElementList__iterable_closure0, A.FilteredElementList_removeRange_closure, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.ArtemisClient_stream_closure, A.SingleSubscriptionTransformer_bind_closure0, A._combine_closure0, A.mapPropsToString_closure, A._PrintVisitor_visitDocumentNode_closure, A._PrintVisitor_visitDirectiveSetNode_closure, A._PrintVisitor_visitVariableDefinitionSetNode_closure, A._PrintVisitor_visitArgumentSetNode_closure, A._PrintVisitor_visitSelectionSetNode_closure, A.ResponseParser_parseResponse_closure, A.ResponseParser_parseError_closure, A.WebSocketLink_request__closure0, A.WebSocketLink_request__closure1, A.WebSocketLink_request___closure, A.WebSocketLink_request___closure0, A.WebSocketLink_request___closure1, A.WebSocketLink_request__closure, A.WebSocketLink__connect_closure, A.WebSocketLink__connect__closure0, A.WebSocketLink__connect__closure, A.WebSocketLink__connect_closure1, A.WebSocketLink__parseSocketMessage__tryCastErrors, A.WebSocketLink__parseSocketMessage__tryCastErrors_closure, A.EventsService__collectListeners_collectEventListeners, A._$CreateRoom$Mutation$RoomCreated$RoomFromJson_closure, A._$CreateRoom$Mutation$RoomCreated$RoomToJson_closure, A._$EventsRoom$Subscription$RoomEvent$RoomFromJson_closure, A._$EventsRoom$Subscription$RoomEvent$RoomToJson_closure, A.RoomSignalsClient__syncPersistence_closure, A.RoomSignalsClient_subscribeToRoom_closure, A.RoomSignalsClient_subscribeToRoom__closure, A.BehaviorSubject_where_closure, A.BehaviorSubject_transform_closure, A.BehaviorSubject_take_closure, A.forwardStream_runCatching, A.forwardStream__closure2, A._GuaranteeSink__addError_closure, A.HtmlWebSocketChannel_closure, A.HtmlWebSocketChannel_closure0, A.HtmlWebSocketChannel_closure1, A.HtmlWebSocketChannel_closure2, A.onInput_closure, A._RoomSignalsClientViewState_initState_closure, A._RoomSignalsClientViewState_initState___closure, A._RoomSignalsClientViewState_initState___closure0, A._RoomSignalsClientViewState_build_closure, A._RoomSignalsClientViewState_build_closure0, A._RoomSignalsClientViewState_build_closure1, A._RoomSignalsClientViewState__roomMessages_closure]);
    _inheritMany(A.Closure0Args, [A.nullFuture_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._TimerImpl$periodic_closure, A._asyncStarHelper_closure, A._AsyncStarStreamController__resumeBody, A._AsyncStarStreamController__resumeBody_closure, A._AsyncStarStreamController_closure0, A._AsyncStarStreamController_closure1, A._AsyncStarStreamController_closure, A._AsyncStarStreamController__closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__asyncCompleteWithValue_closure, A._Future__chainFuture_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A.Stream_first_closure, A._StreamController__subscribe_closure, A._StreamController__recordCancel_complete, A._AddStreamState_cancel_closure, A._BufferingStreamSubscription__sendError_sendError, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._cancelAndValue_closure, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A.SingleSubscriptionTransformer_bind_closure, A.WebSocketLink_closure, A.WebSocketLink_request_closure, A.WebSocketLink_request_closure0, A.WebSocketLink__connect_closure0, A.Renderer_processWidgetUpdateObjectActionUpdate_closure, A.Renderer_mountWidgets_closure, A.Renderer_dispatchWidgetActions_closure, A.Renderer_dispatchWidgetActions_closure0, A.Renderer_cleanRenderElement_closure, A.Renderer_cleanRenderElement_closure0, A.Renderer_disposeRenderElement_closure, A.Renderer_applyDomNodePatch_job, A.State_setState_closure, A.State_setState_closure0, A.RoomSignalsClient_subscribeToRoom__closure0, A.RoomSignalsClient_subscribeToRoom___closure, A.RoomSignalsClient_subscribeToRoom_closure0, A.BehaviorSubject__deferStream_closure, A.BehaviorSubject__forwardBehaviorSubject_closure0, A.BehaviorSubject__forwardBehaviorSubject_closure, A._StartWithStreamSink_onListen_closure, A._StartWithErrorStreamSink_onListen_closure, A.forwardStream_closure, A.forwardStream__closure1, A.forwardStream___closure1, A.forwardStream___closure, A.forwardStream__closure3, A.forwardStream___closure0, A.forwardStream_closure0, A.forwardStream_closure1, A.forwardStream__closure0, A.forwardStream_closure2, A.forwardStream__closure, A.GuaranteeChannel_closure, A.GuaranteeChannel__closure, A.HtmlWebSocketChannel__listen_closure, A._RoomSignalsClientViewState__rebuild_closure, A._RoomSignalsClientViewState_initState__closure, A._RoomSignalsClientViewState_initState____closure0, A._RoomSignalsClientViewState_initState_____closure, A._RoomSignalsClientViewState_initState____closure, A._RoomSignalsClientViewState__leaveRoom_closure, A._RoomSignalsClientViewState__createRoom_closure, A._RoomSignalsClientViewState__createRoom_closure0, A._RoomSignalsClientViewState__sendMessage_closure]);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeyIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ReversedListIterable, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inheritMany(A.Iterator, [A.MappedIterator, A.WhereIterator, A.TakeIterator, A.SkipIterator]);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inheritMany(A.ConstantMap, [A.ConstantStringMap, A.GeneralConstantMap]);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A._AssertionError, A.AssertionError);
    _inherit(A.MapBase, A.MapMixin);
    _inheritMany(A.MapBase, [A.JsLinkedHashMap, A._HashMap, A._JsonMap, A._AttributeMap]);
    _inheritMany(A.Closure2Args, [A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__chainForeignFuture_closure0, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._createTables_build, A.Storage_keys_closure, A._ValidatingTreeSanitizer_sanitizeTree_walk, A._StructuredClone_walk_closure, A._StructuredClone_walk_closure0, A._AcceptStructuredClone_walk_closure, A._combine_closure, A.Renderer_applyDomNodePatch_job_closure, A.Renderer_applyDomNodePatch_job_closure0, A.RoomSignalsClient_subscribeToRoom_complete, A.forwardStream__closure4]);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inherit(A._SyncStarIterable, A.IterableBase);
    _inheritMany(A.Stream, [A._StreamImpl, A.StreamView, A._ForwardingStream, A._EventStream, A.DeferStream]);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._BroadcastStream, A._ControllerStream);
    _inheritMany(A._BufferingStreamSubscription, [A._ControllerSubscription, A._ForwardingStreamSubscription]);
    _inherit(A._BroadcastSubscription, A._ControllerSubscription);
    _inheritMany(A._BroadcastStreamController, [A._SyncBroadcastStreamController, A._AsyncBroadcastStreamController]);
    _inherit(A._AsyncCompleter, A._Completer);
    _inheritMany(A._StreamController, [A._AsyncStreamController, A._SyncStreamController]);
    _inherit(A._StreamControllerAddStreamState, A._AddStreamState);
    _inheritMany(A._DelayedEvent, [A._DelayedData, A._DelayedError]);
    _inherit(A._StreamImplEvents, A._PendingEvents);
    _inheritMany(A._ForwardingStream, [A._WhereStream, A._MapStream, A._TakeStream, A._TakeWhileStream]);
    _inherit(A._StateStreamSubscription, A._ForwardingStreamSubscription);
    _inherit(A._RootZone, A._Zone);
    _inheritMany(A._HashMap, [A._IdentityHashMap, A._CustomHashMap]);
    _inherit(A._LinkedCustomHashMap, A.JsLinkedHashMap);
    _inherit(A._SetBase, A.__SetBase_Object_SetMixin);
    _inheritMany(A._SetBase, [A._HashSet, A._LinkedHashSet]);
    _inherit(A.ListBase, A._ListBase_Object_ListMixin);
    _inherit(A.SetBase, A._SetBase_Object_SetMixin);
    _inheritMany(A.Codec, [A.Base64Codec, A.Encoding, A.JsonCodec]);
    _inheritMany(A.StreamTransformerBase, [A.Converter, A.SingleSubscriptionTransformer, A.StartWithStreamTransformer, A.StartWithErrorStreamTransformer]);
    _inheritMany(A.Converter, [A.Base64Encoder, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder]);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inherit(A.Utf8Codec, A.Encoding);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.EventTarget, [A.Node, A.MessagePort, A.WebSocket, A.Window0]);
    _inheritMany(A.Node, [A.Element, A.CharacterData, A.Document, A._Attr]);
    _inheritMany(A.Element, [A.HtmlElement, A.SvgElement]);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.BaseElement, A.BodyElement, A.FormElement, A.InputElement, A.SelectElement, A.TableElement, A.TableRowElement, A.TableSectionElement, A.TemplateElement, A.TextAreaElement]);
    _inheritMany(A.Event, [A.CloseEvent, A.UIEvent, A.MessageEvent, A.PopStateEvent, A.VersionChangeEvent]);
    _inherit(A.CssStyleDeclaration, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase);
    _inheritMany(A.ListBase, [A._ChildrenElementList, A._ChildNodeListLazy, A.FilteredElementList]);
    _inherit(A.File, A.Blob);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.HtmlDocument, A.Document);
    _inheritMany(A.UIEvent, [A.KeyboardEvent, A.MouseEvent]);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.Storage, A._Storage_JavaScriptObject_MapMixin);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._ElementAttributeMap, A._AttributeMap);
    _inherit(A.CssClassSetImpl, A.SetBase);
    _inheritMany(A.CssClassSetImpl, [A._ElementCssClassSet, A.AttributeClassSet]);
    _inherit(A._ElementEventStreamImpl, A._EventStream);
    _inherit(A._EventStreamSubscription, A.StreamSubscription);
    _inherit(A._TemplatingNodeValidator, A._SimpleNodeValidator);
    _inherit(A._StructuredCloneDart2Js, A._StructuredClone);
    _inherit(A._AcceptStructuredCloneDart2Js, A._AcceptStructuredClone);
    _inherit(A.ScriptElement0, A.SvgElement);
    _inherit(A.GraphQLQuery, A.Equatable);
    _inherit(A.SetEquality, A._UnorderedEquality);
    _inheritMany(A.Node0, [A.DocumentNode, A.DefinitionNode, A.SelectionSetNode, A.SelectionNode, A.ArgumentNode, A.TypeConditionNode, A.ValueNode, A.VariableDefinitionNode, A.DefaultValueNode, A.TypeNode, A.NameNode]);
    _inherit(A.ExecutableDefinitionNode, A.DefinitionNode);
    _inheritMany(A._Enum, [A.OperationType, A.ConnectionState, A.FieldRename, A.Axis, A.LayoutType, A.InputType, A.DomEventType, A.DomTagType, A.UpdateType, A.WidgetUpdateType, A.WidgetAction, A.SchedulerTaskType, A.AxisAlign, A.FlexWrap]);
    _inheritMany(A.ExecutableDefinitionNode, [A.OperationDefinitionNode, A.FragmentDefinitionNode]);
    _inheritMany(A.SelectionNode, [A.FieldNode, A.FragmentSpreadNode, A.InlineFragmentNode]);
    _inherit(A.VariableNode, A.ValueNode);
    _inherit(A.NamedTypeNode, A.TypeNode);
    _inherit(A._PrintVisitor, A.Visitor);
    _inheritMany(A.ContextEntry, [A.ResponseExtensions, A.RequestId]);
    _inheritMany(A.LinkException, [A.ResponseFormatException, A.ServerException]);
    _inherit(A.WebSocketLinkParserException, A.ResponseFormatException);
    _inherit(A.WebSocketLinkServerException, A.ServerException);
    _inherit(A.WebSocketLink, A.Link);
    _inherit(A.GraphQLSocketMessage, A.JsonSerializable);
    _inheritMany(A.GraphQLSocketMessage, [A.InitOperation, A.StartOperation, A.StopOperation, A.ConnectionAck, A.ConnectionError, A.ConnectionKeepAlive, A.SubscriptionData, A.SubscriptionError, A.SubscriptionComplete, A.UnknownData]);
    _inheritMany(A.RenderElement, [A.WatchfulRenderElement, A.RootRenderElement, A.TemporaryElement, A.HTMLRenderElementBase, A.InheritedRenderElement, A.ListViewRenderElement, A.StatelessRenderElement]);
    _inherit(A.StyleComponent, A.AppComponent);
    _inherit(A.BrowserWindow, A.WindowDelegate);
    _inherit(A.RadStylesComponent, A.StyleComponent);
    _inherit(A.Renderer, A._Renderer_Object_ServicesResolver);
    _inheritMany(A.WidgetUpdateObject, [A.WidgetUpdateObjectActionAdd, A.WidgetUpdateObjectActionAddAllWithoutClean, A.WidgetUpdateObjectActionUpdate, A.WidgetUpdateObjectActionDisposeMultiple, A.WidgetUpdateObjectActionCleanParent]);
    _inherit(A.Service, A._Service_Object_ServicesResolver);
    _inheritMany(A.Service, [A.DebugService, A.EventsService, A.RouterService, A.SchedulerService]);
    _inheritMany(A.SchedulerTask, [A.StimulateListenerTask, A.WidgetsBuildTask, A.WidgetsUpdateTask]);
    _inherit(A.ValueNotifier, A.ChangeNotifier);
    _inheritMany(A.Widget, [A.HTMLWidgetBase, A.InheritedWidget, A.ListView, A.StatefulWidget, A.StatelessWidget]);
    _inheritMany(A.HTMLWidgetBase, [A.HTMLInputBase, A.Anchor, A.Button, A.Division, A.Heading1, A.Heading3, A.Image, A.Label, A.ListItem, A.Paragraph, A.Span, A.UnOrderedList, A.Text]);
    _inheritMany(A.HTMLRenderElementBase, [A.HTMLInputBaseRenderElement, A.AnchorRenderElement, A.ButtonRenderElement, A.ImageRenderElement, A.LabelRenderElement, A.ListItemRenderElement]);
    _inherit(A.InputText, A.HTMLInputBase);
    _inherit(A.StatefulRenderElement, A.WatchfulRenderElement);
    _inheritMany(A.JsonSerializable0, [A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin, A._CreateUser$Mutation$UserCreated_JsonSerializable_EquatableMixin, A._CreateUser$Mutation_JsonSerializable_EquatableMixin, A._$RoomMixin$User_JsonSerializable_EquatableMixin, A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin, A._CreateRoom$Mutation$RoomCreated_JsonSerializable_EquatableMixin, A._CreateRoom$Mutation_JsonSerializable_EquatableMixin, A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin, A._SendMessageRoom$Mutation_JsonSerializable_EquatableMixin, A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin, A._EventsRoom$Subscription$RoomEvent_JsonSerializable_EquatableMixin, A._EventsRoom$Subscription_JsonSerializable_EquatableMixin, A._CreateUserArguments_JsonSerializable_EquatableMixin, A._SendMessageRoomArguments_JsonSerializable_EquatableMixin, A._EventsRoomArguments_JsonSerializable_EquatableMixin]);
    _inherit(A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin_$UserMixin, A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin);
    _inherit(A.CreateUser$Mutation$UserCreated$User, A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin_$UserMixin);
    _inherit(A.CreateUser$Mutation$UserCreated, A._CreateUser$Mutation$UserCreated_JsonSerializable_EquatableMixin);
    _inherit(A.CreateUser$Mutation, A._CreateUser$Mutation_JsonSerializable_EquatableMixin);
    _inherit(A._$RoomMixin$User_JsonSerializable_EquatableMixin_$UserMixin, A._$RoomMixin$User_JsonSerializable_EquatableMixin);
    _inherit(A.$RoomMixin$User, A._$RoomMixin$User_JsonSerializable_EquatableMixin_$UserMixin);
    _inherit(A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin_$RoomMixin, A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin);
    _inherit(A.CreateRoom$Mutation$RoomCreated$Room, A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin_$RoomMixin);
    _inherit(A.CreateRoom$Mutation$RoomCreated, A._CreateRoom$Mutation$RoomCreated_JsonSerializable_EquatableMixin);
    _inherit(A.CreateRoom$Mutation, A._CreateRoom$Mutation_JsonSerializable_EquatableMixin);
    _inherit(A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin_$RoomMessageMixin, A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin);
    _inherit(A.SendMessageRoom$Mutation$RoomMessage, A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin_$RoomMessageMixin);
    _inherit(A.SendMessageRoom$Mutation, A._SendMessageRoom$Mutation_JsonSerializable_EquatableMixin);
    _inherit(A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin_$UserMixin, A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin);
    _inherit(A.$RoomMessageMixin$User, A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin_$UserMixin);
    _inherit(A.EventsRoom$Subscription$RoomEvent, A._EventsRoom$Subscription$RoomEvent_JsonSerializable_EquatableMixin);
    _inheritMany(A.EventsRoom$Subscription$RoomEvent, [A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin, A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin]);
    _inherit(A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMixin, A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin);
    _inherit(A.EventsRoom$Subscription$RoomEvent$Room, A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMixin);
    _inherit(A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMessageMixin, A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin);
    _inherit(A.EventsRoom$Subscription$RoomEvent$RoomMessage, A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMessageMixin);
    _inherit(A.EventsRoom$Subscription, A._EventsRoom$Subscription_JsonSerializable_EquatableMixin);
    _inherit(A.CreateUserArguments, A._CreateUserArguments_JsonSerializable_EquatableMixin);
    _inheritMany(A.GraphQLQuery, [A.CreateUserMutation, A.CreateRoomMutation, A.SendMessageRoomMutation, A.EventsRoomSubscription]);
    _inherit(A.SendMessageRoomArguments, A._SendMessageRoomArguments_JsonSerializable_EquatableMixin);
    _inherit(A.EventsRoomArguments, A._EventsRoomArguments_JsonSerializable_EquatableMixin);
    _inherit(A.ClientPersistencePrefixed, A._ClientPersistencePrefixed_Object_ClientPersistence);
    _inherit(A.Subject, A.StreamView);
    _inherit(A.BehaviorSubject, A.Subject);
    _inheritMany(A.StreamChannelMixin, [A.GuaranteeChannel, A.HtmlWebSocketChannel, A.WebSocketChannel]);
    _inheritMany(A.DelegatingStreamSink, [A._HtmlWebSocketSink, A.WebSocketSink]);
    _inheritMany(A.StatelessWidget, [A.Column, A.Row, A.Flexible, A.Landing, A.Card]);
    _inherit(A.ClientPersistenceLocalStorage, A._ClientPersistenceLocalStorage_Object_ClientPersistence);
    _inherit(A.Provider, A.InheritedWidget);
    _inherit(A.RoomSignalsClientView, A.StatefulWidget);
    _inherit(A._RoomSignalsClientViewState, A.State);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._AsyncStreamController, A._AsyncStreamControllerDispatch);
    _mixin(A._SyncStreamController, A._SyncStreamControllerDispatch);
    _mixin(A._ListBase_Object_ListMixin, A.ListMixin);
    _mixin(A._SetBase_Object_SetMixin, A.SetMixin);
    _mixin(A.__SetBase_Object_SetMixin, A.SetMixin);
    _mixin(A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleDeclarationBase);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._Storage_JavaScriptObject_MapMixin, A.MapMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._Renderer_Object_ServicesResolver, A.ServicesResolver);
    _mixin(A._Service_Object_ServicesResolver, A.ServicesResolver);
    _mixin(A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._$RoomMessageMixin$User_JsonSerializable_EquatableMixin_$UserMixin, A.$UserMixin);
    _mixin(A._$RoomMixin$User_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._$RoomMixin$User_JsonSerializable_EquatableMixin_$UserMixin, A.$UserMixin);
    _mixin(A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixinHard(A._CreateRoom$Mutation$RoomCreated$Room_JsonSerializable_EquatableMixin_$RoomMixin, A.$RoomMixin);
    _mixin(A._CreateRoom$Mutation$RoomCreated_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._CreateRoom$Mutation_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._CreateUser$Mutation$UserCreated$User_JsonSerializable_EquatableMixin_$UserMixin, A.$UserMixin);
    _mixin(A._CreateUser$Mutation$UserCreated_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._CreateUser$Mutation_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._CreateUserArguments_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin, A.EquatableMixin);
    _mixinHard(A._EventsRoom$Subscription$RoomEvent$Room_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMixin, A.$RoomMixin);
    _mixin(A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin, A.EquatableMixin);
    _mixinHard(A._EventsRoom$Subscription$RoomEvent$RoomMessage_EventsRoom$Subscription$RoomEvent_EquatableMixin_$RoomMessageMixin, A.$RoomMessageMixin);
    _mixin(A._EventsRoom$Subscription$RoomEvent_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._EventsRoom$Subscription_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._EventsRoomArguments_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixinHard(A._SendMessageRoom$Mutation$RoomMessage_JsonSerializable_EquatableMixin_$RoomMessageMixin, A.$RoomMessageMixin);
    _mixin(A._SendMessageRoom$Mutation_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._SendMessageRoomArguments_JsonSerializable_EquatableMixin, A.EquatableMixin);
    _mixin(A._ClientPersistencePrefixed_Object_ClientPersistence, A.ClientPersistence);
    _mixin(A._ClientPersistenceLocalStorage_Object_ClientPersistence, A.ClientPersistence);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    types: ["~()", "Null()", "~(@)", "Null(@)", "~(Object,StackTrace)", "~(Object?)", "int(Object?)", "Future<~>(@)", "~(~())", "bool(Object?)", "~(Object[StackTrace?])", "~(Event)", "Future<~>()", "bool(Object?,Object?)", "~(EmittedEvent)", "bool(Element,String,String,_Html5NodeValidator)", "@(@)", "bool(String)", "Future<@>()", "bool(@)", "~(Object?,Object?)", "int(String?)", "~(Uint8List,String,int)", "bool(Node)", "bool(NodeValidator)", "int(@,@)", "bool(GraphQLSocketMessage)", "~(PopStateEvent)", "~(String,String?)", "$RoomMixin$User(@)", "Map<String,@>($RoomMixin$User)", "Null(Event)", "Null(Object,StackTrace)", "String(String)", "~(Node,Node?)", "~(@,@)", "Null(@,@)", "@(@,@)", "bool(Set<String>)", "Element(Node)", "~(@,StackTrace)", "_Future<@>?()", "@(String)", "@(@,String)", "String(Object?)", "String(DefinitionNode)", "String(DirectiveNode)", "String(VariableDefinitionNode)", "String(ArgumentNode)", "List<String>(SelectionNode)", "GraphQLError(@)", "ErrorLocation(@)", "WebSocketChannel()", "bool(ConnectionState)", "~(ConnectionState)", "~(String,int)", "~(GraphQLSocketMessage)", "bool(Request)", "~(String,int?)", "~(Request)", "~(Timer)", "Null(Object)", "Uint8List({seed:int})", "~(SchedulerTask)", "int(int,int)", "Uint8List(@,@)", "~(Exception)", "~(RenderElement)", "~(RouterRequest)", "Null(~())", "_Future<@>(@)", "Future<Room>(String)", "String(Room)", "~(Object?,StackTrace?)", "~(GraphQLResponse<EventsRoom$Subscription>)", "Room(Room)", "Room()", "~(String,String)", "~(Object,StackTrace?)", "Future<List<@>>()", "Null(@,StackTrace)", "~(MessageEvent)", "Null(CloseEvent)", "~(int,@)", "Null(RoomSignalsClient)", "~($RoomMessageMixin)", "List<$RoomMessageMixin>()", "~(Room)", "ListItem($RoomMixin$User)", "Column($RoomMessageMixin)", "Future<Null>()", "int(int,@)", "String(Map<String,@>)", "Map<String,@>?(@)", "List<Map<String,Object?>>?(List<Object?>)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti")
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","AElement":"SvgElement","GraphicsElement":"SvgElement","OpenDBRequest":"EventTarget","Request0":"EventTarget","AudioElement":"HtmlElement","MediaElement":"HtmlElement","ShadowRoot":"Node","DocumentFragment":"Node","XmlDocument":"Document","PointerEvent":"MouseEvent","CompositionEvent":"UIEvent","CDataSection":"CharacterData","Text0":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","JSBool":{"bool":[]},"JSNull":{"Null":[]},"LegacyJavaScriptObject":{"JSObject":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"]},"JSNumNotInt":{"double":[],"num":[],"Comparable":["num"]},"JSString":{"String":[],"Comparable":["String"],"Pattern":[]},"_CastIterableBase":{"Iterable":["2"]},"CastIterator":{"Iterator":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListMixin.E":"2","Iterable.E":"2"},"LateError":{"Error":[]},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListIterable.E":"2","Iterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"ExpandIterator":{"Iterator":["2"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"EmptyIterator":{"Iterator":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"_AssertionError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"JSSyntaxRegExp":{"RegExp":[],"Pattern":[]},"_MatchImplementation":{"Match":[]},"StringMatch":{"Match":[]},"_StringAllMatchesIterator":{"Iterator":["Match"]},"NativeByteBuffer":{"ByteBuffer":[]},"NativeByteData":{"NativeTypedData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"NativeTypedData":[]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"]},"NativeTypedArrayOfInt":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeFloat32List":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeFloat64List":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeInt16List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt32List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt8List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint16List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint32List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8ClampedList":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8List":{"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"],"_BufferingStreamSubscription.T":"1"},"_TimerImpl":{"Timer":[]},"_AsyncAwaitCompleter":{"Completer":["1"]},"_SyncStarIterator":{"Iterator":["1"]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_BroadcastStream":{"_ControllerStream":["1"],"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_BroadcastSubscription":{"_ControllerSubscription":["1"],"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"],"_BufferingStreamSubscription.T":"1"},"_BroadcastStreamController":{"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_SyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_Completer":{"Completer":["1"]},"_AsyncCompleter":{"_Completer":["1"],"Completer":["1"]},"StreamView":{"Stream":["1"],"Stream.T":"1"},"StreamTransformerBase":{"StreamTransformer":["1","2"]},"_StreamController":{"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_AsyncStreamController":{"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_SyncStreamController":{"_SyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"],"_BufferingStreamSubscription.T":"1"},"_StreamSinkWrapper":{"StreamSink":["1"],"EventSink":["1"]},"_StreamControllerAddStreamState":{"_AddStreamState":["1"]},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedError":{"_DelayedEvent":["@"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_StreamImplEvents":{"_PendingEvents":["1"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_ForwardingStream":{"Stream":["2"]},"_ForwardingStreamSubscription":{"_BufferingStreamSubscription":["2"],"StreamSubscription":["2"],"_EventSink":["2"],"_EventDispatch":["2"],"_BufferingStreamSubscription.T":"2","_ForwardingStreamSubscription.S":"1","_ForwardingStreamSubscription.T":"2"},"_WhereStream":{"_ForwardingStream":["1","1"],"Stream":["1"],"Stream.T":"1","_ForwardingStream.T":"1","_ForwardingStream.S":"1"},"_MapStream":{"_ForwardingStream":["1","2"],"Stream":["2"],"Stream.T":"2","_ForwardingStream.T":"2","_ForwardingStream.S":"1"},"_TakeStream":{"_ForwardingStream":["1","1"],"Stream":["1"],"Stream.T":"1","_ForwardingStream.T":"1","_ForwardingStream.S":"1"},"_StateStreamSubscription":{"_ForwardingStreamSubscription":["2","2"],"_BufferingStreamSubscription":["2"],"StreamSubscription":["2"],"_EventSink":["2"],"_EventDispatch":["2"],"_BufferingStreamSubscription.T":"2","_ForwardingStreamSubscription.S":"2","_ForwardingStreamSubscription.T":"2"},"_TakeWhileStream":{"_ForwardingStream":["1","1"],"Stream":["1"],"Stream.T":"1","_ForwardingStream.T":"1","_ForwardingStream.S":"1"},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"_HashMap":{"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_IdentityHashMap":{"_HashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_CustomHashMap":{"_HashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashMapKeyIterator":{"Iterator":["1"]},"_LinkedCustomHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_HashSet":{"SetMixin":["1"],"HashSet":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"SetMixin.E":"1"},"_HashSetIterator":{"Iterator":["1"]},"_LinkedHashSet":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"SetMixin.E":"1"},"_LinkedHashSetIterator":{"Iterator":["1"]},"IterableBase":{"Iterable":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListIterable.E":"String","Iterable.E":"String"},"Base64Codec":{"Codec":["List<int>","String"],"Codec.S":"List<int>"},"Base64Encoder":{"Converter":["List<int>","String"],"StreamTransformer":["List<int>","String"]},"Converter":{"StreamTransformer":["1","2"]},"Encoding":{"Codec":["String","List<int>"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"],"Codec.S":"Object?"},"JsonEncoder":{"Converter":["Object?","String"],"StreamTransformer":["Object?","String"]},"JsonDecoder":{"Converter":["String","Object?"],"StreamTransformer":["String","Object?"]},"Utf8Codec":{"Codec":["String","List<int>"],"Codec.S":"String"},"Utf8Encoder":{"Converter":["String","List<int>"],"StreamTransformer":["String","List<int>"]},"DateTime":{"Comparable":["DateTime"]},"double":{"num":[],"Comparable":["num"]},"Duration":{"Comparable":["Duration"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"String":{"Comparable":["String"],"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"StringBuffer":{"StringSink":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"CloseEvent":{"Event":[]},"Element":{"Node":[],"EventTarget":[]},"KeyboardEvent":{"Event":[]},"MessageEvent":{"Event":[]},"MouseEvent":{"Event":[]},"Node":{"EventTarget":[]},"PopStateEvent":{"Event":[]},"_Html5NodeValidator":{"NodeValidator":[]},"HtmlElement":{"Element":[],"Node":[],"EventTarget":[]},"AnchorElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"AreaElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"BaseElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"BodyElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"CharacterData":{"Node":[],"EventTarget":[]},"Document":{"Node":[],"EventTarget":[]},"_ChildrenElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"File":{"Blob":[]},"FormElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"HtmlCollection":{"ListMixin":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node","ImmutableListMixin.E":"Node"},"HtmlDocument":{"Node":[],"EventTarget":[]},"InputElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"MessagePort":{"EventTarget":[]},"_ChildNodeListLazy":{"ListMixin":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node"},"NodeList":{"ListMixin":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node","ImmutableListMixin.E":"Node"},"SelectElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"Storage":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"TableElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TableRowElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TableSectionElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TemplateElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"TextAreaElement":{"HtmlElement":[],"Element":[],"Node":[],"EventTarget":[]},"UIEvent":{"Event":[]},"WebSocket":{"EventTarget":[]},"Window0":{"WindowBase":[],"EventTarget":[]},"_Attr":{"Node":[],"EventTarget":[]},"_NamedNodeMap":{"ListMixin":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node","ImmutableListMixin.E":"Node"},"_AttributeMap":{"MapMixin":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.K":"String","MapMixin.V":"String"},"_ElementCssClassSet":{"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"SetMixin.E":"String"},"_EventStream":{"Stream":["1"],"Stream.T":"1"},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"],"Stream.T":"1"},"_EventStreamSubscription":{"StreamSubscription":["1"]},"NodeValidatorBuilder":{"NodeValidator":[]},"_SimpleNodeValidator":{"NodeValidator":[]},"_TemplatingNodeValidator":{"NodeValidator":[]},"_SvgNodeValidator":{"NodeValidator":[]},"FixedSizeListIterator":{"Iterator":["1"]},"_DOMWindowCrossFrame":{"WindowBase":[],"EventTarget":[]},"_SameOriginUriPolicy":{"UriPolicy":[]},"_ValidatingTreeSanitizer":{"NodeTreeSanitizer":[]},"CssClassSetImpl":{"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"]},"FilteredElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"VersionChangeEvent":{"Event":[]},"NullRejectionException":{"Exception":[]},"ScriptElement0":{"SvgElement":[],"Element":[],"Node":[],"EventTarget":[]},"AttributeClassSet":{"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"SetMixin.E":"String"},"SvgElement":{"Element":[],"Node":[],"EventTarget":[]},"DelegatingStreamSink":{"StreamSink":["1"],"EventSink":["1"]},"SingleSubscriptionTransformer":{"StreamTransformer":["1","2"]},"DefaultEquality":{"Equality":["1"]},"IterableEquality":{"Equality":["Iterable<1>"]},"ListEquality":{"Equality":["List<1>"]},"_UnorderedEquality":{"Equality":["2"]},"SetEquality":{"_UnorderedEquality":["1","Set<1>"],"Equality":["Set<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Set<1>"},"MapEquality":{"Equality":["Map<1,2>"]},"DeepCollectionEquality":{"Equality":["@"]},"DefinitionNode":{"Node0":[]},"SelectionNode":{"Node0":[]},"ArgumentNode":{"Node0":[]},"VariableDefinitionNode":{"Node0":[]},"DirectiveNode":{"Node0":[]},"DocumentNode":{"Node0":[]},"ExecutableDefinitionNode":{"DefinitionNode":[],"Node0":[]},"OperationDefinitionNode":{"DefinitionNode":[],"Node0":[]},"SelectionSetNode":{"Node0":[]},"FieldNode":{"SelectionNode":[],"Node0":[]},"FragmentSpreadNode":{"SelectionNode":[],"Node0":[]},"InlineFragmentNode":{"SelectionNode":[],"Node0":[]},"FragmentDefinitionNode":{"DefinitionNode":[],"Node0":[]},"TypeConditionNode":{"Node0":[]},"ValueNode":{"Node0":[]},"VariableNode":{"ValueNode":[],"Node0":[]},"DefaultValueNode":{"Node0":[]},"TypeNode":{"Node0":[]},"NamedTypeNode":{"TypeNode":[],"Node0":[]},"NameNode":{"Node0":[]},"_PrintVisitor":{"Visitor":["String"]},"RequestExtensionsThunk":{"ContextEntry":[]},"ResponseExtensions":{"ContextEntry":[]},"LinkException":{"Exception":[]},"ResponseFormatException":{"Exception":[]},"ServerException":{"Exception":[]},"WebSocketLinkParserException":{"Exception":[]},"WebSocketLinkServerException":{"Exception":[]},"RequestId":{"ContextEntry":[]},"WebSocketLink":{"Link":[]},"ConnectionKeepAlive":{"GraphQLSocketMessage":[]},"InitOperation":{"GraphQLSocketMessage":[]},"StartOperation":{"GraphQLSocketMessage":[]},"StopOperation":{"GraphQLSocketMessage":[]},"ConnectionAck":{"GraphQLSocketMessage":[]},"ConnectionError":{"GraphQLSocketMessage":[]},"SubscriptionData":{"GraphQLSocketMessage":[]},"SubscriptionError":{"GraphQLSocketMessage":[]},"SubscriptionComplete":{"GraphQLSocketMessage":[]},"UnknownData":{"GraphQLSocketMessage":[]},"RenderElement":{"BuildContext":[]},"WatchfulRenderElement":{"RenderElement":[],"BuildContext":[]},"RootRenderElement":{"RenderElement":[],"BuildContext":[]},"TemporaryElement":{"RenderElement":[],"BuildContext":[]},"DomNodePatchFillable":{"DomNodePatch":[]},"BrowserWindow":{"WindowDelegate":[]},"RadStylesComponent":{"StyleComponent":[]},"DumbNodeValidator":{"NodeValidator":[]},"WidgetUpdateObjectActionAdd":{"WidgetUpdateObject":[]},"WidgetUpdateObjectActionAddAllWithoutClean":{"WidgetUpdateObject":[]},"WidgetUpdateObjectActionUpdate":{"WidgetUpdateObject":[]},"WidgetUpdateObjectActionDisposeMultiple":{"WidgetUpdateObject":[]},"WidgetUpdateObjectActionCleanParent":{"WidgetUpdateObject":[]},"DebugService":{"Service":[]},"EventsService":{"Service":[]},"RouterService":{"Service":[]},"SchedulerService":{"Service":[]},"StimulateListenerTask":{"SchedulerTask":[]},"WidgetsBuildTask":{"SchedulerTask":[]},"WidgetsUpdateTask":{"SchedulerTask":[]},"HTMLInputBase":{"HTMLWidgetBase":[],"Widget":[]},"HTMLInputBaseRenderElement":{"RenderElement":[],"BuildContext":[]},"HTMLWidgetBase":{"Widget":[]},"HTMLRenderElementBase":{"RenderElement":[],"BuildContext":[]},"InputText":{"HTMLInputBase":[],"HTMLWidgetBase":[],"Widget":[]},"Anchor":{"HTMLWidgetBase":[],"Widget":[]},"AnchorRenderElement":{"RenderElement":[],"BuildContext":[]},"Button":{"HTMLWidgetBase":[],"Widget":[]},"ButtonRenderElement":{"RenderElement":[],"BuildContext":[]},"Division":{"HTMLWidgetBase":[],"Widget":[]},"Heading1":{"HTMLWidgetBase":[],"Widget":[]},"Heading3":{"HTMLWidgetBase":[],"Widget":[]},"Image":{"HTMLWidgetBase":[],"Widget":[]},"ImageRenderElement":{"RenderElement":[],"BuildContext":[]},"Label":{"HTMLWidgetBase":[],"Widget":[]},"LabelRenderElement":{"RenderElement":[],"BuildContext":[]},"ListItem":{"HTMLWidgetBase":[],"Widget":[]},"ListItemRenderElement":{"RenderElement":[],"BuildContext":[]},"Paragraph":{"HTMLWidgetBase":[],"Widget":[]},"Span":{"HTMLWidgetBase":[],"Widget":[]},"UnOrderedList":{"HTMLWidgetBase":[],"Widget":[]},"InheritedWidget":{"Widget":[]},"InheritedRenderElement":{"RenderElement":[],"BuildContext":[]},"ListView":{"Widget":[]},"ListViewRenderElement":{"RenderElement":[],"BuildContext":[]},"StatefulWidget":{"Widget":[]},"StatefulRenderElement":{"RenderElement":[],"BuildContext":[]},"StatelessWidget":{"Widget":[]},"StatelessRenderElement":{"RenderElement":[],"BuildContext":[]},"Text":{"HTMLWidgetBase":[],"Widget":[]},"CreateUser$Mutation":{"JsonSerializable0":[],"EquatableMixin":[]},"$RoomMixin$User":{"JsonSerializable0":[],"EquatableMixin":[]},"CreateRoom$Mutation":{"JsonSerializable0":[],"EquatableMixin":[]},"SendMessageRoom$Mutation":{"JsonSerializable0":[],"EquatableMixin":[]},"EventsRoom$Subscription":{"JsonSerializable0":[],"EquatableMixin":[]},"CreateUserArguments":{"JsonSerializable0":[],"EquatableMixin":[]},"SendMessageRoomArguments":{"JsonSerializable0":[],"EquatableMixin":[]},"EventsRoomArguments":{"JsonSerializable0":[],"EquatableMixin":[]},"CreateUser$Mutation$UserCreated$User":{"JsonSerializable0":[],"EquatableMixin":[]},"CreateUser$Mutation$UserCreated":{"JsonSerializable0":[],"EquatableMixin":[]},"CreateRoom$Mutation$RoomCreated$Room":{"JsonSerializable0":[],"EquatableMixin":[],"$RoomMixin":[]},"CreateRoom$Mutation$RoomCreated":{"JsonSerializable0":[],"EquatableMixin":[]},"SendMessageRoom$Mutation$RoomMessage":{"JsonSerializable0":[],"EquatableMixin":[],"$RoomMessageMixin":[]},"$RoomMessageMixin$User":{"JsonSerializable0":[],"EquatableMixin":[]},"EventsRoom$Subscription$RoomEvent$Room":{"EventsRoom$Subscription$RoomEvent":[],"JsonSerializable0":[],"EquatableMixin":[],"$RoomMixin":[]},"EventsRoom$Subscription$RoomEvent$RoomMessage":{"EventsRoom$Subscription$RoomEvent":[],"JsonSerializable0":[],"EquatableMixin":[],"$RoomMessageMixin":[]},"EventsRoom$Subscription$RoomEvent":{"JsonSerializable0":[],"EquatableMixin":[]},"CreateUserMutation":{"GraphQLQuery":["CreateUser$Mutation","CreateUserArguments"]},"CreateRoomMutation":{"GraphQLQuery":["CreateRoom$Mutation","JsonSerializable0"]},"SendMessageRoomMutation":{"GraphQLQuery":["SendMessageRoom$Mutation","SendMessageRoomArguments"]},"EventsRoomSubscription":{"GraphQLQuery":["EventsRoom$Subscription","EventsRoomArguments"]},"ClientPersistencePrefixed":{"ClientPersistence":[]},"DeferStream":{"Stream":["1"],"Stream.T":"1"},"BehaviorSubject":{"Subject":["1"],"StreamController":["1"],"StreamSink":["1"],"StreamView":["1"],"EventSink":["1"],"Stream":["1"],"Stream.T":"1"},"Subject":{"StreamController":["1"],"StreamSink":["1"],"StreamView":["1"],"EventSink":["1"],"Stream":["1"]},"StartWithStreamTransformer":{"StreamTransformer":["1","1"]},"StartWithErrorStreamTransformer":{"StreamTransformer":["1","1"]},"GuaranteeChannel":{"StreamChannel":["1"]},"_GuaranteeSink":{"StreamSink":["1"],"EventSink":["1"]},"StreamChannelMixin":{"StreamChannel":["1"]},"HtmlWebSocketChannel":{"WebSocketChannel":[],"StreamChannel":["@"]},"_HtmlWebSocketSink":{"WebSocketSink":[],"DelegatingStreamSink":["@"],"StreamSink":["@"],"EventSink":["@"],"DelegatingStreamSink.T":"@"},"WebSocketChannel":{"StreamChannel":["@"]},"WebSocketSink":{"DelegatingStreamSink":["@"],"StreamSink":["@"],"EventSink":["@"],"DelegatingStreamSink.T":"@"},"WebSocketChannelException":{"Exception":[]},"Column":{"StatelessWidget":[],"Widget":[]},"Row":{"StatelessWidget":[],"Widget":[]},"Flexible":{"StatelessWidget":[],"Widget":[]},"ClientPersistenceLocalStorage":{"ClientPersistence":[]},"Landing":{"StatelessWidget":[],"Widget":[]},"Provider":{"InheritedWidget":[],"Widget":[]},"RoomSignalsClientView":{"StatefulWidget":[],"Widget":[]},"_RoomSignalsClientViewState":{"State":["RoomSignalsClientView"],"State.T":"RoomSignalsClientView"},"Card":{"StatelessWidget":[],"Widget":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"NavigatorRenderElement":{"RenderElement":[],"BuildContext":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"__CastListBase__CastIterableBase_ListMixin":2,"NativeTypedArray":1,"StreamTransformerBase":2,"IterableBase":1,"ListBase":1,"MapBase":2,"SetBase":1,"_SetBase":1,"_ListBase_Object_ListMixin":1,"_SetBase_Object_SetMixin":1,"__SetBase_Object_SetMixin":1,"StreamChannelMixin":1,"JsonConverter":2}'));
  var string$ = {
    Cannot: "Cannot fire new event. Controller is already firing an event",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    Expand: "Expandos are not allowed on strings, numbers, booleans or null",
    max_mu: "max must be in range 0 < max \u2264 2^32, was "
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      $RoomMessageMixin: findType("$RoomMessageMixin"),
      $RoomMixin$User: findType("$RoomMixin$User"),
      $env_1_1_int: findType("@<int>"),
      $env_1_1_void: findType("@<~>"),
      Anchor: findType("Anchor"),
      ArgumentNode: findType("ArgumentNode"),
      AsyncError: findType("AsyncError"),
      BaseElement: findType("BaseElement"),
      BehaviorSubject_ConnectionState: findType("BehaviorSubject<ConnectionState>"),
      Blob: findType("Blob"),
      BodyElement: findType("BodyElement"),
      Button: findType("Button"),
      ByteBuffer: findType("ByteBuffer"),
      CardTheme: findType("CardTheme"),
      CloseEvent: findType("CloseEvent"),
      Comparable_dynamic: findType("Comparable<@>"),
      ConnectionState: findType("ConnectionState"),
      ContextEntry: findType("ContextEntry"),
      CreateRoom$Mutation: findType("CreateRoom$Mutation"),
      CreateUser$Mutation: findType("CreateUser$Mutation"),
      CreateUserArguments: findType("CreateUserArguments"),
      DateTime: findType("DateTime"),
      DefinitionNode: findType("DefinitionNode"),
      DirectiveNode: findType("DirectiveNode"),
      DomEventType: findType("DomEventType"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element"),
      EmittedEvent: findType("EmittedEvent"),
      EquatableMixin: findType("EquatableMixin"),
      Error: findType("Error"),
      ErrorLocation: findType("ErrorLocation"),
      Event: findType("Event"),
      EventsRoom$Subscription: findType("EventsRoom$Subscription"),
      EventsRoom$Subscription$RoomEvent$Room: findType("EventsRoom$Subscription$RoomEvent$Room"),
      EventsRoom$Subscription$RoomEvent$RoomMessage: findType("EventsRoom$Subscription$RoomEvent$RoomMessage"),
      EventsRoomArguments: findType("EventsRoomArguments"),
      File: findType("File"),
      Function: findType("Function"),
      FutureOr_WebSocketChannel_Function: findType("WebSocketChannel/()"),
      Future_dynamic: findType("Future<@>"),
      Future_void: findType("Future<~>"),
      GraphQLError: findType("GraphQLError"),
      GraphQLResponse_EventsRoom$Subscription: findType("GraphQLResponse<EventsRoom$Subscription>"),
      GraphQLSocketMessage: findType("GraphQLSocketMessage"),
      HTMLInputBase: findType("HTMLInputBase"),
      HTMLWidgetBase: findType("HTMLWidgetBase"),
      Image: findType("Image"),
      InheritedWidget: findType("InheritedWidget"),
      InputElement: findType("InputElement"),
      IterableEquality_dynamic: findType("IterableEquality<@>"),
      Iterable_ArgumentNode: findType("Iterable<ArgumentNode>"),
      Iterable_DirectiveNode: findType("Iterable<DirectiveNode>"),
      Iterable_Node: findType("Iterable<Node>"),
      Iterable_RenderElement: findType("Iterable<RenderElement>"),
      Iterable_VariableDefinitionNode: findType("Iterable<VariableDefinitionNode>"),
      Iterable_WidgetUpdateObject: findType("Iterable<WidgetUpdateObject>"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_$RoomMessageMixin: findType("JSArray<$RoomMessageMixin>"),
      JSArray_ArgumentNode: findType("JSArray<ArgumentNode>"),
      JSArray_DefinitionNode: findType("JSArray<DefinitionNode>"),
      JSArray_DirectiveNode: findType("JSArray<DirectiveNode>"),
      JSArray_DomEventType: findType("JSArray<DomEventType>"),
      JSArray_Future_dynamic: findType("JSArray<Future<@>>"),
      JSArray_NodeValidator: findType("JSArray<NodeValidator>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_RenderElement: findType("JSArray<RenderElement>"),
      JSArray_Request: findType("JSArray<Request>"),
      JSArray_SelectionNode: findType("JSArray<SelectionNode>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_VariableDefinitionNode: findType("JSArray<VariableDefinitionNode>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray_WidgetActionObject: findType("JSArray<WidgetActionObject>"),
      JSArray_WidgetUpdateObject: findType("JSArray<WidgetUpdateObject>"),
      JSArray__CompatibilityHashGenerator: findType("JSArray<_CompatibilityHashGenerator>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_EmittedEvent: findType("JSArray<~(EmittedEvent)>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsonSerializable: findType("JsonSerializable0"),
      KeyboardEvent: findType("KeyboardEvent"),
      Label: findType("Label"),
      ListEquality_dynamic: findType("ListEquality<@>"),
      ListItem: findType("ListItem"),
      ListView: findType("ListView"),
      List_$RoomMessageMixin: findType("List<$RoomMessageMixin>"),
      List_$RoomMixin$User: findType("List<$RoomMixin$User>"),
      List_String: findType("List<String>"),
      List_Widget: findType("List<Widget>"),
      List_WidgetActionObject: findType("List<WidgetActionObject>"),
      List_WidgetAction_Function_RenderElement: findType("List<WidgetAction>(RenderElement)"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_of_nullable_void_Function: findType("List<~()?>"),
      List_of_void_Function_EmittedEvent: findType("List<~(EmittedEvent)>"),
      Location: findType("Location"),
      MapEquality_dynamic_dynamic: findType("MapEquality<@,@>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_DomEventType_and_nullable_void_Function_EmittedEvent: findType("Map<DomEventType,~(EmittedEvent)?>"),
      Map_of_String_and_nullable_Object: findType("Map<String,Object?>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MessageEvent: findType("MessageEvent"),
      MessagePort: findType("MessagePort"),
      MouseEvent: findType("MouseEvent"),
      NativeByteBuffer: findType("NativeByteBuffer"),
      NativeTypedData: findType("NativeTypedData"),
      NavigatorLink: findType("NavigatorLink"),
      NavigatorRenderElement: findType("NavigatorRenderElement"),
      Node: findType("Node"),
      NodeValidator: findType("NodeValidator"),
      Node_2: findType("Node0"),
      Null: findType("Null"),
      Object: findType("Object"),
      PopStateEvent: findType("PopStateEvent"),
      RegExp: findType("RegExp"),
      RenderElement: findType("RenderElement"),
      Request: findType("Request"),
      RequestExtensionsThunk: findType("RequestExtensionsThunk"),
      RequestId: findType("RequestId"),
      Response: findType("Response"),
      ResponseExtensions: findType("ResponseExtensions"),
      ReversedListIterable_RenderElement: findType("ReversedListIterable<RenderElement>"),
      Room: findType("Room"),
      RoomSignalsClient: findType("RoomSignalsClient"),
      RouterRequest: findType("RouterRequest"),
      RouterStackEntry: findType("RouterStackEntry"),
      SchedulerTask: findType("SchedulerTask"),
      ScriptElement: findType("ScriptElement0"),
      SelectionNode: findType("SelectionNode"),
      SendMessageRoom$Mutation: findType("SendMessageRoom$Mutation"),
      SendMessageRoomArguments: findType("SendMessageRoomArguments"),
      Services: findType("Services"),
      SetEquality_dynamic: findType("SetEquality<@>"),
      Set_String: findType("Set<String>"),
      Set_dynamic: findType("Set<@>"),
      StackTrace: findType("StackTrace"),
      StatefulWidget: findType("StatefulWidget"),
      StatelessWidget: findType("StatelessWidget"),
      StreamChannelController_dynamic: findType("StreamChannelController<@>"),
      StreamSubscription_Event: findType("StreamSubscription<Event>"),
      StreamView_dynamic: findType("StreamView<@>"),
      Stream_dynamic: findType("Stream<@>"),
      String: findType("String"),
      String_Function_String: findType("String(String)"),
      StyleComponent: findType("StyleComponent"),
      SvgElement: findType("SvgElement"),
      Symbol: findType("Symbol"),
      TemplateElement: findType("TemplateElement"),
      TextAreaElement: findType("TextAreaElement"),
      Theme: findType("Theme"),
      Timer: findType("Timer"),
      Type: findType("Type"),
      TypeError: findType("TypeError"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      Uri: findType("Uri"),
      ValueNotifier_String: findType("ValueNotifier<String>"),
      ValueWrapper_ConnectionState: findType("ValueWrapper<ConnectionState>"),
      VariableDefinitionNode: findType("VariableDefinitionNode"),
      Visitor_String: findType("Visitor<String>"),
      Widget: findType("Widget"),
      WidgetUpdateObjectActionAdd: findType("WidgetUpdateObjectActionAdd"),
      WidgetUpdateObjectActionAddAllWithoutClean: findType("WidgetUpdateObjectActionAddAllWithoutClean"),
      WidgetUpdateObjectActionCleanParent: findType("WidgetUpdateObjectActionCleanParent"),
      WidgetUpdateObjectActionDispose: findType("WidgetUpdateObjectActionDispose"),
      WidgetUpdateObjectActionDisposeMultiple: findType("WidgetUpdateObjectActionDisposeMultiple"),
      WidgetUpdateObjectActionUpdate: findType("WidgetUpdateObjectActionUpdate"),
      WidgetsBuildTask: findType("WidgetsBuildTask"),
      WidgetsDisposeTask: findType("WidgetsDisposeTask"),
      WidgetsManageTask: findType("WidgetsManageTask"),
      WidgetsUpdateDependentTask: findType("WidgetsUpdateDependentTask"),
      WidgetsUpdateTask: findType("WidgetsUpdateTask"),
      WindowBase: findType("WindowBase"),
      _AsyncBroadcastStreamController_$RoomMessageMixin: findType("_AsyncBroadcastStreamController<$RoomMessageMixin>"),
      _AsyncBroadcastStreamController_ConnectionState: findType("_AsyncBroadcastStreamController<ConnectionState>"),
      _AsyncBroadcastStreamController_GraphQLSocketMessage: findType("_AsyncBroadcastStreamController<GraphQLSocketMessage>"),
      _AsyncBroadcastStreamController_Room: findType("_AsyncBroadcastStreamController<Room>"),
      _AsyncBroadcastStreamController_SchedulerTask: findType("_AsyncBroadcastStreamController<SchedulerTask>"),
      _AsyncCompleter_Room: findType("_AsyncCompleter<Room>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _Attr: findType("_Attr"),
      _ChildNodeListLazy: findType("_ChildNodeListLazy"),
      _EventStream_CloseEvent: findType("_EventStream<CloseEvent>"),
      _EventStream_Event: findType("_EventStream<Event>"),
      _Future_Null: findType("_Future<Null>"),
      _Future_Room: findType("_Future<Room>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _Html5NodeValidator: findType("_Html5NodeValidator"),
      _MapEntry: findType("_MapEntry"),
      _StreamControllerAddStreamState_nullable_Object: findType("_StreamControllerAddStreamState<Object?>"),
      _Wrapper_ConnectionState: findType("_Wrapper<ConnectionState>"),
      bool: findType("bool"),
      bool_Function_Object: findType("bool(Object)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_Set_String: findType("@(Set<String>)"),
      dynamic_Function_dynamic_dynamic: findType("@(@,@)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_ContextEntry: findType("ContextEntry?"),
      nullable_EventTarget: findType("EventTarget?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_of_String_and_nullable_Object: findType("Map<String,Object?>?"),
      nullable_Object: findType("Object?"),
      nullable_Room: findType("Room?"),
      nullable_StackTrace: findType("StackTrace?"),
      nullable_StreamController_RouterRequest: findType("StreamController<RouterRequest>?"),
      nullable_StreamController_SchedulerTask: findType("StreamController<SchedulerTask>?"),
      nullable_StreamSubscription_SchedulerTask: findType("StreamSubscription<SchedulerTask>?"),
      nullable_String: findType("String?"),
      nullable_WebSocketChannel: findType("WebSocketChannel?"),
      nullable__DelayedEvent_dynamic: findType("_DelayedEvent<@>?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable__LinkedHashSetCell: findType("_LinkedHashSetCell?"),
      nullable_dynamic_Function_Event: findType("@(Event)?"),
      nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object: findType("Object?(Object?,Object?)?"),
      nullable_nullable_Object_Function_dynamic: findType("Object?(@)?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_EmittedEvent: findType("~(EmittedEvent)?"),
      nullable_void_Function_Exception: findType("~(Exception)?"),
      nullable_void_Function_MessageEvent: findType("~(MessageEvent)?"),
      nullable_void_Function_PopStateEvent: findType("~(PopStateEvent)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Event: findType("~(Event)"),
      void_Function_KeyboardEvent: findType("~(KeyboardEvent)"),
      void_Function_MouseEvent: findType("~(MouseEvent)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_PopStateEvent: findType("~(PopStateEvent)"),
      void_Function_SchedulerTask: findType("~(SchedulerTask)"),
      void_Function_String_String: findType("~(String,String)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_Timer: findType("~(Timer)"),
      void_Function_int_dynamic: findType("~(int,@)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.AnchorElement_methods = A.AnchorElement.prototype;
    B.BodyElement_methods = A.BodyElement.prototype;
    B.CssStyleDeclaration_methods = A.CssStyleDeclaration.prototype;
    B.DomImplementation_methods = A.DomImplementation.prototype;
    B.HtmlDocument_methods = A.HtmlDocument.prototype;
    B.InputElement_methods = A.InputElement.prototype;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.NodeList_methods = A.NodeList.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.TableElement_methods = A.TableElement.prototype;
    B.TextAreaElement_methods = A.TextAreaElement.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.WebSocket_methods = A.WebSocket.prototype;
    B.AxisAlign_0 = new A.AxisAlign("start");
    B.AxisAlign_1 = new A.AxisAlign("end");
    B.AxisAlign_2 = new A.AxisAlign("center");
    B.AxisAlign_3 = new A.AxisAlign("stretch");
    B.Axis_1 = new A.Axis("vertical");
    B.C_Base64Encoder = new A.Base64Encoder();
    B.C_Base64Codec = new A.Base64Codec();
    B.C_CardTheme = new A.CardTheme();
    B.C_ClientPersistenceLocalStorage = new A.ClientPersistenceLocalStorage();
    B.C_ClientPersistencePrefixed = new A.ClientPersistencePrefixed();
    B.C_DebugOptions = new A.DebugOptions();
    B.C_DefaultEquality = new A.DefaultEquality(A.findType("DefaultEquality<0&>"));
    B.C_DeepCollectionEquality = new A.DeepCollectionEquality();
    B.C_DumbNodeValidator = new A.DumbNodeValidator();
    B.C_EmptyIterator = new A.EmptyIterator(A.findType("EmptyIterator<0&>"));
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_RequestSerializer = new A.RequestSerializer();
    B.C_ResponseParser = new A.ResponseParser();
    B.C_RouterOptions = new A.RouterOptions();
    B.C_Theme = new A.Theme();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C__DelayedDone = new A._DelayedDone();
    B.C__JSRandom = new A._JSRandom();
    B.C__RootZone = new A._RootZone();
    B.C__StringStackTrace = new A._StringStackTrace();
    B.Text_yzT = new A.Text(null, null, null, null, null, "Room Signals", null, null, null, null, null);
    B.Heading1_CJv = new A.Heading1(null, null, "margin:8px 0;", null, null, null, B.Text_yzT, null, null, null, null);
    B.Text_HP1 = new A.Text(null, null, null, null, null, "Leto GraphQL Dart server example", null, null, null, null, null);
    B.Anchor_23h = new A.Anchor("https://github.com/juancastillo0/leto", "_blank", null, null, null, null, null, null, B.Text_HP1, null, null, null, null);
    B.Heading3_rLG = new A.Heading3(null, null, "margin:5px 0;", null, null, null, B.Anchor_23h, null, null, null, null);
    B.Text_s9n = new A.Text(null, null, null, null, null, "A simple web socket enabled GraphQL server for managing rooms and message subscriptions.", null, null, null, null, null);
    B.Paragraph_XP7 = new A.Paragraph(null, null, "max-width:500px;", null, null, null, B.Text_s9n, null, null, null, null);
    B.Text_8Wd = new A.Text(null, null, null, null, null, "Schema", null, null, null, null, null);
    B.Anchor_j4A = new A.Anchor("https://juancastillo.xyz/graphql-schema", null, null, null, "padding-bottom:12px;", null, null, null, B.Text_8Wd, null, null, null, null);
    B.Text_KFe = new A.Text(null, null, null, null, null, "Download the complete GraphQL server API.", null, null, null, null, null);
    B.List_wOi = A._setArrayType(makeConstList([B.Anchor_j4A, B.Text_KFe]), type$.JSArray_Widget);
    B.Column_gc6 = new A.Column(B.List_wOi, B.AxisAlign_0, B.AxisAlign_2, null);
    B.Card_o0y = new A.Card(B.Column_gc6, null);
    B.Text_oCX = new A.Text(null, null, null, null, null, "Interactive Schema", null, null, null, null, null);
    B.Anchor_rFe = new A.Anchor("https://juancastillo.xyz/graphql-schema-interactive", null, null, null, "padding-bottom:12px;", null, null, null, B.Text_oCX, null, null, null, null);
    B.Text_tEt = new A.Text(null, null, null, null, null, "View and interact with the GraphQL server API.", null, null, null, null, null);
    B.List_6pl = A._setArrayType(makeConstList([B.Anchor_rFe, B.Text_tEt]), type$.JSArray_Widget);
    B.Column_1E0 = new A.Column(B.List_6pl, B.AxisAlign_0, B.AxisAlign_2, null);
    B.Card_CxF = new A.Card(B.Column_1E0, null);
    B.Text_46y = new A.Text(null, null, null, null, null, "Github Code Repository", null, null, null, null, null);
    B.Anchor_wsa = new A.Anchor("https://github.com/juancastillo0/room_signals", "_blank", null, null, "padding-bottom:12px;", null, null, null, B.Text_46y, null, null, null, null);
    B.Text_5AA = new A.Text(null, null, null, null, null, "The source code of the Dart server and client.", null, null, null, null, null);
    B.List_GNU = A._setArrayType(makeConstList([B.Anchor_wsa, B.Text_5AA]), type$.JSArray_Widget);
    B.Column_CjA = new A.Column(B.List_GNU, B.AxisAlign_0, B.AxisAlign_2, null);
    B.Card_weg = new A.Card(B.Column_CjA, null);
    B.List_C9B = A._setArrayType(makeConstList([B.Card_o0y, B.Card_CxF, B.Card_weg]), type$.JSArray_Widget);
    B.FlexWrap_0 = new A.FlexWrap("wrap");
    B.Row_CR9 = new A.Row(B.List_C9B, B.AxisAlign_2, B.AxisAlign_3, B.FlexWrap_0, true, null);
    B.Text_9KN = new A.Text(null, null, null, null, null, "UI Explorers", null, null, null, null, null);
    B.Heading3_pHk = new A.Heading3(null, null, null, null, null, null, B.Text_9KN, null, null, null, null);
    B.Paragraph_ww8 = new A.Paragraph(null, null, "margin-top:0;max-width:500px;", null, null, "Explore the schema and documentation, and create and execute queries with autocompletion using the following tools.", null, null, null, null, null);
    B.Text_YbV = new A.Text(null, null, null, null, null, "Altair", null, null, null, null, null);
    B.Anchor_sJO = new A.Anchor("https://juancastillo.xyz/graphql-altair", null, null, null, "padding-bottom:12px;", null, null, null, B.Text_YbV, null, null, null, null);
    B.Image_Cbk = new A.Image("https://cdn.jsdelivr.net/npm/altair-static@4.0.9/build/dist/assets/img/logo.svg", "35px", "35px", null, null, "padding:7.5px;", null, null, null, null, null, null, null, null);
    B.List_OHh = A._setArrayType(makeConstList([B.Anchor_sJO, B.Image_Cbk]), type$.JSArray_Widget);
    B.Column_fLp = new A.Column(B.List_OHh, B.AxisAlign_0, B.AxisAlign_2, null);
    B.Card_osW = new A.Card(B.Column_fLp, null);
    B.Text_YYi = new A.Text(null, null, null, null, null, "Playground", null, null, null, null, null);
    B.Anchor_CBs = new A.Anchor("https://juancastillo.xyz/graphql-playground", null, null, null, "padding-bottom:12px;", null, null, null, B.Text_YYi, null, null, null, null);
    B.Image_A8O = new A.Image("https://cdn.jsdelivr.net/npm/graphql-playground-react/build/favicon.png", "50px", "50px", null, null, null, null, null, null, null, null, null, null, null);
    B.List_QIt = A._setArrayType(makeConstList([B.Anchor_CBs, B.Image_A8O]), type$.JSArray_Widget);
    B.Column_c1H = new A.Column(B.List_QIt, B.AxisAlign_0, B.AxisAlign_2, null);
    B.Card_cdS = new A.Card(B.Column_c1H, null);
    B.Text_9Uv = new A.Text(null, null, null, null, null, "GraphiQL", null, null, null, null, null);
    B.List_4QF = A._setArrayType(makeConstList([B.Text_9Uv]), type$.JSArray_Widget);
    B.Span_zoj = new A.Span(null, null, null, null, null, null, null, B.List_4QF, null, null, null);
    B.Anchor_4i6 = new A.Anchor("https://juancastillo.xyz/graphql-graphiql", null, null, null, "padding-bottom:12px;", null, null, null, B.Span_zoj, null, null, null, null);
    B.Text_2Vk = new A.Text(null, null, null, null, null, "The classic GraphQL explorer.", null, null, null, null, null);
    B.List_zXG = A._setArrayType(makeConstList([B.Anchor_4i6, B.Text_2Vk]), type$.JSArray_Widget);
    B.Column_yxq = new A.Column(B.List_zXG, B.AxisAlign_0, B.AxisAlign_2, null);
    B.Card_IoN = new A.Card(B.Column_yxq, null);
    B.List_lTd = A._setArrayType(makeConstList([B.Card_osW, B.Card_cdS, B.Card_IoN]), type$.JSArray_Widget);
    B.Row_AWD = new A.Row(B.List_lTd, B.AxisAlign_2, B.AxisAlign_3, B.FlexWrap_0, true, null);
    B.Text_49G = new A.Text(null, null, null, null, null, "Try the Client", null, null, null, null, null);
    B.Heading3_AQQ = new A.Heading3(null, null, null, null, null, null, B.Text_49G, null, null, null, null);
    B.RoomSignalsClientView_null = new A.RoomSignalsClientView(null);
    B.List_6Cs = A._setArrayType(makeConstList([B.Heading1_CJv, B.Heading3_rLG, B.Paragraph_XP7, B.Row_CR9, B.Heading3_pHk, B.Paragraph_ww8, B.Row_AWD, B.Heading3_AQQ, B.RoomSignalsClientView_null]), type$.JSArray_Widget);
    B.Column_FmY = new A.Column(B.List_6Cs, B.AxisAlign_0, B.AxisAlign_2, null);
    B.ConnectionState_0 = new A.ConnectionState("closed");
    B.ConnectionState_1 = new A.ConnectionState("connecting");
    B.ConnectionState_2 = new A.ConnectionState("open");
    B.List_empty3 = A._setArrayType(makeConstList([]), A.findType("JSArray<Type>"));
    B.Map_empty0 = new A.ConstantStringMap(0, {}, B.List_empty3, A.findType("ConstantStringMap<Type,ContextEntry>"));
    B.Context_Map_empty = new A.Context(B.Map_empty0);
    B.DomEventType_change_change = new A.DomEventType("change", "change");
    B.DomEventType_click_click = new A.DomEventType("click", "click");
    B.DomEventType_dblclick_doubleClick = new A.DomEventType("dblclick", "doubleClick");
    B.DomEventType_drag_drag = new A.DomEventType("drag", "drag");
    B.DomEventType_dragend_dragEnd = new A.DomEventType("dragend", "dragEnd");
    B.DomEventType_dragenter_dragEnter = new A.DomEventType("dragenter", "dragEnter");
    B.DomEventType_dragleave_dragLeave = new A.DomEventType("dragleave", "dragLeave");
    B.DomEventType_dragover_dragOver = new A.DomEventType("dragover", "dragOver");
    B.DomEventType_dragstart_dragStart = new A.DomEventType("dragstart", "dragStart");
    B.DomEventType_drop_drop = new A.DomEventType("drop", "drop");
    B.DomEventType_input_input = new A.DomEventType("input", "input");
    B.DomEventType_keydown_keyDown = new A.DomEventType("keydown", "keyDown");
    B.DomEventType_keypress_keyPress = new A.DomEventType("keypress", "keyPress");
    B.DomEventType_keyup_keyUp = new A.DomEventType("keyup", "keyUp");
    B.DomEventType_mousedown_mouseDown = new A.DomEventType("mousedown", "mouseDown");
    B.DomEventType_mouseenter_mouseEnter = new A.DomEventType("mouseenter", "mouseEnter");
    B.DomEventType_mouseleave_mouseLeave = new A.DomEventType("mouseleave", "mouseLeave");
    B.DomEventType_mousemove_mouseMove = new A.DomEventType("mousemove", "mouseMove");
    B.DomEventType_mouseout_mouseOut = new A.DomEventType("mouseout", "mouseOut");
    B.DomEventType_mouseover_mouseOver = new A.DomEventType("mouseover", "mouseOver");
    B.DomEventType_mouseup_mouseUp = new A.DomEventType("mouseup", "mouseUp");
    B.DomEventType_submit_submit = new A.DomEventType("submit", "submit");
    B.DomTagType_a_anchor = new A.DomTagType("a", "anchor");
    B.DomTagType_button_button = new A.DomTagType("button", "button");
    B.DomTagType_div_division = new A.DomTagType("div", "division");
    B.DomTagType_h1_heading1 = new A.DomTagType("h1", "heading1");
    B.DomTagType_h3_heading3 = new A.DomTagType("h3", "heading3");
    B.DomTagType_img_image = new A.DomTagType("img", "image");
    B.DomTagType_input_input = new A.DomTagType("input", "input");
    B.DomTagType_label_label = new A.DomTagType("label", "label");
    B.DomTagType_li_listItem = new A.DomTagType("li", "listItem");
    B.DomTagType_p_paragraph = new A.DomTagType("p", "paragraph");
    B.DomTagType_span_span = new A.DomTagType("span", "span");
    B.DomTagType_ul_unOrderedList = new A.DomTagType("ul", "unOrderedList");
    B.Duration_0 = new A.Duration(0);
    B.Duration_10000000 = new A.Duration(10000000);
    B.InputType_text = new A.InputType("text");
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
    B.Landing_null = new A.Landing(null);
    B.LayoutType_0 = new A.LayoutType("contain");
    B.ListEquality_DeepCollectionEquality = new A.ListEquality(B.C_DeepCollectionEquality, A.findType("ListEquality<Object?>"));
    B.List_2Vk = A._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    B.List_2Zi = A._setArrayType(makeConstList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), type$.JSArray_String);
    B.List_CVk = A._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_JYB = A._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    B.List_KIf = A._setArrayType(makeConstList([0, 0, 26498, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_efn = A._setArrayType(makeConstList([B.DomEventType_click_click, B.DomEventType_dblclick_doubleClick, B.DomEventType_change_change, B.DomEventType_input_input, B.DomEventType_submit_submit, B.DomEventType_keyup_keyUp, B.DomEventType_keydown_keyDown, B.DomEventType_keypress_keyPress, B.DomEventType_drag_drag, B.DomEventType_dragend_dragEnd, B.DomEventType_dragenter_dragEnter, B.DomEventType_dragleave_dragLeave, B.DomEventType_dragover_dragOver, B.DomEventType_dragstart_dragStart, B.DomEventType_drop_drop, B.DomEventType_mousedown_mouseDown, B.DomEventType_mouseenter_mouseEnter, B.DomEventType_mouseleave_mouseLeave, B.DomEventType_mousemove_mouseMove, B.DomEventType_mouseover_mouseOver, B.DomEventType_mouseout_mouseOut, B.DomEventType_mouseup_mouseUp]), type$.JSArray_DomEventType);
    B.List_ego = A._setArrayType(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), type$.JSArray_String);
    B.List_empty1 = A._setArrayType(makeConstList([]), type$.JSArray_$RoomMessageMixin);
    B.List_empty4 = A._setArrayType(makeConstList([]), type$.JSArray_ArgumentNode);
    B.List_empty5 = A._setArrayType(makeConstList([]), type$.JSArray_DefinitionNode);
    B.List_empty6 = A._setArrayType(makeConstList([]), type$.JSArray_DirectiveNode);
    B.List_empty7 = A._setArrayType(makeConstList([]), type$.JSArray_SelectionNode);
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.List_empty8 = A._setArrayType(makeConstList([]), type$.JSArray_VariableDefinitionNode);
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_Widget);
    B.List_empty2 = A._setArrayType(makeConstList([]), type$.JSArray_WidgetUpdateObject);
    B.List_gRj = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_nxB = A._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_qNA = A._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_qg4 = A._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_wSV = A._setArrayType(makeConstList(["bind", "if", "ref", "repeat", "syntax"]), type$.JSArray_String);
    B.List_yrN = A._setArrayType(makeConstList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), type$.JSArray_String);
    B.FieldRename_0 = new A.FieldRename("none");
    B.FieldRename_1 = new A.FieldRename("kebab");
    B.FieldRename_2 = new A.FieldRename("snake");
    B.FieldRename_3 = new A.FieldRename("pascal");
    B.FieldRename_4 = new A.FieldRename("screamingSnake");
    B.Map_RAo53 = new A.GeneralConstantMap([B.FieldRename_0, "none", B.FieldRename_1, "kebab", B.FieldRename_2, "snake", B.FieldRename_3, "pascal", B.FieldRename_4, "screamingSnake"], A.findType("GeneralConstantMap<FieldRename,String>"));
    B.List_empty9 = A._setArrayType(makeConstList([]), type$.JSArray_DomEventType);
    B.Map_empty = new A.ConstantStringMap(0, {}, B.List_empty9, A.findType("ConstantStringMap<DomEventType,~(EmittedEvent)>"));
    B.OperationType_0 = new A.OperationType("query");
    B.OperationType_1 = new A.OperationType("mutation");
    B.OperationType_2 = new A.OperationType("subscription");
    B.Provider_null = new A.Provider(null, A.findType("Provider<Theme>"));
    B.SchedulerTaskType_0 = new A.SchedulerTaskType("build");
    B.SchedulerTaskType_1 = new A.SchedulerTaskType("update");
    B.SchedulerTaskType_2 = new A.SchedulerTaskType("manage");
    B.SchedulerTaskType_3 = new A.SchedulerTaskType("dispose");
    B.SchedulerTaskType_4 = new A.SchedulerTaskType("updateDependent");
    B.SchedulerTaskType_5 = new A.SchedulerTaskType("stimulateListener");
    B.Span_UW6 = new A.Span(null, null, "width:10px;", null, null, null, null, null, null, null, null);
    B.Span_lMQ = new A.Span(null, null, "height:15px;", null, null, null, null, null, null, null, null);
    B.Span_zbf = new A.Span(null, null, "height:10px;", null, null, null, null, null, null, null, null);
    B.Text_OPN = new A.Text(null, null, null, null, null, "", null, null, null, null, null);
    B.Type_ByteBuffer_RkP = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_zNC = A.typeLiteral("ByteData");
    B.Type_Float32List_LB7 = A.typeLiteral("Float32List");
    B.Type_Float64List_LB7 = A.typeLiteral("Float64List");
    B.Type_Int16List_uXf = A.typeLiteral("Int16List");
    B.Type_Int32List_O50 = A.typeLiteral("Int32List");
    B.Type_Int8List_ekJ = A.typeLiteral("Int8List");
    B.Type_JSObject_8k0 = A.typeLiteral("JSObject");
    B.Type_String_k8F = A.typeLiteral("String");
    B.Type_Uint16List_2bx = A.typeLiteral("Uint16List");
    B.Type_Uint32List_2bx = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_Jik = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_WLA = A.typeLiteral("Uint8List");
    B.Type_bool_lhE = A.typeLiteral("bool");
    B.Type_double_K1J = A.typeLiteral("double");
    B.Type_int_tHn = A.typeLiteral("int");
    B.Type_num_cv7 = A.typeLiteral("num");
    B.UpdateType_0 = new A.UpdateType("setState");
    B.UpdateType_1 = new A.UpdateType("dependencyChanged");
    B.UpdateType_2 = new A.UpdateType("visitorUpdate");
    B.UpdateType_3 = new A.UpdateType("undefined");
    B.WidgetAction_0 = new A.WidgetAction("dispose");
    B.WidgetAction_1 = new A.WidgetAction("hideWidget");
    B.WidgetAction_2 = new A.WidgetAction("showWidget");
    B.WidgetAction_3 = new A.WidgetAction("updateWidget");
    B.WidgetAction_4 = new A.WidgetAction("skipRest");
    B.WidgetUpdateType_5 = new A.WidgetUpdateType("cleanParent");
    B.WidgetUpdateObjectActionCleanParent_WidgetUpdateType_5 = new A.WidgetUpdateObjectActionCleanParent(B.WidgetUpdateType_5);
    B.WidgetUpdateType_0 = new A.WidgetUpdateType("add");
    B.WidgetUpdateType_1 = new A.WidgetUpdateType("update");
    B.WidgetUpdateType_2 = new A.WidgetUpdateType("dispose");
    B.WidgetUpdateType_3 = new A.WidgetUpdateType("disposeMultiple");
    B.WidgetUpdateType_4 = new A.WidgetUpdateType("addAllWithoutClean");
    B._IterationMarker_null_2 = new A._IterationMarker(null, 2);
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._toStringVisiting = A._setArrayType([], type$.JSArray_Object);
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultValidator = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Function);
    $.EquatableConfig__stringify = null;
    $.Components__instance = null;
    $.Window__instance = null;
    $.ServicesRegistry__instance = null;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1$1(new A.nullFuture_closure(), A.findType("Future<Null>")));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => type$._Future_Null._as($.$get$nullFuture()));
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$"));
    _lazyFinal($, "DateTime__parseFormat", "$get$DateTime__parseFormat", () => A.RegExp_RegExp("^([+-]?\\d{4,6})-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d+))?)?)?( ?[zZ]| ?([-+])(\\d\\d)(?::?(\\d\\d))?)?)?$"));
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazyFinal($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", () => ({}));
    _lazyFinal($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", () => A.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], type$.String));
    _lazyFinal($, "CssClassSetImpl__validTokenRE", "$get$CssClassSetImpl__validTokenRE", () => A.RegExp_RegExp("^\\S+$"));
    _lazyFinal($, "Device_isOpera", "$get$Device_isOpera", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Opera", 0));
    _lazyFinal($, "Device_isIE", "$get$Device_isIE", () => !A.boolConversionCheck($.$get$Device_isOpera()) && B.JSString_methods.contains$2(A.Device_userAgent(), "Trident/", 0));
    _lazyFinal($, "Device_isFirefox", "$get$Device_isFirefox", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Firefox", 0));
    _lazyFinal($, "Device_cssPrefix", "$get$Device_cssPrefix", () => "-" + $.$get$Device_propertyPrefix() + "-");
    _lazyFinal($, "Device_propertyPrefix", "$get$Device_propertyPrefix", () => {
      if (A.boolConversionCheck($.$get$Device_isFirefox()))
        var t1 = "moz";
      else if ($.$get$Device_isIE())
        t1 = "ms";
      else
        t1 = A.boolConversionCheck($.$get$Device_isOpera()) ? "o" : "webkit";
      return t1;
    });
    _lazyFinal($, "uuid", "$get$uuid", () => new A.Uuid());
    _lazyFinal($, "ChangeNotifier__emptyListeners", "$get$ChangeNotifier__emptyListeners", () => A.List_List$filled(0, null, false, type$.nullable_void_Function));
    _lazyFinal($, "CREATE_USER_MUTATION_DOCUMENT", "$get$CREATE_USER_MUTATION_DOCUMENT", () => {
      var t5, t6, t7, t8, t9, t10, t11, t12, t13, t14,
        _s10_ = "createUser",
        _s4_ = "name", _null = null,
        t1 = A.NameNode$(_s10_),
        t2 = A.VariableNode$(A.NameNode$(_s4_)),
        t3 = A.NamedTypeNode$(false, A.NameNode$("String")),
        t4 = type$.JSArray_DirectiveNode;
      t2 = A._setArrayType([A.VariableDefinitionNode$(A.DefaultValueNode$(_null), A._setArrayType([], t4), t3, t2)], type$.JSArray_VariableDefinitionNode);
      t3 = A._setArrayType([], t4);
      t5 = A.NameNode$(_s10_);
      t6 = type$.JSArray_ArgumentNode;
      t7 = A._setArrayType([A.ArgumentNode$(A.NameNode$(_s4_), A.VariableNode$(A.NameNode$(_s4_)))], t6);
      t8 = A._setArrayType([], t4);
      t9 = A.NameNode$("token");
      t9 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t9, _null);
      t10 = A.NameNode$("user");
      t11 = A._setArrayType([], t6);
      t12 = A._setArrayType([], t4);
      t13 = A.NameNode$("_User");
      t14 = type$.JSArray_SelectionNode;
      t2 = A.OperationDefinitionNode$(t3, t1, A.SelectionSetNode$(A._setArrayType([A.FieldNode$(_null, t7, t8, t5, A.SelectionSetNode$(A._setArrayType([t9, A.FieldNode$(_null, t11, t12, t10, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t4), t13)], t14)))], t14)))], t14)), B.OperationType_1, t2);
      t13 = A.NameNode$("_User");
      t10 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("User")));
      t12 = A._setArrayType([], t4);
      t11 = A.NameNode$("__typename");
      t11 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t11, _null);
      t9 = A.NameNode$("userId");
      t9 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t9, _null);
      t5 = A.NameNode$(_s4_);
      return A.DocumentNode$(A._setArrayType([t2, A.FragmentDefinitionNode$(t12, t13, A.SelectionSetNode$(A._setArrayType([t11, t9, A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t5, _null)], t14)), t10)], type$.JSArray_DefinitionNode));
    });
    _lazyFinal($, "CREATE_ROOM_MUTATION_DOCUMENT", "$get$CREATE_ROOM_MUTATION_DOCUMENT", () => {
      var t10, t11, t12, t13, t14, t15, t16,
        _s10_ = "createRoom",
        _null = null,
        _s10_0 = "__typename",
        t1 = A.NameNode$(_s10_),
        t2 = A._setArrayType([], type$.JSArray_VariableDefinitionNode),
        t3 = type$.JSArray_DirectiveNode,
        t4 = A._setArrayType([], t3),
        t5 = A.NameNode$(_s10_),
        t6 = type$.JSArray_ArgumentNode,
        t7 = A._setArrayType([], t6),
        t8 = A._setArrayType([], t3),
        t9 = A.NameNode$("token");
      t9 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t9, _null);
      t10 = A.NameNode$("room");
      t11 = A._setArrayType([], t6);
      t12 = A._setArrayType([], t3);
      t13 = A.NameNode$("_Room");
      t14 = type$.JSArray_SelectionNode;
      t2 = A.OperationDefinitionNode$(t4, t1, A.SelectionSetNode$(A._setArrayType([A.FieldNode$(_null, t7, t8, t5, A.SelectionSetNode$(A._setArrayType([t9, A.FieldNode$(_null, t11, t12, t10, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t3), t13)], t14)))], t14)))], t14)), B.OperationType_1, t2);
      t13 = A.NameNode$("_Room");
      t10 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("Room")));
      t12 = A._setArrayType([], t3);
      t11 = A.NameNode$(_s10_0);
      t11 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t11, _null);
      t9 = A.NameNode$("roomId");
      t9 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t9, _null);
      t5 = A.NameNode$("lastMessageDate");
      t5 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t5, _null);
      t8 = A.NameNode$("lastUpdateDate");
      t8 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t8, _null);
      t7 = A.NameNode$("createdDate");
      t7 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t7, _null);
      t1 = A.NameNode$("users");
      t4 = A._setArrayType([], t6);
      t15 = A._setArrayType([], t3);
      t16 = A.NameNode$("_User");
      t10 = A.FragmentDefinitionNode$(t12, t13, A.SelectionSetNode$(A._setArrayType([t11, t9, t5, t8, t7, A.FieldNode$(_null, t4, t15, t1, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t3), t16)], t14)))], t14)), t10);
      t16 = A.NameNode$("_User");
      t1 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("User")));
      t15 = A._setArrayType([], t3);
      t4 = A.NameNode$(_s10_0);
      t4 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t4, _null);
      t7 = A.NameNode$("userId");
      t7 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t7, _null);
      t8 = A.NameNode$("name");
      return A.DocumentNode$(A._setArrayType([t2, t10, A.FragmentDefinitionNode$(t15, t16, A.SelectionSetNode$(A._setArrayType([t4, t7, A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t3), t8, _null)], t14)), t1)], type$.JSArray_DefinitionNode));
    });
    _lazyFinal($, "SEND_MESSAGE_ROOM_MUTATION_DOCUMENT", "$get$SEND_MESSAGE_ROOM_MUTATION_DOCUMENT", () => {
      var t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17,
        _s15_ = "sendMessageRoom",
        _s6_ = "roomId", _s6_0 = "String", _null = null,
        _s7_ = "content",
        _s15_0 = "recipientUserId",
        _s12_ = "_RoomMessage",
        _s10_ = "__typename",
        t1 = A.NameNode$(_s15_),
        t2 = A.VariableNode$(A.NameNode$(_s6_)),
        t3 = A.NamedTypeNode$(true, A.NameNode$(_s6_0)),
        t4 = type$.JSArray_DirectiveNode;
      t2 = A.VariableDefinitionNode$(A.DefaultValueNode$(_null), A._setArrayType([], t4), t3, t2);
      t3 = A.VariableNode$(A.NameNode$(_s7_));
      t5 = A.NamedTypeNode$(true, A.NameNode$(_s6_0));
      t3 = A.VariableDefinitionNode$(A.DefaultValueNode$(_null), A._setArrayType([], t4), t5, t3);
      t5 = A.VariableNode$(A.NameNode$(_s15_0));
      t6 = A.NamedTypeNode$(false, A.NameNode$(_s6_0));
      t5 = A._setArrayType([t2, t3, A.VariableDefinitionNode$(A.DefaultValueNode$(_null), A._setArrayType([], t4), t6, t5)], type$.JSArray_VariableDefinitionNode);
      t6 = A._setArrayType([], t4);
      t3 = A.NameNode$(_s15_);
      t2 = type$.JSArray_ArgumentNode;
      t7 = A._setArrayType([A.ArgumentNode$(A.NameNode$(_s6_), A.VariableNode$(A.NameNode$(_s6_))), A.ArgumentNode$(A.NameNode$(_s7_), A.VariableNode$(A.NameNode$(_s7_))), A.ArgumentNode$(A.NameNode$(_s15_0), A.VariableNode$(A.NameNode$(_s15_0)))], t2);
      t8 = A._setArrayType([], t4);
      t9 = A.NameNode$(_s12_);
      t10 = type$.JSArray_SelectionNode;
      t5 = A.OperationDefinitionNode$(t6, t1, A.SelectionSetNode$(A._setArrayType([A.FieldNode$(_null, t7, t8, t3, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t4), t9)], t10)))], t10)), B.OperationType_1, t5);
      t9 = A.NameNode$(_s12_);
      t3 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("RoomMessage")));
      t8 = A._setArrayType([], t4);
      t7 = A.NameNode$(_s10_);
      t7 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t7, _null);
      t1 = A.NameNode$("messageId");
      t1 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t1, _null);
      t6 = A.NameNode$(_s6_);
      t6 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t6, _null);
      t11 = A.NameNode$(_s7_);
      t11 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t11, _null);
      t12 = A.NameNode$("createdDate");
      t12 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t12, _null);
      t13 = A.NameNode$(_s15_0);
      t13 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t13, _null);
      t14 = A.NameNode$("user");
      t15 = A._setArrayType([], t2);
      t16 = A._setArrayType([], t4);
      t17 = A.NameNode$("_User");
      t3 = A.FragmentDefinitionNode$(t8, t9, A.SelectionSetNode$(A._setArrayType([t7, t1, t6, t11, t12, t13, A.FieldNode$(_null, t15, t16, t14, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t4), t17)], t10)))], t10)), t3);
      t17 = A.NameNode$("_User");
      t14 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("User")));
      t16 = A._setArrayType([], t4);
      t15 = A.NameNode$(_s10_);
      t15 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t15, _null);
      t13 = A.NameNode$("userId");
      t13 = A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t13, _null);
      t12 = A.NameNode$("name");
      return A.DocumentNode$(A._setArrayType([t5, t3, A.FragmentDefinitionNode$(t16, t17, A.SelectionSetNode$(A._setArrayType([t15, t13, A.FieldNode$(_null, A._setArrayType([], t2), A._setArrayType([], t4), t12, _null)], t10)), t14)], type$.JSArray_DefinitionNode));
    });
    _lazyFinal($, "EVENTS_ROOM_SUBSCRIPTION_DOCUMENT", "$get$EVENTS_ROOM_SUBSCRIPTION_DOCUMENT", () => {
      var t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18,
        _s10_ = "eventsRoom",
        _s5_ = "token", _null = null,
        _s10_0 = "__typename",
        _s11_ = "RoomMessage",
        _s12_ = "_RoomMessage",
        _s11_0 = "createdDate",
        _s5_0 = "_User",
        t1 = A.NameNode$(_s10_),
        t2 = A.VariableNode$(A.NameNode$(_s5_)),
        t3 = A.NamedTypeNode$(true, A.NameNode$("String")),
        t4 = type$.JSArray_DirectiveNode;
      t2 = A._setArrayType([A.VariableDefinitionNode$(A.DefaultValueNode$(_null), A._setArrayType([], t4), t3, t2)], type$.JSArray_VariableDefinitionNode);
      t3 = A._setArrayType([], t4);
      t5 = A.NameNode$(_s10_);
      t6 = type$.JSArray_ArgumentNode;
      t7 = A._setArrayType([A.ArgumentNode$(A.NameNode$(_s5_), A.VariableNode$(A.NameNode$(_s5_)))], t6);
      t8 = A._setArrayType([], t4);
      t9 = A.NameNode$(_s10_0);
      t9 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t9, _null);
      t10 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("Room")));
      t11 = A._setArrayType([], t4);
      t12 = A.NameNode$("_Room");
      t13 = type$.JSArray_SelectionNode;
      t10 = A.InlineFragmentNode$(t11, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t4), t12)], t13)), t10);
      t12 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$(_s11_)));
      t11 = A._setArrayType([], t4);
      t14 = A.NameNode$(_s12_);
      t2 = A.OperationDefinitionNode$(t3, t1, A.SelectionSetNode$(A._setArrayType([A.FieldNode$(_null, t7, t8, t5, A.SelectionSetNode$(A._setArrayType([t9, t10, A.InlineFragmentNode$(t11, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t4), t14)], t13)), t12)], t13)))], t13)), B.OperationType_2, t2);
      t12 = A.NameNode$("_Room");
      t14 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("Room")));
      t11 = A._setArrayType([], t4);
      t10 = A.NameNode$(_s10_0);
      t10 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t10, _null);
      t9 = A.NameNode$("roomId");
      t9 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t9, _null);
      t5 = A.NameNode$("lastMessageDate");
      t5 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t5, _null);
      t8 = A.NameNode$("lastUpdateDate");
      t8 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t8, _null);
      t7 = A.NameNode$(_s11_0);
      t7 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t7, _null);
      t1 = A.NameNode$("users");
      t3 = A._setArrayType([], t6);
      t15 = A._setArrayType([], t4);
      t16 = A.NameNode$(_s5_0);
      t14 = A.FragmentDefinitionNode$(t11, t12, A.SelectionSetNode$(A._setArrayType([t10, t9, t5, t8, t7, A.FieldNode$(_null, t3, t15, t1, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t4), t16)], t13)))], t13)), t14);
      t16 = A.NameNode$(_s5_0);
      t1 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$("User")));
      t15 = A._setArrayType([], t4);
      t3 = A.NameNode$(_s10_0);
      t3 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t3, _null);
      t7 = A.NameNode$("userId");
      t7 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t7, _null);
      t8 = A.NameNode$("name");
      t1 = A.FragmentDefinitionNode$(t15, t16, A.SelectionSetNode$(A._setArrayType([t3, t7, A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t8, _null)], t13)), t1);
      t8 = A.NameNode$(_s12_);
      t7 = A.TypeConditionNode$(A.NamedTypeNode$(false, A.NameNode$(_s11_)));
      t3 = A._setArrayType([], t4);
      t16 = A.NameNode$(_s10_0);
      t16 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t16, _null);
      t15 = A.NameNode$("messageId");
      t15 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t15, _null);
      t5 = A.NameNode$("roomId");
      t5 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t5, _null);
      t9 = A.NameNode$("content");
      t9 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t9, _null);
      t10 = A.NameNode$(_s11_0);
      t10 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t10, _null);
      t12 = A.NameNode$("recipientUserId");
      t12 = A.FieldNode$(_null, A._setArrayType([], t6), A._setArrayType([], t4), t12, _null);
      t11 = A.NameNode$("user");
      t6 = A._setArrayType([], t6);
      t17 = A._setArrayType([], t4);
      t18 = A.NameNode$(_s5_0);
      return A.DocumentNode$(A._setArrayType([t2, t14, t1, A.FragmentDefinitionNode$(t3, t8, A.SelectionSetNode$(A._setArrayType([t16, t15, t5, t9, t10, t12, A.FieldNode$(_null, t6, t17, t11, A.SelectionSetNode$(A._setArrayType([A.FragmentSpreadNode$(A._setArrayType([], t4), t18)], t13)))], t13)), t7)], type$.JSArray_DefinitionNode));
    });
    _lazyFinal($, "Uuid__byteToHex", "$get$Uuid__byteToHex", () => {
      var i,
        _list = J.JSArray_JSArray$allocateGrowable(256, type$.String);
      for (i = 0; i < 256; ++i)
        _list[i] = B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(i, 16), 2, "0");
      return _list;
    });
    _lazyFinal($, "Uuid__stateExpando", "$get$Uuid__stateExpando", () => new A.Expando(new WeakMap(), A.findType("Expando<Map<String,@>>")));
    _lazyFinal($, "UuidUtil__random", "$get$UuidUtil__random", () => A.Random_Random(null));
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({DOMError: J.JavaScriptObject, IntersectionObserver: J.JavaScriptObject, MediaError: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, Range: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLButtonElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLDivElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLImageElement: A.HtmlElement, HTMLLIElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLLinkElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLMeterElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLOptionElement: A.HtmlElement, HTMLOutputElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLParamElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLProgressElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLScriptElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableCellElement: A.HtmlElement, HTMLTableDataCellElement: A.HtmlElement, HTMLTableHeaderCellElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, HTMLBaseElement: A.BaseElement, Blob: A.Blob, HTMLBodyElement: A.BodyElement, CDATASection: A.CharacterData, CharacterData: A.CharacterData, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, Text: A.CharacterData, CloseEvent: A.CloseEvent, CSSStyleDeclaration: A.CssStyleDeclaration, MSStyleCSSProperties: A.CssStyleDeclaration, CSS2Properties: A.CssStyleDeclaration, XMLDocument: A.Document, Document: A.Document, DOMException: A.DomException, DOMImplementation: A.DomImplementation, DOMTokenList: A.DomTokenList, Element: A.Element, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, ProgressEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, MojoInterfaceRequestEvent: A.Event, ResourceProgressEvent: A.Event, USBConnectionEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, IDBOpenDBRequest: A.EventTarget, IDBVersionChangeRequest: A.EventTarget, IDBRequest: A.EventTarget, EventTarget: A.EventTarget, File: A.File, HTMLFormElement: A.FormElement, History: A.History, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, HTMLDocument: A.HtmlDocument, HTMLInputElement: A.InputElement, KeyboardEvent: A.KeyboardEvent, Location: A.Location, MessageEvent: A.MessageEvent, MessagePort: A.MessagePort, MouseEvent: A.MouseEvent, DragEvent: A.MouseEvent, PointerEvent: A.MouseEvent, WheelEvent: A.MouseEvent, DocumentFragment: A.Node, ShadowRoot: A.Node, DocumentType: A.Node, Node: A.Node, NodeList: A.NodeList, RadioNodeList: A.NodeList, PopStateEvent: A.PopStateEvent, HTMLSelectElement: A.SelectElement, Storage: A.Storage, HTMLTableElement: A.TableElement, HTMLTableRowElement: A.TableRowElement, HTMLTableSectionElement: A.TableSectionElement, HTMLTemplateElement: A.TemplateElement, HTMLTextAreaElement: A.TextAreaElement, CompositionEvent: A.UIEvent, FocusEvent: A.UIEvent, TextEvent: A.UIEvent, TouchEvent: A.UIEvent, UIEvent: A.UIEvent, WebSocket: A.WebSocket, Window: A.Window0, DOMWindow: A.Window0, Attr: A._Attr, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap, IDBVersionChangeEvent: A.VersionChangeEvent, SVGScriptElement: A.ScriptElement0, SVGAElement: A.SvgElement, SVGAnimateElement: A.SvgElement, SVGAnimateMotionElement: A.SvgElement, SVGAnimateTransformElement: A.SvgElement, SVGAnimationElement: A.SvgElement, SVGCircleElement: A.SvgElement, SVGClipPathElement: A.SvgElement, SVGDefsElement: A.SvgElement, SVGDescElement: A.SvgElement, SVGDiscardElement: A.SvgElement, SVGEllipseElement: A.SvgElement, SVGFEBlendElement: A.SvgElement, SVGFEColorMatrixElement: A.SvgElement, SVGFEComponentTransferElement: A.SvgElement, SVGFECompositeElement: A.SvgElement, SVGFEConvolveMatrixElement: A.SvgElement, SVGFEDiffuseLightingElement: A.SvgElement, SVGFEDisplacementMapElement: A.SvgElement, SVGFEDistantLightElement: A.SvgElement, SVGFEFloodElement: A.SvgElement, SVGFEFuncAElement: A.SvgElement, SVGFEFuncBElement: A.SvgElement, SVGFEFuncGElement: A.SvgElement, SVGFEFuncRElement: A.SvgElement, SVGFEGaussianBlurElement: A.SvgElement, SVGFEImageElement: A.SvgElement, SVGFEMergeElement: A.SvgElement, SVGFEMergeNodeElement: A.SvgElement, SVGFEMorphologyElement: A.SvgElement, SVGFEOffsetElement: A.SvgElement, SVGFEPointLightElement: A.SvgElement, SVGFESpecularLightingElement: A.SvgElement, SVGFESpotLightElement: A.SvgElement, SVGFETileElement: A.SvgElement, SVGFETurbulenceElement: A.SvgElement, SVGFilterElement: A.SvgElement, SVGForeignObjectElement: A.SvgElement, SVGGElement: A.SvgElement, SVGGeometryElement: A.SvgElement, SVGGraphicsElement: A.SvgElement, SVGImageElement: A.SvgElement, SVGLineElement: A.SvgElement, SVGLinearGradientElement: A.SvgElement, SVGMarkerElement: A.SvgElement, SVGMaskElement: A.SvgElement, SVGMetadataElement: A.SvgElement, SVGPathElement: A.SvgElement, SVGPatternElement: A.SvgElement, SVGPolygonElement: A.SvgElement, SVGPolylineElement: A.SvgElement, SVGRadialGradientElement: A.SvgElement, SVGRectElement: A.SvgElement, SVGSetElement: A.SvgElement, SVGStopElement: A.SvgElement, SVGStyleElement: A.SvgElement, SVGSVGElement: A.SvgElement, SVGSwitchElement: A.SvgElement, SVGSymbolElement: A.SvgElement, SVGTSpanElement: A.SvgElement, SVGTextContentElement: A.SvgElement, SVGTextElement: A.SvgElement, SVGTextPathElement: A.SvgElement, SVGTextPositioningElement: A.SvgElement, SVGTitleElement: A.SvgElement, SVGUseElement: A.SvgElement, SVGViewElement: A.SvgElement, SVGGradientElement: A.SvgElement, SVGComponentTransferFunctionElement: A.SvgElement, SVGFEDropShadowElement: A.SvgElement, SVGMPathElement: A.SvgElement, SVGElement: A.SvgElement});
    hunkHelpers.setOrUpdateLeafTags({DOMError: true, IntersectionObserver: true, MediaError: true, Navigator: true, NavigatorConcurrentHardware: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, GeolocationPositionError: true, Range: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLDivElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, HTMLAnchorElement: true, HTMLAreaElement: true, HTMLBaseElement: true, Blob: false, HTMLBodyElement: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, CloseEvent: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, XMLDocument: true, Document: false, DOMException: true, DOMImplementation: true, DOMTokenList: true, Element: false, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, EventTarget: false, File: true, HTMLFormElement: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, HTMLDocument: true, HTMLInputElement: true, KeyboardEvent: true, Location: true, MessageEvent: true, MessagePort: true, MouseEvent: true, DragEvent: true, PointerEvent: true, WheelEvent: true, DocumentFragment: true, ShadowRoot: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, PopStateEvent: true, HTMLSelectElement: true, Storage: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, CompositionEvent: true, FocusEvent: true, TextEvent: true, TouchEvent: true, UIEvent: false, WebSocket: true, Window: true, DOMWindow: true, Attr: true, NamedNodeMap: true, MozNamedAttrMap: true, IDBVersionChangeEvent: true, SVGScriptElement: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, SVGElement: false});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
